
Sensors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000636  00800200  0000748c  00007520  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000748c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000286  00800836  00800836  00007b56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00007b56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007bb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000ba0  00000000  00000000  00007bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a88b  00000000  00000000  00008794  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003252  00000000  00000000  0001301f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000071fd  00000000  00000000  00016271  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002654  00000000  00000000  0001d470  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003f5d  00000000  00000000  0001fac4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000066ae  00000000  00000000  00023a21  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009d0  00000000  00000000  0002a0cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f6 c0       	rjmp	.+492    	; 0x1ee <__ctors_end>
       2:	00 00       	nop
       4:	15 c1       	rjmp	.+554    	; 0x230 <__bad_interrupt>
       6:	00 00       	nop
       8:	13 c1       	rjmp	.+550    	; 0x230 <__bad_interrupt>
       a:	00 00       	nop
       c:	11 c1       	rjmp	.+546    	; 0x230 <__bad_interrupt>
       e:	00 00       	nop
      10:	0f c1       	rjmp	.+542    	; 0x230 <__bad_interrupt>
      12:	00 00       	nop
      14:	0d c1       	rjmp	.+538    	; 0x230 <__bad_interrupt>
      16:	00 00       	nop
      18:	0b c1       	rjmp	.+534    	; 0x230 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	09 c1       	rjmp	.+530    	; 0x230 <__bad_interrupt>
      1e:	00 00       	nop
      20:	07 c1       	rjmp	.+526    	; 0x230 <__bad_interrupt>
      22:	00 00       	nop
      24:	05 c1       	rjmp	.+522    	; 0x230 <__bad_interrupt>
      26:	00 00       	nop
      28:	03 c1       	rjmp	.+518    	; 0x230 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	01 c1       	rjmp	.+514    	; 0x230 <__bad_interrupt>
      2e:	00 00       	nop
      30:	fd c5       	rjmp	.+3066   	; 0xc2c <__vector_12>
      32:	00 00       	nop
      34:	fd c0       	rjmp	.+506    	; 0x230 <__bad_interrupt>
      36:	00 00       	nop
      38:	fb c0       	rjmp	.+502    	; 0x230 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f9 c0       	rjmp	.+498    	; 0x230 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f7 c0       	rjmp	.+494    	; 0x230 <__bad_interrupt>
      42:	00 00       	nop
      44:	f5 c0       	rjmp	.+490    	; 0x230 <__bad_interrupt>
      46:	00 00       	nop
      48:	f3 c0       	rjmp	.+486    	; 0x230 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f1 c0       	rjmp	.+482    	; 0x230 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ef c0       	rjmp	.+478    	; 0x230 <__bad_interrupt>
      52:	00 00       	nop
      54:	ed c0       	rjmp	.+474    	; 0x230 <__bad_interrupt>
      56:	00 00       	nop
      58:	eb c0       	rjmp	.+470    	; 0x230 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e9 c0       	rjmp	.+466    	; 0x230 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e7 c0       	rjmp	.+462    	; 0x230 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 fb 27 	jmp	0x4ff6	; 0x4ff6 <__vector_25>
      68:	0c 94 4d 28 	jmp	0x509a	; 0x509a <__vector_26>
      6c:	e1 c0       	rjmp	.+450    	; 0x230 <__bad_interrupt>
      6e:	00 00       	nop
      70:	df c0       	rjmp	.+446    	; 0x230 <__bad_interrupt>
      72:	00 00       	nop
      74:	dd c0       	rjmp	.+442    	; 0x230 <__bad_interrupt>
      76:	00 00       	nop
      78:	db c0       	rjmp	.+438    	; 0x230 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d9 c0       	rjmp	.+434    	; 0x230 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d7 c0       	rjmp	.+430    	; 0x230 <__bad_interrupt>
      82:	00 00       	nop
      84:	d5 c0       	rjmp	.+426    	; 0x230 <__bad_interrupt>
      86:	00 00       	nop
      88:	d3 c0       	rjmp	.+422    	; 0x230 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d1 c0       	rjmp	.+418    	; 0x230 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 91 28 	jmp	0x5122	; 0x5122 <__vector_36>
      94:	0c 94 e3 28 	jmp	0x51c6	; 0x51c6 <__vector_37>
      98:	cb c0       	rjmp	.+406    	; 0x230 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 ab 32 	jmp	0x6556	; 0x6556 <__vector_39>
      a0:	c7 c0       	rjmp	.+398    	; 0x230 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	c5 c0       	rjmp	.+394    	; 0x230 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	c3 c0       	rjmp	.+390    	; 0x230 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c1 c0       	rjmp	.+386    	; 0x230 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	bf c0       	rjmp	.+382    	; 0x230 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	bd c0       	rjmp	.+378    	; 0x230 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	bb c0       	rjmp	.+374    	; 0x230 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b9 c0       	rjmp	.+370    	; 0x230 <__bad_interrupt>
      be:	00 00       	nop
      c0:	b7 c0       	rjmp	.+366    	; 0x230 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	b5 c0       	rjmp	.+362    	; 0x230 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	b3 c0       	rjmp	.+358    	; 0x230 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 27 29 	jmp	0x524e	; 0x524e <__vector_51>
      d0:	0c 94 79 29 	jmp	0x52f2	; 0x52f2 <__vector_52>
      d4:	ad c0       	rjmp	.+346    	; 0x230 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 bd 29 	jmp	0x537a	; 0x537a <__vector_54>
      dc:	0c 94 0f 2a 	jmp	0x541e	; 0x541e <__vector_55>
      e0:	a7 c0       	rjmp	.+334    	; 0x230 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	a1 1f       	adc	r26, r17
      e6:	a1 1f       	adc	r26, r17
      e8:	a1 1f       	adc	r26, r17
      ea:	ec 1f       	adc	r30, r28
      ec:	f8 1f       	adc	r31, r24
      ee:	1e 20       	and	r1, r14
      f0:	a1 1f       	adc	r26, r17
      f2:	a1 1f       	adc	r26, r17
      f4:	ec 1f       	adc	r30, r28
      f6:	f8 1f       	adc	r31, r24
      f8:	cd 32       	cpi	r28, 0x2D	; 45
      fa:	3d 33       	cpi	r19, 0x3D	; 61
      fc:	3d 33       	cpi	r19, 0x3D	; 61
      fe:	3d 33       	cpi	r19, 0x3D	; 61
     100:	3d 33       	cpi	r19, 0x3D	; 61
     102:	3d 33       	cpi	r19, 0x3D	; 61
     104:	3d 33       	cpi	r19, 0x3D	; 61
     106:	3d 33       	cpi	r19, 0x3D	; 61
     108:	cd 32       	cpi	r28, 0x2D	; 45
     10a:	3d 33       	cpi	r19, 0x3D	; 61
     10c:	3d 33       	cpi	r19, 0x3D	; 61
     10e:	3d 33       	cpi	r19, 0x3D	; 61
     110:	3d 33       	cpi	r19, 0x3D	; 61
     112:	3d 33       	cpi	r19, 0x3D	; 61
     114:	3d 33       	cpi	r19, 0x3D	; 61
     116:	3d 33       	cpi	r19, 0x3D	; 61
     118:	cf 32       	cpi	r28, 0x2F	; 47
     11a:	3d 33       	cpi	r19, 0x3D	; 61
     11c:	3d 33       	cpi	r19, 0x3D	; 61
     11e:	3d 33       	cpi	r19, 0x3D	; 61
     120:	3d 33       	cpi	r19, 0x3D	; 61
     122:	3d 33       	cpi	r19, 0x3D	; 61
     124:	3d 33       	cpi	r19, 0x3D	; 61
     126:	3d 33       	cpi	r19, 0x3D	; 61
     128:	3d 33       	cpi	r19, 0x3D	; 61
     12a:	3d 33       	cpi	r19, 0x3D	; 61
     12c:	3d 33       	cpi	r19, 0x3D	; 61
     12e:	3d 33       	cpi	r19, 0x3D	; 61
     130:	3d 33       	cpi	r19, 0x3D	; 61
     132:	3d 33       	cpi	r19, 0x3D	; 61
     134:	3d 33       	cpi	r19, 0x3D	; 61
     136:	3d 33       	cpi	r19, 0x3D	; 61
     138:	cf 32       	cpi	r28, 0x2F	; 47
     13a:	3d 33       	cpi	r19, 0x3D	; 61
     13c:	3d 33       	cpi	r19, 0x3D	; 61
     13e:	3d 33       	cpi	r19, 0x3D	; 61
     140:	3d 33       	cpi	r19, 0x3D	; 61
     142:	3d 33       	cpi	r19, 0x3D	; 61
     144:	3d 33       	cpi	r19, 0x3D	; 61
     146:	3d 33       	cpi	r19, 0x3D	; 61
     148:	3d 33       	cpi	r19, 0x3D	; 61
     14a:	3d 33       	cpi	r19, 0x3D	; 61
     14c:	3d 33       	cpi	r19, 0x3D	; 61
     14e:	3d 33       	cpi	r19, 0x3D	; 61
     150:	3d 33       	cpi	r19, 0x3D	; 61
     152:	3d 33       	cpi	r19, 0x3D	; 61
     154:	3d 33       	cpi	r19, 0x3D	; 61
     156:	3d 33       	cpi	r19, 0x3D	; 61
     158:	39 33       	cpi	r19, 0x39	; 57
     15a:	3d 33       	cpi	r19, 0x3D	; 61
     15c:	3d 33       	cpi	r19, 0x3D	; 61
     15e:	3d 33       	cpi	r19, 0x3D	; 61
     160:	3d 33       	cpi	r19, 0x3D	; 61
     162:	3d 33       	cpi	r19, 0x3D	; 61
     164:	3d 33       	cpi	r19, 0x3D	; 61
     166:	3d 33       	cpi	r19, 0x3D	; 61
     168:	04 33       	cpi	r16, 0x34	; 52
     16a:	3d 33       	cpi	r19, 0x3D	; 61
     16c:	3d 33       	cpi	r19, 0x3D	; 61
     16e:	3d 33       	cpi	r19, 0x3D	; 61
     170:	3d 33       	cpi	r19, 0x3D	; 61
     172:	3d 33       	cpi	r19, 0x3D	; 61
     174:	3d 33       	cpi	r19, 0x3D	; 61
     176:	3d 33       	cpi	r19, 0x3D	; 61
     178:	3d 33       	cpi	r19, 0x3D	; 61
     17a:	3d 33       	cpi	r19, 0x3D	; 61
     17c:	3d 33       	cpi	r19, 0x3D	; 61
     17e:	3d 33       	cpi	r19, 0x3D	; 61
     180:	3d 33       	cpi	r19, 0x3D	; 61
     182:	3d 33       	cpi	r19, 0x3D	; 61
     184:	3d 33       	cpi	r19, 0x3D	; 61
     186:	3d 33       	cpi	r19, 0x3D	; 61
     188:	f8 32       	cpi	r31, 0x28	; 40
     18a:	3d 33       	cpi	r19, 0x3D	; 61
     18c:	3d 33       	cpi	r19, 0x3D	; 61
     18e:	3d 33       	cpi	r19, 0x3D	; 61
     190:	3d 33       	cpi	r19, 0x3D	; 61
     192:	3d 33       	cpi	r19, 0x3D	; 61
     194:	3d 33       	cpi	r19, 0x3D	; 61
     196:	3d 33       	cpi	r19, 0x3D	; 61
     198:	1c 33       	cpi	r17, 0x3C	; 60

0000019a <prvIdleTask>:
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	1f 92       	push	r1
     1a0:	1f 92       	push	r1
     1a2:	cd b7       	in	r28, 0x3d	; 61
     1a4:	de b7       	in	r29, 0x3e	; 62
     1a6:	9a 83       	std	Y+2, r25	; 0x02
     1a8:	89 83       	std	Y+1, r24	; 0x01
     1aa:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <prvCheckTasksWaitingTermination>
     1ae:	80 91 38 08 	lds	r24, 0x0838	; 0x800838 <pxReadyTasksLists>
     1b2:	82 30       	cpi	r24, 0x02	; 2
     1b4:	08 f0       	brcs	.+2      	; 0x1b8 <prvIdleTask+0x1e>
     1b6:	4f d4       	rcall	.+2206   	; 0xa56 <vPortYield>
     1b8:	0e 94 24 21 	call	0x4248	; 0x4248 <vApplicationIdleHook>
     1bc:	f6 cf       	rjmp	.-20     	; 0x1aa <prvIdleTask+0x10>

000001be <prvTimerTask>:
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
     1c2:	00 d0       	rcall	.+0      	; 0x1c4 <prvTimerTask+0x6>
     1c4:	1f 92       	push	r1
     1c6:	1f 92       	push	r1
     1c8:	cd b7       	in	r28, 0x3d	; 61
     1ca:	de b7       	in	r29, 0x3e	; 62
     1cc:	9d 83       	std	Y+5, r25	; 0x05
     1ce:	8c 83       	std	Y+4, r24	; 0x04
     1d0:	ce 01       	movw	r24, r28
     1d2:	03 96       	adiw	r24, 0x03	; 3
     1d4:	0e 94 8f 1e 	call	0x3d1e	; 0x3d1e <prvGetNextExpireTime>
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	2b 81       	ldd	r18, Y+3	; 0x03
     1de:	89 81       	ldd	r24, Y+1	; 0x01
     1e0:	9a 81       	ldd	r25, Y+2	; 0x02
     1e2:	62 2f       	mov	r22, r18
     1e4:	0e 94 3a 1e 	call	0x3c74	; 0x3c74 <prvProcessTimerOrBlockTask>
     1e8:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <prvProcessReceivedCommands>
     1ec:	f1 cf       	rjmp	.-30     	; 0x1d0 <prvTimerTask+0x12>

000001ee <__ctors_end>:
     1ee:	11 24       	eor	r1, r1
     1f0:	1f be       	out	0x3f, r1	; 63
     1f2:	cf ef       	ldi	r28, 0xFF	; 255
     1f4:	d1 e2       	ldi	r29, 0x21	; 33
     1f6:	de bf       	out	0x3e, r29	; 62
     1f8:	cd bf       	out	0x3d, r28	; 61
     1fa:	00 e0       	ldi	r16, 0x00	; 0
     1fc:	0c bf       	out	0x3c, r16	; 60

000001fe <__do_copy_data>:
     1fe:	18 e0       	ldi	r17, 0x08	; 8
     200:	a0 e0       	ldi	r26, 0x00	; 0
     202:	b2 e0       	ldi	r27, 0x02	; 2
     204:	ec e8       	ldi	r30, 0x8C	; 140
     206:	f4 e7       	ldi	r31, 0x74	; 116
     208:	00 e0       	ldi	r16, 0x00	; 0
     20a:	0b bf       	out	0x3b, r16	; 59
     20c:	02 c0       	rjmp	.+4      	; 0x212 <__do_copy_data+0x14>
     20e:	07 90       	elpm	r0, Z+
     210:	0d 92       	st	X+, r0
     212:	a6 33       	cpi	r26, 0x36	; 54
     214:	b1 07       	cpc	r27, r17
     216:	d9 f7       	brne	.-10     	; 0x20e <__do_copy_data+0x10>

00000218 <__do_clear_bss>:
     218:	2a e0       	ldi	r18, 0x0A	; 10
     21a:	a6 e3       	ldi	r26, 0x36	; 54
     21c:	b8 e0       	ldi	r27, 0x08	; 8
     21e:	01 c0       	rjmp	.+2      	; 0x222 <.do_clear_bss_start>

00000220 <.do_clear_bss_loop>:
     220:	1d 92       	st	X+, r1

00000222 <.do_clear_bss_start>:
     222:	ac 3b       	cpi	r26, 0xBC	; 188
     224:	b2 07       	cpc	r27, r18
     226:	e1 f7       	brne	.-8      	; 0x220 <.do_clear_bss_loop>
     228:	0e 94 68 26 	call	0x4cd0	; 0x4cd0 <main>
     22c:	0c 94 44 3a 	jmp	0x7488	; 0x7488 <_exit>

00000230 <__bad_interrupt>:
     230:	e7 ce       	rjmp	.-562    	; 0x0 <__vectors>

00000232 <measure_co2_callback>:

uint16_t co2_value;


void measure_co2_callback(uint16_t ppm)
{
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
     236:	1f 92       	push	r1
     238:	1f 92       	push	r1
     23a:	cd b7       	in	r28, 0x3d	; 61
     23c:	de b7       	in	r29, 0x3e	; 62
     23e:	9a 83       	std	Y+2, r25	; 0x02
     240:	89 83       	std	Y+1, r24	; 0x01
	co2_value = ppm;
     242:	89 81       	ldd	r24, Y+1	; 0x01
     244:	9a 81       	ldd	r25, Y+2	; 0x02
     246:	90 93 8d 0a 	sts	0x0A8D, r25	; 0x800a8d <co2_value+0x1>
     24a:	80 93 8c 0a 	sts	0x0A8C, r24	; 0x800a8c <co2_value>
     24e:	00 00       	nop
     250:	0f 90       	pop	r0
     252:	0f 90       	pop	r0
     254:	df 91       	pop	r29
     256:	cf 91       	pop	r28
     258:	08 95       	ret

0000025a <timer_callback>:
 *  Author: drags
 */ 
#include "../Headers/m_lora_includes.h"

void timer_callback(TimerHandle_t pxTimer)
{
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	1f 92       	push	r1
     260:	1f 92       	push	r1
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	9a 83       	std	Y+2, r25	; 0x02
     268:	89 83       	std	Y+1, r24	; 0x01
	xSemaphoreGive(xSemaphore_temperature);
     26a:	80 91 94 0a 	lds	r24, 0x0A94	; 0x800a94 <xSemaphore_temperature>
     26e:	90 91 95 0a 	lds	r25, 0x0A95	; 0x800a95 <xSemaphore_temperature+0x1>
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	40 e0       	ldi	r20, 0x00	; 0
     276:	50 e0       	ldi	r21, 0x00	; 0
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	70 e0       	ldi	r23, 0x00	; 0
     27c:	42 d6       	rcall	.+3204   	; 0xf02 <xQueueGenericSend>

	xSemaphoreGive(xSemaphore_co2);
     27e:	80 91 96 0a 	lds	r24, 0x0A96	; 0x800a96 <xSemaphore_co2>
     282:	90 91 97 0a 	lds	r25, 0x0A97	; 0x800a97 <xSemaphore_co2+0x1>
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	40 e0       	ldi	r20, 0x00	; 0
     28a:	50 e0       	ldi	r21, 0x00	; 0
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	70 e0       	ldi	r23, 0x00	; 0
     290:	38 d6       	rcall	.+3184   	; 0xf02 <xQueueGenericSend>
	
	xSemaphoreGive(xSemaphore_send_data);
     292:	80 91 98 0a 	lds	r24, 0x0A98	; 0x800a98 <xSemaphore_send_data>
     296:	90 91 99 0a 	lds	r25, 0x0A99	; 0x800a99 <xSemaphore_send_data+0x1>
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	40 e0       	ldi	r20, 0x00	; 0
     29e:	50 e0       	ldi	r21, 0x00	; 0
     2a0:	60 e0       	ldi	r22, 0x00	; 0
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	2e d6       	rcall	.+3164   	; 0xf02 <xQueueGenericSend>
	
     2a6:	00 00       	nop
     2a8:	0f 90       	pop	r0
     2aa:	0f 90       	pop	r0
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <task_switch_in>:
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	1f 92       	push	r1
     2b8:	cd b7       	in	r28, 0x3d	; 61
     2ba:	de b7       	in	r29, 0x3e	; 62
     2bc:	89 83       	std	Y+1, r24	; 0x01
     2be:	88 e0       	ldi	r24, 0x08	; 8
     2c0:	91 e0       	ldi	r25, 0x01	; 1
     2c2:	28 e0       	ldi	r18, 0x08	; 8
     2c4:	31 e0       	ldi	r19, 0x01	; 1
     2c6:	f9 01       	movw	r30, r18
     2c8:	20 81       	ld	r18, Z
     2ca:	20 7f       	andi	r18, 0xF0	; 240
     2cc:	fc 01       	movw	r30, r24
     2ce:	20 83       	st	Z, r18
     2d0:	88 e0       	ldi	r24, 0x08	; 8
     2d2:	91 e0       	ldi	r25, 0x01	; 1
     2d4:	28 e0       	ldi	r18, 0x08	; 8
     2d6:	31 e0       	ldi	r19, 0x01	; 1
     2d8:	f9 01       	movw	r30, r18
     2da:	20 81       	ld	r18, Z
     2dc:	32 2f       	mov	r19, r18
     2de:	29 81       	ldd	r18, Y+1	; 0x01
     2e0:	2f 70       	andi	r18, 0x0F	; 15
     2e2:	23 2b       	or	r18, r19
     2e4:	fc 01       	movw	r30, r24
     2e6:	20 83       	st	Z, r18
     2e8:	00 00       	nop
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <task_switch_out>:
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	1f 92       	push	r1
     2f8:	cd b7       	in	r28, 0x3d	; 61
     2fa:	de b7       	in	r29, 0x3e	; 62
     2fc:	89 83       	std	Y+1, r24	; 0x01
     2fe:	88 e0       	ldi	r24, 0x08	; 8
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	28 e0       	ldi	r18, 0x08	; 8
     304:	31 e0       	ldi	r19, 0x01	; 1
     306:	f9 01       	movw	r30, r18
     308:	20 81       	ld	r18, Z
     30a:	20 7f       	andi	r18, 0xF0	; 240
     30c:	fc 01       	movw	r30, r24
     30e:	20 83       	st	Z, r18
     310:	00 00       	nop
     312:	0f 90       	pop	r0
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	08 95       	ret

0000031a <pvPortMalloc>:
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	00 d0       	rcall	.+0      	; 0x320 <pvPortMalloc+0x6>
     320:	1f 92       	push	r1
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	9c 83       	std	Y+4, r25	; 0x04
     328:	8b 83       	std	Y+3, r24	; 0x03
     32a:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
     32e:	8b 81       	ldd	r24, Y+3	; 0x03
     330:	9c 81       	ldd	r25, Y+4	; 0x04
     332:	0e 94 c7 35 	call	0x6b8e	; 0x6b8e <malloc>
     336:	9a 83       	std	Y+2, r25	; 0x02
     338:	89 83       	std	Y+1, r24	; 0x01
     33a:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	9a 81       	ldd	r25, Y+2	; 0x02
     342:	89 2b       	or	r24, r25
     344:	11 f4       	brne	.+4      	; 0x34a <pvPortMalloc+0x30>
     346:	0e 94 2c 21 	call	0x4258	; 0x4258 <vApplicationMallocFailedHook>
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	9a 81       	ldd	r25, Y+2	; 0x02
     34e:	0f 90       	pop	r0
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	0f 90       	pop	r0
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <vPortFree>:
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	1f 92       	push	r1
     362:	1f 92       	push	r1
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
     368:	9a 83       	std	Y+2, r25	; 0x02
     36a:	89 83       	std	Y+1, r24	; 0x01
     36c:	89 81       	ldd	r24, Y+1	; 0x01
     36e:	9a 81       	ldd	r25, Y+2	; 0x02
     370:	89 2b       	or	r24, r25
     372:	41 f0       	breq	.+16     	; 0x384 <vPortFree+0x28>
     374:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	0e 94 5f 36 	call	0x6cbe	; 0x6cbe <free>
     380:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
     384:	00 00       	nop
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	08 95       	ret

00000390 <vListInitialise>:
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	1f 92       	push	r1
     396:	1f 92       	push	r1
     398:	cd b7       	in	r28, 0x3d	; 61
     39a:	de b7       	in	r29, 0x3e	; 62
     39c:	9a 83       	std	Y+2, r25	; 0x02
     39e:	89 83       	std	Y+1, r24	; 0x01
     3a0:	89 81       	ldd	r24, Y+1	; 0x01
     3a2:	9a 81       	ldd	r25, Y+2	; 0x02
     3a4:	9c 01       	movw	r18, r24
     3a6:	2d 5f       	subi	r18, 0xFD	; 253
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	89 81       	ldd	r24, Y+1	; 0x01
     3ac:	9a 81       	ldd	r25, Y+2	; 0x02
     3ae:	fc 01       	movw	r30, r24
     3b0:	32 83       	std	Z+2, r19	; 0x02
     3b2:	21 83       	std	Z+1, r18	; 0x01
     3b4:	89 81       	ldd	r24, Y+1	; 0x01
     3b6:	9a 81       	ldd	r25, Y+2	; 0x02
     3b8:	2f ef       	ldi	r18, 0xFF	; 255
     3ba:	3f ef       	ldi	r19, 0xFF	; 255
     3bc:	fc 01       	movw	r30, r24
     3be:	34 83       	std	Z+4, r19	; 0x04
     3c0:	23 83       	std	Z+3, r18	; 0x03
     3c2:	89 81       	ldd	r24, Y+1	; 0x01
     3c4:	9a 81       	ldd	r25, Y+2	; 0x02
     3c6:	9c 01       	movw	r18, r24
     3c8:	2d 5f       	subi	r18, 0xFD	; 253
     3ca:	3f 4f       	sbci	r19, 0xFF	; 255
     3cc:	89 81       	ldd	r24, Y+1	; 0x01
     3ce:	9a 81       	ldd	r25, Y+2	; 0x02
     3d0:	fc 01       	movw	r30, r24
     3d2:	36 83       	std	Z+6, r19	; 0x06
     3d4:	25 83       	std	Z+5, r18	; 0x05
     3d6:	89 81       	ldd	r24, Y+1	; 0x01
     3d8:	9a 81       	ldd	r25, Y+2	; 0x02
     3da:	9c 01       	movw	r18, r24
     3dc:	2d 5f       	subi	r18, 0xFD	; 253
     3de:	3f 4f       	sbci	r19, 0xFF	; 255
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	9a 81       	ldd	r25, Y+2	; 0x02
     3e4:	fc 01       	movw	r30, r24
     3e6:	30 87       	std	Z+8, r19	; 0x08
     3e8:	27 83       	std	Z+7, r18	; 0x07
     3ea:	89 81       	ldd	r24, Y+1	; 0x01
     3ec:	9a 81       	ldd	r25, Y+2	; 0x02
     3ee:	fc 01       	movw	r30, r24
     3f0:	10 82       	st	Z, r1
     3f2:	00 00       	nop
     3f4:	0f 90       	pop	r0
     3f6:	0f 90       	pop	r0
     3f8:	df 91       	pop	r29
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <vListInitialiseItem>:
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	1f 92       	push	r1
     404:	1f 92       	push	r1
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	9a 83       	std	Y+2, r25	; 0x02
     40c:	89 83       	std	Y+1, r24	; 0x01
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	9a 81       	ldd	r25, Y+2	; 0x02
     412:	fc 01       	movw	r30, r24
     414:	11 86       	std	Z+9, r1	; 0x09
     416:	10 86       	std	Z+8, r1	; 0x08
     418:	00 00       	nop
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	08 95       	ret

00000424 <vListInsertEnd>:
     424:	cf 93       	push	r28
     426:	df 93       	push	r29
     428:	00 d0       	rcall	.+0      	; 0x42a <vListInsertEnd+0x6>
     42a:	00 d0       	rcall	.+0      	; 0x42c <vListInsertEnd+0x8>
     42c:	cd b7       	in	r28, 0x3d	; 61
     42e:	de b7       	in	r29, 0x3e	; 62
     430:	9c 83       	std	Y+4, r25	; 0x04
     432:	8b 83       	std	Y+3, r24	; 0x03
     434:	7e 83       	std	Y+6, r23	; 0x06
     436:	6d 83       	std	Y+5, r22	; 0x05
     438:	8b 81       	ldd	r24, Y+3	; 0x03
     43a:	9c 81       	ldd	r25, Y+4	; 0x04
     43c:	fc 01       	movw	r30, r24
     43e:	81 81       	ldd	r24, Z+1	; 0x01
     440:	92 81       	ldd	r25, Z+2	; 0x02
     442:	9a 83       	std	Y+2, r25	; 0x02
     444:	89 83       	std	Y+1, r24	; 0x01
     446:	8d 81       	ldd	r24, Y+5	; 0x05
     448:	9e 81       	ldd	r25, Y+6	; 0x06
     44a:	29 81       	ldd	r18, Y+1	; 0x01
     44c:	3a 81       	ldd	r19, Y+2	; 0x02
     44e:	fc 01       	movw	r30, r24
     450:	33 83       	std	Z+3, r19	; 0x03
     452:	22 83       	std	Z+2, r18	; 0x02
     454:	89 81       	ldd	r24, Y+1	; 0x01
     456:	9a 81       	ldd	r25, Y+2	; 0x02
     458:	fc 01       	movw	r30, r24
     45a:	24 81       	ldd	r18, Z+4	; 0x04
     45c:	35 81       	ldd	r19, Z+5	; 0x05
     45e:	8d 81       	ldd	r24, Y+5	; 0x05
     460:	9e 81       	ldd	r25, Y+6	; 0x06
     462:	fc 01       	movw	r30, r24
     464:	35 83       	std	Z+5, r19	; 0x05
     466:	24 83       	std	Z+4, r18	; 0x04
     468:	89 81       	ldd	r24, Y+1	; 0x01
     46a:	9a 81       	ldd	r25, Y+2	; 0x02
     46c:	fc 01       	movw	r30, r24
     46e:	84 81       	ldd	r24, Z+4	; 0x04
     470:	95 81       	ldd	r25, Z+5	; 0x05
     472:	2d 81       	ldd	r18, Y+5	; 0x05
     474:	3e 81       	ldd	r19, Y+6	; 0x06
     476:	fc 01       	movw	r30, r24
     478:	33 83       	std	Z+3, r19	; 0x03
     47a:	22 83       	std	Z+2, r18	; 0x02
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	9a 81       	ldd	r25, Y+2	; 0x02
     480:	2d 81       	ldd	r18, Y+5	; 0x05
     482:	3e 81       	ldd	r19, Y+6	; 0x06
     484:	fc 01       	movw	r30, r24
     486:	35 83       	std	Z+5, r19	; 0x05
     488:	24 83       	std	Z+4, r18	; 0x04
     48a:	8d 81       	ldd	r24, Y+5	; 0x05
     48c:	9e 81       	ldd	r25, Y+6	; 0x06
     48e:	2b 81       	ldd	r18, Y+3	; 0x03
     490:	3c 81       	ldd	r19, Y+4	; 0x04
     492:	fc 01       	movw	r30, r24
     494:	31 87       	std	Z+9, r19	; 0x09
     496:	20 87       	std	Z+8, r18	; 0x08
     498:	8b 81       	ldd	r24, Y+3	; 0x03
     49a:	9c 81       	ldd	r25, Y+4	; 0x04
     49c:	fc 01       	movw	r30, r24
     49e:	80 81       	ld	r24, Z
     4a0:	21 e0       	ldi	r18, 0x01	; 1
     4a2:	28 0f       	add	r18, r24
     4a4:	8b 81       	ldd	r24, Y+3	; 0x03
     4a6:	9c 81       	ldd	r25, Y+4	; 0x04
     4a8:	fc 01       	movw	r30, r24
     4aa:	20 83       	st	Z, r18
     4ac:	00 00       	nop
     4ae:	26 96       	adiw	r28, 0x06	; 6
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	f8 94       	cli
     4b4:	de bf       	out	0x3e, r29	; 62
     4b6:	0f be       	out	0x3f, r0	; 63
     4b8:	cd bf       	out	0x3d, r28	; 61
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	08 95       	ret

000004c0 <vListInsert>:
     4c0:	cf 93       	push	r28
     4c2:	df 93       	push	r29
     4c4:	cd b7       	in	r28, 0x3d	; 61
     4c6:	de b7       	in	r29, 0x3e	; 62
     4c8:	28 97       	sbiw	r28, 0x08	; 8
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
     4d4:	9e 83       	std	Y+6, r25	; 0x06
     4d6:	8d 83       	std	Y+5, r24	; 0x05
     4d8:	78 87       	std	Y+8, r23	; 0x08
     4da:	6f 83       	std	Y+7, r22	; 0x07
     4dc:	8f 81       	ldd	r24, Y+7	; 0x07
     4de:	98 85       	ldd	r25, Y+8	; 0x08
     4e0:	fc 01       	movw	r30, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	91 81       	ldd	r25, Z+1	; 0x01
     4e6:	9c 83       	std	Y+4, r25	; 0x04
     4e8:	8b 83       	std	Y+3, r24	; 0x03
     4ea:	8b 81       	ldd	r24, Y+3	; 0x03
     4ec:	9c 81       	ldd	r25, Y+4	; 0x04
     4ee:	01 96       	adiw	r24, 0x01	; 1
     4f0:	41 f4       	brne	.+16     	; 0x502 <vListInsert+0x42>
     4f2:	8d 81       	ldd	r24, Y+5	; 0x05
     4f4:	9e 81       	ldd	r25, Y+6	; 0x06
     4f6:	fc 01       	movw	r30, r24
     4f8:	87 81       	ldd	r24, Z+7	; 0x07
     4fa:	90 85       	ldd	r25, Z+8	; 0x08
     4fc:	9a 83       	std	Y+2, r25	; 0x02
     4fe:	89 83       	std	Y+1, r24	; 0x01
     500:	1a c0       	rjmp	.+52     	; 0x536 <vListInsert+0x76>
     502:	8d 81       	ldd	r24, Y+5	; 0x05
     504:	9e 81       	ldd	r25, Y+6	; 0x06
     506:	03 96       	adiw	r24, 0x03	; 3
     508:	9a 83       	std	Y+2, r25	; 0x02
     50a:	89 83       	std	Y+1, r24	; 0x01
     50c:	07 c0       	rjmp	.+14     	; 0x51c <vListInsert+0x5c>
     50e:	89 81       	ldd	r24, Y+1	; 0x01
     510:	9a 81       	ldd	r25, Y+2	; 0x02
     512:	fc 01       	movw	r30, r24
     514:	82 81       	ldd	r24, Z+2	; 0x02
     516:	93 81       	ldd	r25, Z+3	; 0x03
     518:	9a 83       	std	Y+2, r25	; 0x02
     51a:	89 83       	std	Y+1, r24	; 0x01
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	9a 81       	ldd	r25, Y+2	; 0x02
     520:	fc 01       	movw	r30, r24
     522:	82 81       	ldd	r24, Z+2	; 0x02
     524:	93 81       	ldd	r25, Z+3	; 0x03
     526:	fc 01       	movw	r30, r24
     528:	20 81       	ld	r18, Z
     52a:	31 81       	ldd	r19, Z+1	; 0x01
     52c:	8b 81       	ldd	r24, Y+3	; 0x03
     52e:	9c 81       	ldd	r25, Y+4	; 0x04
     530:	82 17       	cp	r24, r18
     532:	93 07       	cpc	r25, r19
     534:	60 f7       	brcc	.-40     	; 0x50e <vListInsert+0x4e>
     536:	89 81       	ldd	r24, Y+1	; 0x01
     538:	9a 81       	ldd	r25, Y+2	; 0x02
     53a:	fc 01       	movw	r30, r24
     53c:	22 81       	ldd	r18, Z+2	; 0x02
     53e:	33 81       	ldd	r19, Z+3	; 0x03
     540:	8f 81       	ldd	r24, Y+7	; 0x07
     542:	98 85       	ldd	r25, Y+8	; 0x08
     544:	fc 01       	movw	r30, r24
     546:	33 83       	std	Z+3, r19	; 0x03
     548:	22 83       	std	Z+2, r18	; 0x02
     54a:	8f 81       	ldd	r24, Y+7	; 0x07
     54c:	98 85       	ldd	r25, Y+8	; 0x08
     54e:	fc 01       	movw	r30, r24
     550:	82 81       	ldd	r24, Z+2	; 0x02
     552:	93 81       	ldd	r25, Z+3	; 0x03
     554:	2f 81       	ldd	r18, Y+7	; 0x07
     556:	38 85       	ldd	r19, Y+8	; 0x08
     558:	fc 01       	movw	r30, r24
     55a:	35 83       	std	Z+5, r19	; 0x05
     55c:	24 83       	std	Z+4, r18	; 0x04
     55e:	8f 81       	ldd	r24, Y+7	; 0x07
     560:	98 85       	ldd	r25, Y+8	; 0x08
     562:	29 81       	ldd	r18, Y+1	; 0x01
     564:	3a 81       	ldd	r19, Y+2	; 0x02
     566:	fc 01       	movw	r30, r24
     568:	35 83       	std	Z+5, r19	; 0x05
     56a:	24 83       	std	Z+4, r18	; 0x04
     56c:	89 81       	ldd	r24, Y+1	; 0x01
     56e:	9a 81       	ldd	r25, Y+2	; 0x02
     570:	2f 81       	ldd	r18, Y+7	; 0x07
     572:	38 85       	ldd	r19, Y+8	; 0x08
     574:	fc 01       	movw	r30, r24
     576:	33 83       	std	Z+3, r19	; 0x03
     578:	22 83       	std	Z+2, r18	; 0x02
     57a:	8f 81       	ldd	r24, Y+7	; 0x07
     57c:	98 85       	ldd	r25, Y+8	; 0x08
     57e:	2d 81       	ldd	r18, Y+5	; 0x05
     580:	3e 81       	ldd	r19, Y+6	; 0x06
     582:	fc 01       	movw	r30, r24
     584:	31 87       	std	Z+9, r19	; 0x09
     586:	20 87       	std	Z+8, r18	; 0x08
     588:	8d 81       	ldd	r24, Y+5	; 0x05
     58a:	9e 81       	ldd	r25, Y+6	; 0x06
     58c:	fc 01       	movw	r30, r24
     58e:	80 81       	ld	r24, Z
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	28 0f       	add	r18, r24
     594:	8d 81       	ldd	r24, Y+5	; 0x05
     596:	9e 81       	ldd	r25, Y+6	; 0x06
     598:	fc 01       	movw	r30, r24
     59a:	20 83       	st	Z, r18
     59c:	00 00       	nop
     59e:	28 96       	adiw	r28, 0x08	; 8
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	f8 94       	cli
     5a4:	de bf       	out	0x3e, r29	; 62
     5a6:	0f be       	out	0x3f, r0	; 63
     5a8:	cd bf       	out	0x3d, r28	; 61
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	08 95       	ret

000005b0 <uxListRemove>:
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	00 d0       	rcall	.+0      	; 0x5b6 <uxListRemove+0x6>
     5b6:	1f 92       	push	r1
     5b8:	cd b7       	in	r28, 0x3d	; 61
     5ba:	de b7       	in	r29, 0x3e	; 62
     5bc:	9c 83       	std	Y+4, r25	; 0x04
     5be:	8b 83       	std	Y+3, r24	; 0x03
     5c0:	8b 81       	ldd	r24, Y+3	; 0x03
     5c2:	9c 81       	ldd	r25, Y+4	; 0x04
     5c4:	fc 01       	movw	r30, r24
     5c6:	80 85       	ldd	r24, Z+8	; 0x08
     5c8:	91 85       	ldd	r25, Z+9	; 0x09
     5ca:	9a 83       	std	Y+2, r25	; 0x02
     5cc:	89 83       	std	Y+1, r24	; 0x01
     5ce:	8b 81       	ldd	r24, Y+3	; 0x03
     5d0:	9c 81       	ldd	r25, Y+4	; 0x04
     5d2:	fc 01       	movw	r30, r24
     5d4:	82 81       	ldd	r24, Z+2	; 0x02
     5d6:	93 81       	ldd	r25, Z+3	; 0x03
     5d8:	2b 81       	ldd	r18, Y+3	; 0x03
     5da:	3c 81       	ldd	r19, Y+4	; 0x04
     5dc:	f9 01       	movw	r30, r18
     5de:	24 81       	ldd	r18, Z+4	; 0x04
     5e0:	35 81       	ldd	r19, Z+5	; 0x05
     5e2:	fc 01       	movw	r30, r24
     5e4:	35 83       	std	Z+5, r19	; 0x05
     5e6:	24 83       	std	Z+4, r18	; 0x04
     5e8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ea:	9c 81       	ldd	r25, Y+4	; 0x04
     5ec:	fc 01       	movw	r30, r24
     5ee:	84 81       	ldd	r24, Z+4	; 0x04
     5f0:	95 81       	ldd	r25, Z+5	; 0x05
     5f2:	2b 81       	ldd	r18, Y+3	; 0x03
     5f4:	3c 81       	ldd	r19, Y+4	; 0x04
     5f6:	f9 01       	movw	r30, r18
     5f8:	22 81       	ldd	r18, Z+2	; 0x02
     5fa:	33 81       	ldd	r19, Z+3	; 0x03
     5fc:	fc 01       	movw	r30, r24
     5fe:	33 83       	std	Z+3, r19	; 0x03
     600:	22 83       	std	Z+2, r18	; 0x02
     602:	89 81       	ldd	r24, Y+1	; 0x01
     604:	9a 81       	ldd	r25, Y+2	; 0x02
     606:	fc 01       	movw	r30, r24
     608:	21 81       	ldd	r18, Z+1	; 0x01
     60a:	32 81       	ldd	r19, Z+2	; 0x02
     60c:	8b 81       	ldd	r24, Y+3	; 0x03
     60e:	9c 81       	ldd	r25, Y+4	; 0x04
     610:	28 17       	cp	r18, r24
     612:	39 07       	cpc	r19, r25
     614:	51 f4       	brne	.+20     	; 0x62a <uxListRemove+0x7a>
     616:	8b 81       	ldd	r24, Y+3	; 0x03
     618:	9c 81       	ldd	r25, Y+4	; 0x04
     61a:	fc 01       	movw	r30, r24
     61c:	24 81       	ldd	r18, Z+4	; 0x04
     61e:	35 81       	ldd	r19, Z+5	; 0x05
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	9a 81       	ldd	r25, Y+2	; 0x02
     624:	fc 01       	movw	r30, r24
     626:	32 83       	std	Z+2, r19	; 0x02
     628:	21 83       	std	Z+1, r18	; 0x01
     62a:	8b 81       	ldd	r24, Y+3	; 0x03
     62c:	9c 81       	ldd	r25, Y+4	; 0x04
     62e:	fc 01       	movw	r30, r24
     630:	11 86       	std	Z+9, r1	; 0x09
     632:	10 86       	std	Z+8, r1	; 0x08
     634:	89 81       	ldd	r24, Y+1	; 0x01
     636:	9a 81       	ldd	r25, Y+2	; 0x02
     638:	fc 01       	movw	r30, r24
     63a:	80 81       	ld	r24, Z
     63c:	2f ef       	ldi	r18, 0xFF	; 255
     63e:	28 0f       	add	r18, r24
     640:	89 81       	ldd	r24, Y+1	; 0x01
     642:	9a 81       	ldd	r25, Y+2	; 0x02
     644:	fc 01       	movw	r30, r24
     646:	20 83       	st	Z, r18
     648:	89 81       	ldd	r24, Y+1	; 0x01
     64a:	9a 81       	ldd	r25, Y+2	; 0x02
     64c:	fc 01       	movw	r30, r24
     64e:	80 81       	ld	r24, Z
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	08 95       	ret

0000065e <pxPortInitialiseStack>:
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
     666:	28 97       	sbiw	r28, 0x08	; 8
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
     672:	9c 83       	std	Y+4, r25	; 0x04
     674:	8b 83       	std	Y+3, r24	; 0x03
     676:	7e 83       	std	Y+6, r23	; 0x06
     678:	6d 83       	std	Y+5, r22	; 0x05
     67a:	58 87       	std	Y+8, r21	; 0x08
     67c:	4f 83       	std	Y+7, r20	; 0x07
     67e:	8b 81       	ldd	r24, Y+3	; 0x03
     680:	9c 81       	ldd	r25, Y+4	; 0x04
     682:	21 e1       	ldi	r18, 0x11	; 17
     684:	fc 01       	movw	r30, r24
     686:	20 83       	st	Z, r18
     688:	8b 81       	ldd	r24, Y+3	; 0x03
     68a:	9c 81       	ldd	r25, Y+4	; 0x04
     68c:	01 97       	sbiw	r24, 0x01	; 1
     68e:	9c 83       	std	Y+4, r25	; 0x04
     690:	8b 83       	std	Y+3, r24	; 0x03
     692:	8b 81       	ldd	r24, Y+3	; 0x03
     694:	9c 81       	ldd	r25, Y+4	; 0x04
     696:	22 e2       	ldi	r18, 0x22	; 34
     698:	fc 01       	movw	r30, r24
     69a:	20 83       	st	Z, r18
     69c:	8b 81       	ldd	r24, Y+3	; 0x03
     69e:	9c 81       	ldd	r25, Y+4	; 0x04
     6a0:	01 97       	sbiw	r24, 0x01	; 1
     6a2:	9c 83       	std	Y+4, r25	; 0x04
     6a4:	8b 83       	std	Y+3, r24	; 0x03
     6a6:	8b 81       	ldd	r24, Y+3	; 0x03
     6a8:	9c 81       	ldd	r25, Y+4	; 0x04
     6aa:	23 e3       	ldi	r18, 0x33	; 51
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18
     6b0:	8b 81       	ldd	r24, Y+3	; 0x03
     6b2:	9c 81       	ldd	r25, Y+4	; 0x04
     6b4:	01 97       	sbiw	r24, 0x01	; 1
     6b6:	9c 83       	std	Y+4, r25	; 0x04
     6b8:	8b 83       	std	Y+3, r24	; 0x03
     6ba:	8d 81       	ldd	r24, Y+5	; 0x05
     6bc:	9e 81       	ldd	r25, Y+6	; 0x06
     6be:	9a 83       	std	Y+2, r25	; 0x02
     6c0:	89 83       	std	Y+1, r24	; 0x01
     6c2:	29 81       	ldd	r18, Y+1	; 0x01
     6c4:	8b 81       	ldd	r24, Y+3	; 0x03
     6c6:	9c 81       	ldd	r25, Y+4	; 0x04
     6c8:	fc 01       	movw	r30, r24
     6ca:	20 83       	st	Z, r18
     6cc:	8b 81       	ldd	r24, Y+3	; 0x03
     6ce:	9c 81       	ldd	r25, Y+4	; 0x04
     6d0:	01 97       	sbiw	r24, 0x01	; 1
     6d2:	9c 83       	std	Y+4, r25	; 0x04
     6d4:	8b 83       	std	Y+3, r24	; 0x03
     6d6:	89 81       	ldd	r24, Y+1	; 0x01
     6d8:	9a 81       	ldd	r25, Y+2	; 0x02
     6da:	89 2f       	mov	r24, r25
     6dc:	99 27       	eor	r25, r25
     6de:	9a 83       	std	Y+2, r25	; 0x02
     6e0:	89 83       	std	Y+1, r24	; 0x01
     6e2:	29 81       	ldd	r18, Y+1	; 0x01
     6e4:	8b 81       	ldd	r24, Y+3	; 0x03
     6e6:	9c 81       	ldd	r25, Y+4	; 0x04
     6e8:	fc 01       	movw	r30, r24
     6ea:	20 83       	st	Z, r18
     6ec:	8b 81       	ldd	r24, Y+3	; 0x03
     6ee:	9c 81       	ldd	r25, Y+4	; 0x04
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	9c 83       	std	Y+4, r25	; 0x04
     6f4:	8b 83       	std	Y+3, r24	; 0x03
     6f6:	8b 81       	ldd	r24, Y+3	; 0x03
     6f8:	9c 81       	ldd	r25, Y+4	; 0x04
     6fa:	fc 01       	movw	r30, r24
     6fc:	10 82       	st	Z, r1
     6fe:	8b 81       	ldd	r24, Y+3	; 0x03
     700:	9c 81       	ldd	r25, Y+4	; 0x04
     702:	01 97       	sbiw	r24, 0x01	; 1
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	8b 83       	std	Y+3, r24	; 0x03
     708:	8b 81       	ldd	r24, Y+3	; 0x03
     70a:	9c 81       	ldd	r25, Y+4	; 0x04
     70c:	fc 01       	movw	r30, r24
     70e:	10 82       	st	Z, r1
     710:	8b 81       	ldd	r24, Y+3	; 0x03
     712:	9c 81       	ldd	r25, Y+4	; 0x04
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	9c 83       	std	Y+4, r25	; 0x04
     718:	8b 83       	std	Y+3, r24	; 0x03
     71a:	8b 81       	ldd	r24, Y+3	; 0x03
     71c:	9c 81       	ldd	r25, Y+4	; 0x04
     71e:	20 e8       	ldi	r18, 0x80	; 128
     720:	fc 01       	movw	r30, r24
     722:	20 83       	st	Z, r18
     724:	8b 81       	ldd	r24, Y+3	; 0x03
     726:	9c 81       	ldd	r25, Y+4	; 0x04
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	9c 83       	std	Y+4, r25	; 0x04
     72c:	8b 83       	std	Y+3, r24	; 0x03
     72e:	8b 81       	ldd	r24, Y+3	; 0x03
     730:	9c 81       	ldd	r25, Y+4	; 0x04
     732:	fc 01       	movw	r30, r24
     734:	10 82       	st	Z, r1
     736:	8b 81       	ldd	r24, Y+3	; 0x03
     738:	9c 81       	ldd	r25, Y+4	; 0x04
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	9c 83       	std	Y+4, r25	; 0x04
     73e:	8b 83       	std	Y+3, r24	; 0x03
     740:	8b 81       	ldd	r24, Y+3	; 0x03
     742:	9c 81       	ldd	r25, Y+4	; 0x04
     744:	fc 01       	movw	r30, r24
     746:	10 82       	st	Z, r1
     748:	8b 81       	ldd	r24, Y+3	; 0x03
     74a:	9c 81       	ldd	r25, Y+4	; 0x04
     74c:	01 97       	sbiw	r24, 0x01	; 1
     74e:	9c 83       	std	Y+4, r25	; 0x04
     750:	8b 83       	std	Y+3, r24	; 0x03
     752:	8b 81       	ldd	r24, Y+3	; 0x03
     754:	9c 81       	ldd	r25, Y+4	; 0x04
     756:	fc 01       	movw	r30, r24
     758:	10 82       	st	Z, r1
     75a:	8b 81       	ldd	r24, Y+3	; 0x03
     75c:	9c 81       	ldd	r25, Y+4	; 0x04
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	9c 83       	std	Y+4, r25	; 0x04
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	8b 81       	ldd	r24, Y+3	; 0x03
     766:	9c 81       	ldd	r25, Y+4	; 0x04
     768:	22 e0       	ldi	r18, 0x02	; 2
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18
     76e:	8b 81       	ldd	r24, Y+3	; 0x03
     770:	9c 81       	ldd	r25, Y+4	; 0x04
     772:	01 97       	sbiw	r24, 0x01	; 1
     774:	9c 83       	std	Y+4, r25	; 0x04
     776:	8b 83       	std	Y+3, r24	; 0x03
     778:	8b 81       	ldd	r24, Y+3	; 0x03
     77a:	9c 81       	ldd	r25, Y+4	; 0x04
     77c:	23 e0       	ldi	r18, 0x03	; 3
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
     782:	8b 81       	ldd	r24, Y+3	; 0x03
     784:	9c 81       	ldd	r25, Y+4	; 0x04
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	9c 83       	std	Y+4, r25	; 0x04
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	8b 81       	ldd	r24, Y+3	; 0x03
     78e:	9c 81       	ldd	r25, Y+4	; 0x04
     790:	24 e0       	ldi	r18, 0x04	; 4
     792:	fc 01       	movw	r30, r24
     794:	20 83       	st	Z, r18
     796:	8b 81       	ldd	r24, Y+3	; 0x03
     798:	9c 81       	ldd	r25, Y+4	; 0x04
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	8b 83       	std	Y+3, r24	; 0x03
     7a0:	8b 81       	ldd	r24, Y+3	; 0x03
     7a2:	9c 81       	ldd	r25, Y+4	; 0x04
     7a4:	25 e0       	ldi	r18, 0x05	; 5
     7a6:	fc 01       	movw	r30, r24
     7a8:	20 83       	st	Z, r18
     7aa:	8b 81       	ldd	r24, Y+3	; 0x03
     7ac:	9c 81       	ldd	r25, Y+4	; 0x04
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	9c 83       	std	Y+4, r25	; 0x04
     7b2:	8b 83       	std	Y+3, r24	; 0x03
     7b4:	8b 81       	ldd	r24, Y+3	; 0x03
     7b6:	9c 81       	ldd	r25, Y+4	; 0x04
     7b8:	26 e0       	ldi	r18, 0x06	; 6
     7ba:	fc 01       	movw	r30, r24
     7bc:	20 83       	st	Z, r18
     7be:	8b 81       	ldd	r24, Y+3	; 0x03
     7c0:	9c 81       	ldd	r25, Y+4	; 0x04
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	9c 83       	std	Y+4, r25	; 0x04
     7c6:	8b 83       	std	Y+3, r24	; 0x03
     7c8:	8b 81       	ldd	r24, Y+3	; 0x03
     7ca:	9c 81       	ldd	r25, Y+4	; 0x04
     7cc:	27 e0       	ldi	r18, 0x07	; 7
     7ce:	fc 01       	movw	r30, r24
     7d0:	20 83       	st	Z, r18
     7d2:	8b 81       	ldd	r24, Y+3	; 0x03
     7d4:	9c 81       	ldd	r25, Y+4	; 0x04
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	9c 83       	std	Y+4, r25	; 0x04
     7da:	8b 83       	std	Y+3, r24	; 0x03
     7dc:	8b 81       	ldd	r24, Y+3	; 0x03
     7de:	9c 81       	ldd	r25, Y+4	; 0x04
     7e0:	28 e0       	ldi	r18, 0x08	; 8
     7e2:	fc 01       	movw	r30, r24
     7e4:	20 83       	st	Z, r18
     7e6:	8b 81       	ldd	r24, Y+3	; 0x03
     7e8:	9c 81       	ldd	r25, Y+4	; 0x04
     7ea:	01 97       	sbiw	r24, 0x01	; 1
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	8b 83       	std	Y+3, r24	; 0x03
     7f0:	8b 81       	ldd	r24, Y+3	; 0x03
     7f2:	9c 81       	ldd	r25, Y+4	; 0x04
     7f4:	29 e0       	ldi	r18, 0x09	; 9
     7f6:	fc 01       	movw	r30, r24
     7f8:	20 83       	st	Z, r18
     7fa:	8b 81       	ldd	r24, Y+3	; 0x03
     7fc:	9c 81       	ldd	r25, Y+4	; 0x04
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	9c 83       	std	Y+4, r25	; 0x04
     802:	8b 83       	std	Y+3, r24	; 0x03
     804:	8b 81       	ldd	r24, Y+3	; 0x03
     806:	9c 81       	ldd	r25, Y+4	; 0x04
     808:	20 e1       	ldi	r18, 0x10	; 16
     80a:	fc 01       	movw	r30, r24
     80c:	20 83       	st	Z, r18
     80e:	8b 81       	ldd	r24, Y+3	; 0x03
     810:	9c 81       	ldd	r25, Y+4	; 0x04
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	9c 83       	std	Y+4, r25	; 0x04
     816:	8b 83       	std	Y+3, r24	; 0x03
     818:	8b 81       	ldd	r24, Y+3	; 0x03
     81a:	9c 81       	ldd	r25, Y+4	; 0x04
     81c:	21 e1       	ldi	r18, 0x11	; 17
     81e:	fc 01       	movw	r30, r24
     820:	20 83       	st	Z, r18
     822:	8b 81       	ldd	r24, Y+3	; 0x03
     824:	9c 81       	ldd	r25, Y+4	; 0x04
     826:	01 97       	sbiw	r24, 0x01	; 1
     828:	9c 83       	std	Y+4, r25	; 0x04
     82a:	8b 83       	std	Y+3, r24	; 0x03
     82c:	8b 81       	ldd	r24, Y+3	; 0x03
     82e:	9c 81       	ldd	r25, Y+4	; 0x04
     830:	22 e1       	ldi	r18, 0x12	; 18
     832:	fc 01       	movw	r30, r24
     834:	20 83       	st	Z, r18
     836:	8b 81       	ldd	r24, Y+3	; 0x03
     838:	9c 81       	ldd	r25, Y+4	; 0x04
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	9c 83       	std	Y+4, r25	; 0x04
     83e:	8b 83       	std	Y+3, r24	; 0x03
     840:	8b 81       	ldd	r24, Y+3	; 0x03
     842:	9c 81       	ldd	r25, Y+4	; 0x04
     844:	23 e1       	ldi	r18, 0x13	; 19
     846:	fc 01       	movw	r30, r24
     848:	20 83       	st	Z, r18
     84a:	8b 81       	ldd	r24, Y+3	; 0x03
     84c:	9c 81       	ldd	r25, Y+4	; 0x04
     84e:	01 97       	sbiw	r24, 0x01	; 1
     850:	9c 83       	std	Y+4, r25	; 0x04
     852:	8b 83       	std	Y+3, r24	; 0x03
     854:	8b 81       	ldd	r24, Y+3	; 0x03
     856:	9c 81       	ldd	r25, Y+4	; 0x04
     858:	24 e1       	ldi	r18, 0x14	; 20
     85a:	fc 01       	movw	r30, r24
     85c:	20 83       	st	Z, r18
     85e:	8b 81       	ldd	r24, Y+3	; 0x03
     860:	9c 81       	ldd	r25, Y+4	; 0x04
     862:	01 97       	sbiw	r24, 0x01	; 1
     864:	9c 83       	std	Y+4, r25	; 0x04
     866:	8b 83       	std	Y+3, r24	; 0x03
     868:	8b 81       	ldd	r24, Y+3	; 0x03
     86a:	9c 81       	ldd	r25, Y+4	; 0x04
     86c:	25 e1       	ldi	r18, 0x15	; 21
     86e:	fc 01       	movw	r30, r24
     870:	20 83       	st	Z, r18
     872:	8b 81       	ldd	r24, Y+3	; 0x03
     874:	9c 81       	ldd	r25, Y+4	; 0x04
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	9c 83       	std	Y+4, r25	; 0x04
     87a:	8b 83       	std	Y+3, r24	; 0x03
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	9c 81       	ldd	r25, Y+4	; 0x04
     880:	26 e1       	ldi	r18, 0x16	; 22
     882:	fc 01       	movw	r30, r24
     884:	20 83       	st	Z, r18
     886:	8b 81       	ldd	r24, Y+3	; 0x03
     888:	9c 81       	ldd	r25, Y+4	; 0x04
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	9c 83       	std	Y+4, r25	; 0x04
     88e:	8b 83       	std	Y+3, r24	; 0x03
     890:	8b 81       	ldd	r24, Y+3	; 0x03
     892:	9c 81       	ldd	r25, Y+4	; 0x04
     894:	27 e1       	ldi	r18, 0x17	; 23
     896:	fc 01       	movw	r30, r24
     898:	20 83       	st	Z, r18
     89a:	8b 81       	ldd	r24, Y+3	; 0x03
     89c:	9c 81       	ldd	r25, Y+4	; 0x04
     89e:	01 97       	sbiw	r24, 0x01	; 1
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	8b 81       	ldd	r24, Y+3	; 0x03
     8a6:	9c 81       	ldd	r25, Y+4	; 0x04
     8a8:	28 e1       	ldi	r18, 0x18	; 24
     8aa:	fc 01       	movw	r30, r24
     8ac:	20 83       	st	Z, r18
     8ae:	8b 81       	ldd	r24, Y+3	; 0x03
     8b0:	9c 81       	ldd	r25, Y+4	; 0x04
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	9c 83       	std	Y+4, r25	; 0x04
     8b6:	8b 83       	std	Y+3, r24	; 0x03
     8b8:	8b 81       	ldd	r24, Y+3	; 0x03
     8ba:	9c 81       	ldd	r25, Y+4	; 0x04
     8bc:	29 e1       	ldi	r18, 0x19	; 25
     8be:	fc 01       	movw	r30, r24
     8c0:	20 83       	st	Z, r18
     8c2:	8b 81       	ldd	r24, Y+3	; 0x03
     8c4:	9c 81       	ldd	r25, Y+4	; 0x04
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	9c 83       	std	Y+4, r25	; 0x04
     8ca:	8b 83       	std	Y+3, r24	; 0x03
     8cc:	8b 81       	ldd	r24, Y+3	; 0x03
     8ce:	9c 81       	ldd	r25, Y+4	; 0x04
     8d0:	20 e2       	ldi	r18, 0x20	; 32
     8d2:	fc 01       	movw	r30, r24
     8d4:	20 83       	st	Z, r18
     8d6:	8b 81       	ldd	r24, Y+3	; 0x03
     8d8:	9c 81       	ldd	r25, Y+4	; 0x04
     8da:	01 97       	sbiw	r24, 0x01	; 1
     8dc:	9c 83       	std	Y+4, r25	; 0x04
     8de:	8b 83       	std	Y+3, r24	; 0x03
     8e0:	8b 81       	ldd	r24, Y+3	; 0x03
     8e2:	9c 81       	ldd	r25, Y+4	; 0x04
     8e4:	21 e2       	ldi	r18, 0x21	; 33
     8e6:	fc 01       	movw	r30, r24
     8e8:	20 83       	st	Z, r18
     8ea:	8b 81       	ldd	r24, Y+3	; 0x03
     8ec:	9c 81       	ldd	r25, Y+4	; 0x04
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	9c 83       	std	Y+4, r25	; 0x04
     8f2:	8b 83       	std	Y+3, r24	; 0x03
     8f4:	8b 81       	ldd	r24, Y+3	; 0x03
     8f6:	9c 81       	ldd	r25, Y+4	; 0x04
     8f8:	22 e2       	ldi	r18, 0x22	; 34
     8fa:	fc 01       	movw	r30, r24
     8fc:	20 83       	st	Z, r18
     8fe:	8b 81       	ldd	r24, Y+3	; 0x03
     900:	9c 81       	ldd	r25, Y+4	; 0x04
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	9c 83       	std	Y+4, r25	; 0x04
     906:	8b 83       	std	Y+3, r24	; 0x03
     908:	8b 81       	ldd	r24, Y+3	; 0x03
     90a:	9c 81       	ldd	r25, Y+4	; 0x04
     90c:	23 e2       	ldi	r18, 0x23	; 35
     90e:	fc 01       	movw	r30, r24
     910:	20 83       	st	Z, r18
     912:	8b 81       	ldd	r24, Y+3	; 0x03
     914:	9c 81       	ldd	r25, Y+4	; 0x04
     916:	01 97       	sbiw	r24, 0x01	; 1
     918:	9c 83       	std	Y+4, r25	; 0x04
     91a:	8b 83       	std	Y+3, r24	; 0x03
     91c:	8f 81       	ldd	r24, Y+7	; 0x07
     91e:	98 85       	ldd	r25, Y+8	; 0x08
     920:	9a 83       	std	Y+2, r25	; 0x02
     922:	89 83       	std	Y+1, r24	; 0x01
     924:	29 81       	ldd	r18, Y+1	; 0x01
     926:	8b 81       	ldd	r24, Y+3	; 0x03
     928:	9c 81       	ldd	r25, Y+4	; 0x04
     92a:	fc 01       	movw	r30, r24
     92c:	20 83       	st	Z, r18
     92e:	8b 81       	ldd	r24, Y+3	; 0x03
     930:	9c 81       	ldd	r25, Y+4	; 0x04
     932:	01 97       	sbiw	r24, 0x01	; 1
     934:	9c 83       	std	Y+4, r25	; 0x04
     936:	8b 83       	std	Y+3, r24	; 0x03
     938:	89 81       	ldd	r24, Y+1	; 0x01
     93a:	9a 81       	ldd	r25, Y+2	; 0x02
     93c:	89 2f       	mov	r24, r25
     93e:	99 27       	eor	r25, r25
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	29 81       	ldd	r18, Y+1	; 0x01
     946:	8b 81       	ldd	r24, Y+3	; 0x03
     948:	9c 81       	ldd	r25, Y+4	; 0x04
     94a:	fc 01       	movw	r30, r24
     94c:	20 83       	st	Z, r18
     94e:	8b 81       	ldd	r24, Y+3	; 0x03
     950:	9c 81       	ldd	r25, Y+4	; 0x04
     952:	01 97       	sbiw	r24, 0x01	; 1
     954:	9c 83       	std	Y+4, r25	; 0x04
     956:	8b 83       	std	Y+3, r24	; 0x03
     958:	8b 81       	ldd	r24, Y+3	; 0x03
     95a:	9c 81       	ldd	r25, Y+4	; 0x04
     95c:	26 e2       	ldi	r18, 0x26	; 38
     95e:	fc 01       	movw	r30, r24
     960:	20 83       	st	Z, r18
     962:	8b 81       	ldd	r24, Y+3	; 0x03
     964:	9c 81       	ldd	r25, Y+4	; 0x04
     966:	01 97       	sbiw	r24, 0x01	; 1
     968:	9c 83       	std	Y+4, r25	; 0x04
     96a:	8b 83       	std	Y+3, r24	; 0x03
     96c:	8b 81       	ldd	r24, Y+3	; 0x03
     96e:	9c 81       	ldd	r25, Y+4	; 0x04
     970:	27 e2       	ldi	r18, 0x27	; 39
     972:	fc 01       	movw	r30, r24
     974:	20 83       	st	Z, r18
     976:	8b 81       	ldd	r24, Y+3	; 0x03
     978:	9c 81       	ldd	r25, Y+4	; 0x04
     97a:	01 97       	sbiw	r24, 0x01	; 1
     97c:	9c 83       	std	Y+4, r25	; 0x04
     97e:	8b 83       	std	Y+3, r24	; 0x03
     980:	8b 81       	ldd	r24, Y+3	; 0x03
     982:	9c 81       	ldd	r25, Y+4	; 0x04
     984:	28 e2       	ldi	r18, 0x28	; 40
     986:	fc 01       	movw	r30, r24
     988:	20 83       	st	Z, r18
     98a:	8b 81       	ldd	r24, Y+3	; 0x03
     98c:	9c 81       	ldd	r25, Y+4	; 0x04
     98e:	01 97       	sbiw	r24, 0x01	; 1
     990:	9c 83       	std	Y+4, r25	; 0x04
     992:	8b 83       	std	Y+3, r24	; 0x03
     994:	8b 81       	ldd	r24, Y+3	; 0x03
     996:	9c 81       	ldd	r25, Y+4	; 0x04
     998:	29 e2       	ldi	r18, 0x29	; 41
     99a:	fc 01       	movw	r30, r24
     99c:	20 83       	st	Z, r18
     99e:	8b 81       	ldd	r24, Y+3	; 0x03
     9a0:	9c 81       	ldd	r25, Y+4	; 0x04
     9a2:	01 97       	sbiw	r24, 0x01	; 1
     9a4:	9c 83       	std	Y+4, r25	; 0x04
     9a6:	8b 83       	std	Y+3, r24	; 0x03
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	9c 81       	ldd	r25, Y+4	; 0x04
     9ac:	20 e3       	ldi	r18, 0x30	; 48
     9ae:	fc 01       	movw	r30, r24
     9b0:	20 83       	st	Z, r18
     9b2:	8b 81       	ldd	r24, Y+3	; 0x03
     9b4:	9c 81       	ldd	r25, Y+4	; 0x04
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	9c 83       	std	Y+4, r25	; 0x04
     9ba:	8b 83       	std	Y+3, r24	; 0x03
     9bc:	8b 81       	ldd	r24, Y+3	; 0x03
     9be:	9c 81       	ldd	r25, Y+4	; 0x04
     9c0:	21 e3       	ldi	r18, 0x31	; 49
     9c2:	fc 01       	movw	r30, r24
     9c4:	20 83       	st	Z, r18
     9c6:	8b 81       	ldd	r24, Y+3	; 0x03
     9c8:	9c 81       	ldd	r25, Y+4	; 0x04
     9ca:	01 97       	sbiw	r24, 0x01	; 1
     9cc:	9c 83       	std	Y+4, r25	; 0x04
     9ce:	8b 83       	std	Y+3, r24	; 0x03
     9d0:	8b 81       	ldd	r24, Y+3	; 0x03
     9d2:	9c 81       	ldd	r25, Y+4	; 0x04
     9d4:	28 96       	adiw	r28, 0x08	; 8
     9d6:	0f b6       	in	r0, 0x3f	; 63
     9d8:	f8 94       	cli
     9da:	de bf       	out	0x3e, r29	; 62
     9dc:	0f be       	out	0x3f, r0	; 63
     9de:	cd bf       	out	0x3d, r28	; 61
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	08 95       	ret

000009e6 <xPortStartScheduler>:
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	cd b7       	in	r28, 0x3d	; 61
     9ec:	de b7       	in	r29, 0x3e	; 62
     9ee:	ff d0       	rcall	.+510    	; 0xbee <prvSetupTimerInterrupt>
     9f0:	a0 91 36 08 	lds	r26, 0x0836	; 0x800836 <__data_end>
     9f4:	b0 91 37 08 	lds	r27, 0x0837	; 0x800837 <__data_end+0x1>
     9f8:	cd 91       	ld	r28, X+
     9fa:	cd bf       	out	0x3d, r28	; 61
     9fc:	dd 91       	ld	r29, X+
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	ff 91       	pop	r31
     a02:	ef 91       	pop	r30
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	bf 91       	pop	r27
     a0a:	af 91       	pop	r26
     a0c:	9f 91       	pop	r25
     a0e:	8f 91       	pop	r24
     a10:	7f 91       	pop	r23
     a12:	6f 91       	pop	r22
     a14:	5f 91       	pop	r21
     a16:	4f 91       	pop	r20
     a18:	3f 91       	pop	r19
     a1a:	2f 91       	pop	r18
     a1c:	1f 91       	pop	r17
     a1e:	0f 91       	pop	r16
     a20:	ff 90       	pop	r15
     a22:	ef 90       	pop	r14
     a24:	df 90       	pop	r13
     a26:	cf 90       	pop	r12
     a28:	bf 90       	pop	r11
     a2a:	af 90       	pop	r10
     a2c:	9f 90       	pop	r9
     a2e:	8f 90       	pop	r8
     a30:	7f 90       	pop	r7
     a32:	6f 90       	pop	r6
     a34:	5f 90       	pop	r5
     a36:	4f 90       	pop	r4
     a38:	3f 90       	pop	r3
     a3a:	2f 90       	pop	r2
     a3c:	1f 90       	pop	r1
     a3e:	0f 90       	pop	r0
     a40:	0c be       	out	0x3c, r0	; 60
     a42:	0f 90       	pop	r0
     a44:	0b be       	out	0x3b, r0	; 59
     a46:	0f 90       	pop	r0
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	0f 90       	pop	r0
     a4c:	08 95       	ret
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	df 91       	pop	r29
     a52:	cf 91       	pop	r28
     a54:	08 95       	ret

00000a56 <vPortYield>:
     a56:	0f 92       	push	r0
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	f8 94       	cli
     a5c:	0f 92       	push	r0
     a5e:	0b b6       	in	r0, 0x3b	; 59
     a60:	0f 92       	push	r0
     a62:	0c b6       	in	r0, 0x3c	; 60
     a64:	0f 92       	push	r0
     a66:	1f 92       	push	r1
     a68:	11 24       	eor	r1, r1
     a6a:	2f 92       	push	r2
     a6c:	3f 92       	push	r3
     a6e:	4f 92       	push	r4
     a70:	5f 92       	push	r5
     a72:	6f 92       	push	r6
     a74:	7f 92       	push	r7
     a76:	8f 92       	push	r8
     a78:	9f 92       	push	r9
     a7a:	af 92       	push	r10
     a7c:	bf 92       	push	r11
     a7e:	cf 92       	push	r12
     a80:	df 92       	push	r13
     a82:	ef 92       	push	r14
     a84:	ff 92       	push	r15
     a86:	0f 93       	push	r16
     a88:	1f 93       	push	r17
     a8a:	2f 93       	push	r18
     a8c:	3f 93       	push	r19
     a8e:	4f 93       	push	r20
     a90:	5f 93       	push	r21
     a92:	6f 93       	push	r22
     a94:	7f 93       	push	r23
     a96:	8f 93       	push	r24
     a98:	9f 93       	push	r25
     a9a:	af 93       	push	r26
     a9c:	bf 93       	push	r27
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	ef 93       	push	r30
     aa4:	ff 93       	push	r31
     aa6:	a0 91 36 08 	lds	r26, 0x0836	; 0x800836 <__data_end>
     aaa:	b0 91 37 08 	lds	r27, 0x0837	; 0x800837 <__data_end+0x1>
     aae:	0d b6       	in	r0, 0x3d	; 61
     ab0:	0d 92       	st	X+, r0
     ab2:	0e b6       	in	r0, 0x3e	; 62
     ab4:	0d 92       	st	X+, r0
     ab6:	0e 94 b9 14 	call	0x2972	; 0x2972 <vTaskSwitchContext>
     aba:	a0 91 36 08 	lds	r26, 0x0836	; 0x800836 <__data_end>
     abe:	b0 91 37 08 	lds	r27, 0x0837	; 0x800837 <__data_end+0x1>
     ac2:	cd 91       	ld	r28, X+
     ac4:	cd bf       	out	0x3d, r28	; 61
     ac6:	dd 91       	ld	r29, X+
     ac8:	de bf       	out	0x3e, r29	; 62
     aca:	ff 91       	pop	r31
     acc:	ef 91       	pop	r30
     ace:	df 91       	pop	r29
     ad0:	cf 91       	pop	r28
     ad2:	bf 91       	pop	r27
     ad4:	af 91       	pop	r26
     ad6:	9f 91       	pop	r25
     ad8:	8f 91       	pop	r24
     ada:	7f 91       	pop	r23
     adc:	6f 91       	pop	r22
     ade:	5f 91       	pop	r21
     ae0:	4f 91       	pop	r20
     ae2:	3f 91       	pop	r19
     ae4:	2f 91       	pop	r18
     ae6:	1f 91       	pop	r17
     ae8:	0f 91       	pop	r16
     aea:	ff 90       	pop	r15
     aec:	ef 90       	pop	r14
     aee:	df 90       	pop	r13
     af0:	cf 90       	pop	r12
     af2:	bf 90       	pop	r11
     af4:	af 90       	pop	r10
     af6:	9f 90       	pop	r9
     af8:	8f 90       	pop	r8
     afa:	7f 90       	pop	r7
     afc:	6f 90       	pop	r6
     afe:	5f 90       	pop	r5
     b00:	4f 90       	pop	r4
     b02:	3f 90       	pop	r3
     b04:	2f 90       	pop	r2
     b06:	1f 90       	pop	r1
     b08:	0f 90       	pop	r0
     b0a:	0c be       	out	0x3c, r0	; 60
     b0c:	0f 90       	pop	r0
     b0e:	0b be       	out	0x3b, r0	; 59
     b10:	0f 90       	pop	r0
     b12:	0f be       	out	0x3f, r0	; 63
     b14:	0f 90       	pop	r0
     b16:	08 95       	ret
	...

00000b1a <vPortYieldFromTick>:
     b1a:	0f 92       	push	r0
     b1c:	0f b6       	in	r0, 0x3f	; 63
     b1e:	f8 94       	cli
     b20:	0f 92       	push	r0
     b22:	0b b6       	in	r0, 0x3b	; 59
     b24:	0f 92       	push	r0
     b26:	0c b6       	in	r0, 0x3c	; 60
     b28:	0f 92       	push	r0
     b2a:	1f 92       	push	r1
     b2c:	11 24       	eor	r1, r1
     b2e:	2f 92       	push	r2
     b30:	3f 92       	push	r3
     b32:	4f 92       	push	r4
     b34:	5f 92       	push	r5
     b36:	6f 92       	push	r6
     b38:	7f 92       	push	r7
     b3a:	8f 92       	push	r8
     b3c:	9f 92       	push	r9
     b3e:	af 92       	push	r10
     b40:	bf 92       	push	r11
     b42:	cf 92       	push	r12
     b44:	df 92       	push	r13
     b46:	ef 92       	push	r14
     b48:	ff 92       	push	r15
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	2f 93       	push	r18
     b50:	3f 93       	push	r19
     b52:	4f 93       	push	r20
     b54:	5f 93       	push	r21
     b56:	6f 93       	push	r22
     b58:	7f 93       	push	r23
     b5a:	8f 93       	push	r24
     b5c:	9f 93       	push	r25
     b5e:	af 93       	push	r26
     b60:	bf 93       	push	r27
     b62:	cf 93       	push	r28
     b64:	df 93       	push	r29
     b66:	ef 93       	push	r30
     b68:	ff 93       	push	r31
     b6a:	a0 91 36 08 	lds	r26, 0x0836	; 0x800836 <__data_end>
     b6e:	b0 91 37 08 	lds	r27, 0x0837	; 0x800837 <__data_end+0x1>
     b72:	0d b6       	in	r0, 0x3d	; 61
     b74:	0d 92       	st	X+, r0
     b76:	0e b6       	in	r0, 0x3e	; 62
     b78:	0d 92       	st	X+, r0
     b7a:	83 e5       	ldi	r24, 0x53	; 83
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	fc 01       	movw	r30, r24
     b80:	10 82       	st	Z, r1
     b82:	0e 94 cd 13 	call	0x279a	; 0x279a <xTaskIncrementTick>
     b86:	88 23       	and	r24, r24
     b88:	11 f0       	breq	.+4      	; 0xb8e <vPortYieldFromTick+0x74>
     b8a:	0e 94 b9 14 	call	0x2972	; 0x2972 <vTaskSwitchContext>
     b8e:	a0 91 36 08 	lds	r26, 0x0836	; 0x800836 <__data_end>
     b92:	b0 91 37 08 	lds	r27, 0x0837	; 0x800837 <__data_end+0x1>
     b96:	cd 91       	ld	r28, X+
     b98:	cd bf       	out	0x3d, r28	; 61
     b9a:	dd 91       	ld	r29, X+
     b9c:	de bf       	out	0x3e, r29	; 62
     b9e:	ff 91       	pop	r31
     ba0:	ef 91       	pop	r30
     ba2:	df 91       	pop	r29
     ba4:	cf 91       	pop	r28
     ba6:	bf 91       	pop	r27
     ba8:	af 91       	pop	r26
     baa:	9f 91       	pop	r25
     bac:	8f 91       	pop	r24
     bae:	7f 91       	pop	r23
     bb0:	6f 91       	pop	r22
     bb2:	5f 91       	pop	r21
     bb4:	4f 91       	pop	r20
     bb6:	3f 91       	pop	r19
     bb8:	2f 91       	pop	r18
     bba:	1f 91       	pop	r17
     bbc:	0f 91       	pop	r16
     bbe:	ff 90       	pop	r15
     bc0:	ef 90       	pop	r14
     bc2:	df 90       	pop	r13
     bc4:	cf 90       	pop	r12
     bc6:	bf 90       	pop	r11
     bc8:	af 90       	pop	r10
     bca:	9f 90       	pop	r9
     bcc:	8f 90       	pop	r8
     bce:	7f 90       	pop	r7
     bd0:	6f 90       	pop	r6
     bd2:	5f 90       	pop	r5
     bd4:	4f 90       	pop	r4
     bd6:	3f 90       	pop	r3
     bd8:	2f 90       	pop	r2
     bda:	1f 90       	pop	r1
     bdc:	0f 90       	pop	r0
     bde:	0c be       	out	0x3c, r0	; 60
     be0:	0f 90       	pop	r0
     be2:	0b be       	out	0x3b, r0	; 59
     be4:	0f 90       	pop	r0
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	0f 90       	pop	r0
     bea:	08 95       	ret
	...

00000bee <prvSetupTimerInterrupt>:
     bee:	cf 93       	push	r28
     bf0:	df 93       	push	r29
     bf2:	cd b7       	in	r28, 0x3d	; 61
     bf4:	de b7       	in	r29, 0x3e	; 62
     bf6:	a8 95       	wdr
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	88 70       	andi	r24, 0x08	; 8
     bfe:	99 27       	eor	r25, r25
     c00:	89 2b       	or	r24, r25
     c02:	11 f0       	breq	.+4      	; 0xc08 <prvSetupTimerInterrupt+0x1a>
     c04:	80 ee       	ldi	r24, 0xE0	; 224
     c06:	01 c0       	rjmp	.+2      	; 0xc0a <prvSetupTimerInterrupt+0x1c>
     c08:	80 ec       	ldi	r24, 0xC0	; 192
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	97 70       	andi	r25, 0x07	; 7
     c0e:	89 2b       	or	r24, r25
     c10:	98 2f       	mov	r25, r24
     c12:	88 e1       	ldi	r24, 0x18	; 24
     c14:	0f b6       	in	r0, 0x3f	; 63
     c16:	f8 94       	cli
     c18:	a8 95       	wdr
     c1a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     c1e:	0f be       	out	0x3f, r0	; 63
     c20:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     c24:	00 00       	nop
     c26:	df 91       	pop	r29
     c28:	cf 91       	pop	r28
     c2a:	08 95       	ret

00000c2c <__vector_12>:
     c2c:	76 df       	rcall	.-276    	; 0xb1a <vPortYieldFromTick>
     c2e:	18 95       	reti
	...

00000c32 <xQueueGenericReset>:
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	00 d0       	rcall	.+0      	; 0xc38 <xQueueGenericReset+0x6>
     c38:	1f 92       	push	r1
     c3a:	1f 92       	push	r1
     c3c:	cd b7       	in	r28, 0x3d	; 61
     c3e:	de b7       	in	r29, 0x3e	; 62
     c40:	9c 83       	std	Y+4, r25	; 0x04
     c42:	8b 83       	std	Y+3, r24	; 0x03
     c44:	6d 83       	std	Y+5, r22	; 0x05
     c46:	8b 81       	ldd	r24, Y+3	; 0x03
     c48:	9c 81       	ldd	r25, Y+4	; 0x04
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	f8 94       	cli
     c52:	0f 92       	push	r0
     c54:	89 81       	ldd	r24, Y+1	; 0x01
     c56:	9a 81       	ldd	r25, Y+2	; 0x02
     c58:	fc 01       	movw	r30, r24
     c5a:	80 81       	ld	r24, Z
     c5c:	91 81       	ldd	r25, Z+1	; 0x01
     c5e:	29 81       	ldd	r18, Y+1	; 0x01
     c60:	3a 81       	ldd	r19, Y+2	; 0x02
     c62:	f9 01       	movw	r30, r18
     c64:	23 8d       	ldd	r18, Z+27	; 0x1b
     c66:	42 2f       	mov	r20, r18
     c68:	50 e0       	ldi	r21, 0x00	; 0
     c6a:	29 81       	ldd	r18, Y+1	; 0x01
     c6c:	3a 81       	ldd	r19, Y+2	; 0x02
     c6e:	f9 01       	movw	r30, r18
     c70:	24 8d       	ldd	r18, Z+28	; 0x1c
     c72:	22 2f       	mov	r18, r18
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	42 9f       	mul	r20, r18
     c78:	b0 01       	movw	r22, r0
     c7a:	43 9f       	mul	r20, r19
     c7c:	70 0d       	add	r23, r0
     c7e:	52 9f       	mul	r21, r18
     c80:	70 0d       	add	r23, r0
     c82:	11 24       	eor	r1, r1
     c84:	9b 01       	movw	r18, r22
     c86:	28 0f       	add	r18, r24
     c88:	39 1f       	adc	r19, r25
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
     c8c:	9a 81       	ldd	r25, Y+2	; 0x02
     c8e:	fc 01       	movw	r30, r24
     c90:	35 83       	std	Z+5, r19	; 0x05
     c92:	24 83       	std	Z+4, r18	; 0x04
     c94:	89 81       	ldd	r24, Y+1	; 0x01
     c96:	9a 81       	ldd	r25, Y+2	; 0x02
     c98:	fc 01       	movw	r30, r24
     c9a:	12 8e       	std	Z+26, r1	; 0x1a
     c9c:	89 81       	ldd	r24, Y+1	; 0x01
     c9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ca0:	fc 01       	movw	r30, r24
     ca2:	20 81       	ld	r18, Z
     ca4:	31 81       	ldd	r19, Z+1	; 0x01
     ca6:	89 81       	ldd	r24, Y+1	; 0x01
     ca8:	9a 81       	ldd	r25, Y+2	; 0x02
     caa:	fc 01       	movw	r30, r24
     cac:	33 83       	std	Z+3, r19	; 0x03
     cae:	22 83       	std	Z+2, r18	; 0x02
     cb0:	89 81       	ldd	r24, Y+1	; 0x01
     cb2:	9a 81       	ldd	r25, Y+2	; 0x02
     cb4:	fc 01       	movw	r30, r24
     cb6:	20 81       	ld	r18, Z
     cb8:	31 81       	ldd	r19, Z+1	; 0x01
     cba:	89 81       	ldd	r24, Y+1	; 0x01
     cbc:	9a 81       	ldd	r25, Y+2	; 0x02
     cbe:	fc 01       	movw	r30, r24
     cc0:	83 8d       	ldd	r24, Z+27	; 0x1b
     cc2:	88 2f       	mov	r24, r24
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	bc 01       	movw	r22, r24
     cc8:	61 50       	subi	r22, 0x01	; 1
     cca:	71 09       	sbc	r23, r1
     ccc:	89 81       	ldd	r24, Y+1	; 0x01
     cce:	9a 81       	ldd	r25, Y+2	; 0x02
     cd0:	fc 01       	movw	r30, r24
     cd2:	84 8d       	ldd	r24, Z+28	; 0x1c
     cd4:	48 2f       	mov	r20, r24
     cd6:	50 e0       	ldi	r21, 0x00	; 0
     cd8:	64 9f       	mul	r22, r20
     cda:	c0 01       	movw	r24, r0
     cdc:	65 9f       	mul	r22, r21
     cde:	90 0d       	add	r25, r0
     ce0:	74 9f       	mul	r23, r20
     ce2:	90 0d       	add	r25, r0
     ce4:	11 24       	eor	r1, r1
     ce6:	28 0f       	add	r18, r24
     ce8:	39 1f       	adc	r19, r25
     cea:	89 81       	ldd	r24, Y+1	; 0x01
     cec:	9a 81       	ldd	r25, Y+2	; 0x02
     cee:	fc 01       	movw	r30, r24
     cf0:	37 83       	std	Z+7, r19	; 0x07
     cf2:	26 83       	std	Z+6, r18	; 0x06
     cf4:	89 81       	ldd	r24, Y+1	; 0x01
     cf6:	9a 81       	ldd	r25, Y+2	; 0x02
     cf8:	2f ef       	ldi	r18, 0xFF	; 255
     cfa:	fc 01       	movw	r30, r24
     cfc:	25 8f       	std	Z+29, r18	; 0x1d
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	9a 81       	ldd	r25, Y+2	; 0x02
     d02:	2f ef       	ldi	r18, 0xFF	; 255
     d04:	fc 01       	movw	r30, r24
     d06:	26 8f       	std	Z+30, r18	; 0x1e
     d08:	8d 81       	ldd	r24, Y+5	; 0x05
     d0a:	88 23       	and	r24, r24
     d0c:	79 f4       	brne	.+30     	; 0xd2c <xQueueGenericReset+0xfa>
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	9a 81       	ldd	r25, Y+2	; 0x02
     d12:	fc 01       	movw	r30, r24
     d14:	80 85       	ldd	r24, Z+8	; 0x08
     d16:	88 23       	and	r24, r24
     d18:	89 f0       	breq	.+34     	; 0xd3c <xQueueGenericReset+0x10a>
     d1a:	89 81       	ldd	r24, Y+1	; 0x01
     d1c:	9a 81       	ldd	r25, Y+2	; 0x02
     d1e:	08 96       	adiw	r24, 0x08	; 8
     d20:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
     d24:	88 23       	and	r24, r24
     d26:	51 f0       	breq	.+20     	; 0xd3c <xQueueGenericReset+0x10a>
     d28:	96 de       	rcall	.-724    	; 0xa56 <vPortYield>
     d2a:	08 c0       	rjmp	.+16     	; 0xd3c <xQueueGenericReset+0x10a>
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	9a 81       	ldd	r25, Y+2	; 0x02
     d30:	08 96       	adiw	r24, 0x08	; 8
     d32:	2e db       	rcall	.-2468   	; 0x390 <vListInitialise>
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	9a 81       	ldd	r25, Y+2	; 0x02
     d38:	41 96       	adiw	r24, 0x11	; 17
     d3a:	2a db       	rcall	.-2476   	; 0x390 <vListInitialise>
     d3c:	0f 90       	pop	r0
     d3e:	0f be       	out	0x3f, r0	; 63
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	0f 90       	pop	r0
     d44:	0f 90       	pop	r0
     d46:	0f 90       	pop	r0
     d48:	0f 90       	pop	r0
     d4a:	0f 90       	pop	r0
     d4c:	df 91       	pop	r29
     d4e:	cf 91       	pop	r28
     d50:	08 95       	ret

00000d52 <xQueueGenericCreate>:
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	cd b7       	in	r28, 0x3d	; 61
     d5c:	de b7       	in	r29, 0x3e	; 62
     d5e:	29 97       	sbiw	r28, 0x09	; 9
     d60:	0f b6       	in	r0, 0x3f	; 63
     d62:	f8 94       	cli
     d64:	de bf       	out	0x3e, r29	; 62
     d66:	0f be       	out	0x3f, r0	; 63
     d68:	cd bf       	out	0x3d, r28	; 61
     d6a:	8f 83       	std	Y+7, r24	; 0x07
     d6c:	68 87       	std	Y+8, r22	; 0x08
     d6e:	49 87       	std	Y+9, r20	; 0x09
     d70:	88 85       	ldd	r24, Y+8	; 0x08
     d72:	88 23       	and	r24, r24
     d74:	19 f4       	brne	.+6      	; 0xd7c <xQueueGenericCreate+0x2a>
     d76:	1a 82       	std	Y+2, r1	; 0x02
     d78:	19 82       	std	Y+1, r1	; 0x01
     d7a:	0f c0       	rjmp	.+30     	; 0xd9a <xQueueGenericCreate+0x48>
     d7c:	8f 81       	ldd	r24, Y+7	; 0x07
     d7e:	48 2f       	mov	r20, r24
     d80:	50 e0       	ldi	r21, 0x00	; 0
     d82:	88 85       	ldd	r24, Y+8	; 0x08
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	42 9f       	mul	r20, r18
     d8a:	c0 01       	movw	r24, r0
     d8c:	43 9f       	mul	r20, r19
     d8e:	90 0d       	add	r25, r0
     d90:	52 9f       	mul	r21, r18
     d92:	90 0d       	add	r25, r0
     d94:	11 24       	eor	r1, r1
     d96:	9a 83       	std	Y+2, r25	; 0x02
     d98:	89 83       	std	Y+1, r24	; 0x01
     d9a:	89 81       	ldd	r24, Y+1	; 0x01
     d9c:	9a 81       	ldd	r25, Y+2	; 0x02
     d9e:	81 96       	adiw	r24, 0x21	; 33
     da0:	bc da       	rcall	.-2696   	; 0x31a <pvPortMalloc>
     da2:	9c 83       	std	Y+4, r25	; 0x04
     da4:	8b 83       	std	Y+3, r24	; 0x03
     da6:	8b 81       	ldd	r24, Y+3	; 0x03
     da8:	9c 81       	ldd	r25, Y+4	; 0x04
     daa:	89 2b       	or	r24, r25
     dac:	99 f0       	breq	.+38     	; 0xdd4 <xQueueGenericCreate+0x82>
     dae:	8b 81       	ldd	r24, Y+3	; 0x03
     db0:	9c 81       	ldd	r25, Y+4	; 0x04
     db2:	9e 83       	std	Y+6, r25	; 0x06
     db4:	8d 83       	std	Y+5, r24	; 0x05
     db6:	8d 81       	ldd	r24, Y+5	; 0x05
     db8:	9e 81       	ldd	r25, Y+6	; 0x06
     dba:	81 96       	adiw	r24, 0x21	; 33
     dbc:	9e 83       	std	Y+6, r25	; 0x06
     dbe:	8d 83       	std	Y+5, r24	; 0x05
     dc0:	2b 81       	ldd	r18, Y+3	; 0x03
     dc2:	3c 81       	ldd	r19, Y+4	; 0x04
     dc4:	8d 81       	ldd	r24, Y+5	; 0x05
     dc6:	9e 81       	ldd	r25, Y+6	; 0x06
     dc8:	89 01       	movw	r16, r18
     dca:	29 85       	ldd	r18, Y+9	; 0x09
     dcc:	ac 01       	movw	r20, r24
     dce:	68 85       	ldd	r22, Y+8	; 0x08
     dd0:	8f 81       	ldd	r24, Y+7	; 0x07
     dd2:	0d d0       	rcall	.+26     	; 0xdee <prvInitialiseNewQueue>
     dd4:	8b 81       	ldd	r24, Y+3	; 0x03
     dd6:	9c 81       	ldd	r25, Y+4	; 0x04
     dd8:	29 96       	adiw	r28, 0x09	; 9
     dda:	0f b6       	in	r0, 0x3f	; 63
     ddc:	f8 94       	cli
     dde:	de bf       	out	0x3e, r29	; 62
     de0:	0f be       	out	0x3f, r0	; 63
     de2:	cd bf       	out	0x3d, r28	; 61
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
     de8:	1f 91       	pop	r17
     dea:	0f 91       	pop	r16
     dec:	08 95       	ret

00000dee <prvInitialiseNewQueue>:
     dee:	0f 93       	push	r16
     df0:	1f 93       	push	r17
     df2:	cf 93       	push	r28
     df4:	df 93       	push	r29
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
     dfa:	27 97       	sbiw	r28, 0x07	; 7
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	f8 94       	cli
     e00:	de bf       	out	0x3e, r29	; 62
     e02:	0f be       	out	0x3f, r0	; 63
     e04:	cd bf       	out	0x3d, r28	; 61
     e06:	89 83       	std	Y+1, r24	; 0x01
     e08:	6a 83       	std	Y+2, r22	; 0x02
     e0a:	5c 83       	std	Y+4, r21	; 0x04
     e0c:	4b 83       	std	Y+3, r20	; 0x03
     e0e:	2d 83       	std	Y+5, r18	; 0x05
     e10:	1f 83       	std	Y+7, r17	; 0x07
     e12:	0e 83       	std	Y+6, r16	; 0x06
     e14:	8a 81       	ldd	r24, Y+2	; 0x02
     e16:	88 23       	and	r24, r24
     e18:	41 f4       	brne	.+16     	; 0xe2a <prvInitialiseNewQueue+0x3c>
     e1a:	8e 81       	ldd	r24, Y+6	; 0x06
     e1c:	9f 81       	ldd	r25, Y+7	; 0x07
     e1e:	2e 81       	ldd	r18, Y+6	; 0x06
     e20:	3f 81       	ldd	r19, Y+7	; 0x07
     e22:	fc 01       	movw	r30, r24
     e24:	31 83       	std	Z+1, r19	; 0x01
     e26:	20 83       	st	Z, r18
     e28:	07 c0       	rjmp	.+14     	; 0xe38 <prvInitialiseNewQueue+0x4a>
     e2a:	8e 81       	ldd	r24, Y+6	; 0x06
     e2c:	9f 81       	ldd	r25, Y+7	; 0x07
     e2e:	2b 81       	ldd	r18, Y+3	; 0x03
     e30:	3c 81       	ldd	r19, Y+4	; 0x04
     e32:	fc 01       	movw	r30, r24
     e34:	31 83       	std	Z+1, r19	; 0x01
     e36:	20 83       	st	Z, r18
     e38:	8e 81       	ldd	r24, Y+6	; 0x06
     e3a:	9f 81       	ldd	r25, Y+7	; 0x07
     e3c:	29 81       	ldd	r18, Y+1	; 0x01
     e3e:	fc 01       	movw	r30, r24
     e40:	23 8f       	std	Z+27, r18	; 0x1b
     e42:	8e 81       	ldd	r24, Y+6	; 0x06
     e44:	9f 81       	ldd	r25, Y+7	; 0x07
     e46:	2a 81       	ldd	r18, Y+2	; 0x02
     e48:	fc 01       	movw	r30, r24
     e4a:	24 8f       	std	Z+28, r18	; 0x1c
     e4c:	8e 81       	ldd	r24, Y+6	; 0x06
     e4e:	9f 81       	ldd	r25, Y+7	; 0x07
     e50:	61 e0       	ldi	r22, 0x01	; 1
     e52:	ef de       	rcall	.-546    	; 0xc32 <xQueueGenericReset>
     e54:	8e 81       	ldd	r24, Y+6	; 0x06
     e56:	9f 81       	ldd	r25, Y+7	; 0x07
     e58:	2d 81       	ldd	r18, Y+5	; 0x05
     e5a:	fc 01       	movw	r30, r24
     e5c:	20 a3       	std	Z+32, r18	; 0x20
     e5e:	00 00       	nop
     e60:	27 96       	adiw	r28, 0x07	; 7
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
     e6c:	df 91       	pop	r29
     e6e:	cf 91       	pop	r28
     e70:	1f 91       	pop	r17
     e72:	0f 91       	pop	r16
     e74:	08 95       	ret

00000e76 <prvInitialiseMutex>:
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	1f 92       	push	r1
     e7c:	1f 92       	push	r1
     e7e:	cd b7       	in	r28, 0x3d	; 61
     e80:	de b7       	in	r29, 0x3e	; 62
     e82:	9a 83       	std	Y+2, r25	; 0x02
     e84:	89 83       	std	Y+1, r24	; 0x01
     e86:	89 81       	ldd	r24, Y+1	; 0x01
     e88:	9a 81       	ldd	r25, Y+2	; 0x02
     e8a:	89 2b       	or	r24, r25
     e8c:	b1 f0       	breq	.+44     	; 0xeba <prvInitialiseMutex+0x44>
     e8e:	89 81       	ldd	r24, Y+1	; 0x01
     e90:	9a 81       	ldd	r25, Y+2	; 0x02
     e92:	fc 01       	movw	r30, r24
     e94:	15 82       	std	Z+5, r1	; 0x05
     e96:	14 82       	std	Z+4, r1	; 0x04
     e98:	89 81       	ldd	r24, Y+1	; 0x01
     e9a:	9a 81       	ldd	r25, Y+2	; 0x02
     e9c:	fc 01       	movw	r30, r24
     e9e:	11 82       	std	Z+1, r1	; 0x01
     ea0:	10 82       	st	Z, r1
     ea2:	89 81       	ldd	r24, Y+1	; 0x01
     ea4:	9a 81       	ldd	r25, Y+2	; 0x02
     ea6:	fc 01       	movw	r30, r24
     ea8:	16 82       	std	Z+6, r1	; 0x06
     eaa:	89 81       	ldd	r24, Y+1	; 0x01
     eac:	9a 81       	ldd	r25, Y+2	; 0x02
     eae:	20 e0       	ldi	r18, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	24 d0       	rcall	.+72     	; 0xf02 <xQueueGenericSend>
     eba:	00 00       	nop
     ebc:	0f 90       	pop	r0
     ebe:	0f 90       	pop	r0
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	08 95       	ret

00000ec6 <xQueueCreateMutex>:
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	00 d0       	rcall	.+0      	; 0xecc <xQueueCreateMutex+0x6>
     ecc:	1f 92       	push	r1
     ece:	1f 92       	push	r1
     ed0:	cd b7       	in	r28, 0x3d	; 61
     ed2:	de b7       	in	r29, 0x3e	; 62
     ed4:	8d 83       	std	Y+5, r24	; 0x05
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	89 83       	std	Y+1, r24	; 0x01
     eda:	1a 82       	std	Y+2, r1	; 0x02
     edc:	4d 81       	ldd	r20, Y+5	; 0x05
     ede:	6a 81       	ldd	r22, Y+2	; 0x02
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	37 df       	rcall	.-402    	; 0xd52 <xQueueGenericCreate>
     ee4:	9c 83       	std	Y+4, r25	; 0x04
     ee6:	8b 83       	std	Y+3, r24	; 0x03
     ee8:	8b 81       	ldd	r24, Y+3	; 0x03
     eea:	9c 81       	ldd	r25, Y+4	; 0x04
     eec:	c4 df       	rcall	.-120    	; 0xe76 <prvInitialiseMutex>
     eee:	8b 81       	ldd	r24, Y+3	; 0x03
     ef0:	9c 81       	ldd	r25, Y+4	; 0x04
     ef2:	0f 90       	pop	r0
     ef4:	0f 90       	pop	r0
     ef6:	0f 90       	pop	r0
     ef8:	0f 90       	pop	r0
     efa:	0f 90       	pop	r0
     efc:	df 91       	pop	r29
     efe:	cf 91       	pop	r28
     f00:	08 95       	ret

00000f02 <xQueueGenericSend>:
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	cd b7       	in	r28, 0x3d	; 61
     f08:	de b7       	in	r29, 0x3e	; 62
     f0a:	2e 97       	sbiw	r28, 0x0e	; 14
     f0c:	0f b6       	in	r0, 0x3f	; 63
     f0e:	f8 94       	cli
     f10:	de bf       	out	0x3e, r29	; 62
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	cd bf       	out	0x3d, r28	; 61
     f16:	99 87       	std	Y+9, r25	; 0x09
     f18:	88 87       	std	Y+8, r24	; 0x08
     f1a:	7b 87       	std	Y+11, r23	; 0x0b
     f1c:	6a 87       	std	Y+10, r22	; 0x0a
     f1e:	5d 87       	std	Y+13, r21	; 0x0d
     f20:	4c 87       	std	Y+12, r20	; 0x0c
     f22:	2e 87       	std	Y+14, r18	; 0x0e
     f24:	19 82       	std	Y+1, r1	; 0x01
     f26:	88 85       	ldd	r24, Y+8	; 0x08
     f28:	99 85       	ldd	r25, Y+9	; 0x09
     f2a:	9b 83       	std	Y+3, r25	; 0x03
     f2c:	8a 83       	std	Y+2, r24	; 0x02
     f2e:	0f b6       	in	r0, 0x3f	; 63
     f30:	f8 94       	cli
     f32:	0f 92       	push	r0
     f34:	8a 81       	ldd	r24, Y+2	; 0x02
     f36:	9b 81       	ldd	r25, Y+3	; 0x03
     f38:	fc 01       	movw	r30, r24
     f3a:	22 8d       	ldd	r18, Z+26	; 0x1a
     f3c:	8a 81       	ldd	r24, Y+2	; 0x02
     f3e:	9b 81       	ldd	r25, Y+3	; 0x03
     f40:	fc 01       	movw	r30, r24
     f42:	83 8d       	ldd	r24, Z+27	; 0x1b
     f44:	28 17       	cp	r18, r24
     f46:	18 f0       	brcs	.+6      	; 0xf4e <xQueueGenericSend+0x4c>
     f48:	8e 85       	ldd	r24, Y+14	; 0x0e
     f4a:	82 30       	cpi	r24, 0x02	; 2
     f4c:	f9 f4       	brne	.+62     	; 0xf8c <xQueueGenericSend+0x8a>
     f4e:	2a 85       	ldd	r18, Y+10	; 0x0a
     f50:	3b 85       	ldd	r19, Y+11	; 0x0b
     f52:	8a 81       	ldd	r24, Y+2	; 0x02
     f54:	9b 81       	ldd	r25, Y+3	; 0x03
     f56:	4e 85       	ldd	r20, Y+14	; 0x0e
     f58:	b9 01       	movw	r22, r18
     f5a:	7f d2       	rcall	.+1278   	; 0x145a <prvCopyDataToQueue>
     f5c:	8c 83       	std	Y+4, r24	; 0x04
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	9b 81       	ldd	r25, Y+3	; 0x03
     f62:	fc 01       	movw	r30, r24
     f64:	81 89       	ldd	r24, Z+17	; 0x11
     f66:	88 23       	and	r24, r24
     f68:	49 f0       	breq	.+18     	; 0xf7c <xQueueGenericSend+0x7a>
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	9b 81       	ldd	r25, Y+3	; 0x03
     f6e:	41 96       	adiw	r24, 0x11	; 17
     f70:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
     f74:	88 23       	and	r24, r24
     f76:	31 f0       	breq	.+12     	; 0xf84 <xQueueGenericSend+0x82>
     f78:	6e dd       	rcall	.-1316   	; 0xa56 <vPortYield>
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <xQueueGenericSend+0x82>
     f7c:	8c 81       	ldd	r24, Y+4	; 0x04
     f7e:	88 23       	and	r24, r24
     f80:	09 f0       	breq	.+2      	; 0xf84 <xQueueGenericSend+0x82>
     f82:	69 dd       	rcall	.-1326   	; 0xa56 <vPortYield>
     f84:	0f 90       	pop	r0
     f86:	0f be       	out	0x3f, r0	; 63
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	5b c0       	rjmp	.+182    	; 0x1042 <xQueueGenericSend+0x140>
     f8c:	8c 85       	ldd	r24, Y+12	; 0x0c
     f8e:	9d 85       	ldd	r25, Y+13	; 0x0d
     f90:	89 2b       	or	r24, r25
     f92:	21 f4       	brne	.+8      	; 0xf9c <xQueueGenericSend+0x9a>
     f94:	0f 90       	pop	r0
     f96:	0f be       	out	0x3f, r0	; 63
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	53 c0       	rjmp	.+166    	; 0x1042 <xQueueGenericSend+0x140>
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	88 23       	and	r24, r24
     fa0:	31 f4       	brne	.+12     	; 0xfae <xQueueGenericSend+0xac>
     fa2:	ce 01       	movw	r24, r28
     fa4:	05 96       	adiw	r24, 0x05	; 5
     fa6:	0e 94 18 16 	call	0x2c30	; 0x2c30 <vTaskInternalSetTimeOutState>
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	89 83       	std	Y+1, r24	; 0x01
     fae:	0f 90       	pop	r0
     fb0:	0f be       	out	0x3f, r0	; 63
     fb2:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	0f 92       	push	r0
     fbc:	8a 81       	ldd	r24, Y+2	; 0x02
     fbe:	9b 81       	ldd	r25, Y+3	; 0x03
     fc0:	fc 01       	movw	r30, r24
     fc2:	85 8d       	ldd	r24, Z+29	; 0x1d
     fc4:	8f 3f       	cpi	r24, 0xFF	; 255
     fc6:	21 f4       	brne	.+8      	; 0xfd0 <xQueueGenericSend+0xce>
     fc8:	8a 81       	ldd	r24, Y+2	; 0x02
     fca:	9b 81       	ldd	r25, Y+3	; 0x03
     fcc:	fc 01       	movw	r30, r24
     fce:	15 8e       	std	Z+29, r1	; 0x1d
     fd0:	8a 81       	ldd	r24, Y+2	; 0x02
     fd2:	9b 81       	ldd	r25, Y+3	; 0x03
     fd4:	fc 01       	movw	r30, r24
     fd6:	86 8d       	ldd	r24, Z+30	; 0x1e
     fd8:	8f 3f       	cpi	r24, 0xFF	; 255
     fda:	21 f4       	brne	.+8      	; 0xfe4 <xQueueGenericSend+0xe2>
     fdc:	8a 81       	ldd	r24, Y+2	; 0x02
     fde:	9b 81       	ldd	r25, Y+3	; 0x03
     fe0:	fc 01       	movw	r30, r24
     fe2:	16 8e       	std	Z+30, r1	; 0x1e
     fe4:	0f 90       	pop	r0
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	9e 01       	movw	r18, r28
     fea:	24 5f       	subi	r18, 0xF4	; 244
     fec:	3f 4f       	sbci	r19, 0xFF	; 255
     fee:	ce 01       	movw	r24, r28
     ff0:	05 96       	adiw	r24, 0x05	; 5
     ff2:	b9 01       	movw	r22, r18
     ff4:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <xTaskCheckForTimeOut>
     ff8:	88 23       	and	r24, r24
     ffa:	e9 f4       	brne	.+58     	; 0x1036 <xQueueGenericSend+0x134>
     ffc:	8a 81       	ldd	r24, Y+2	; 0x02
     ffe:	9b 81       	ldd	r25, Y+3	; 0x03
    1000:	c8 d3       	rcall	.+1936   	; 0x1792 <prvIsQueueFull>
    1002:	88 23       	and	r24, r24
    1004:	91 f0       	breq	.+36     	; 0x102a <xQueueGenericSend+0x128>
    1006:	2c 85       	ldd	r18, Y+12	; 0x0c
    1008:	3d 85       	ldd	r19, Y+13	; 0x0d
    100a:	8a 81       	ldd	r24, Y+2	; 0x02
    100c:	9b 81       	ldd	r25, Y+3	; 0x03
    100e:	08 96       	adiw	r24, 0x08	; 8
    1010:	b9 01       	movw	r22, r18
    1012:	0e 94 5d 15 	call	0x2aba	; 0x2aba <vTaskPlaceOnEventList>
    1016:	8a 81       	ldd	r24, Y+2	; 0x02
    1018:	9b 81       	ldd	r25, Y+3	; 0x03
    101a:	40 d3       	rcall	.+1664   	; 0x169c <prvUnlockQueue>
    101c:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1020:	88 23       	and	r24, r24
    1022:	09 f0       	breq	.+2      	; 0x1026 <xQueueGenericSend+0x124>
    1024:	84 cf       	rjmp	.-248    	; 0xf2e <xQueueGenericSend+0x2c>
    1026:	17 dd       	rcall	.-1490   	; 0xa56 <vPortYield>
    1028:	82 cf       	rjmp	.-252    	; 0xf2e <xQueueGenericSend+0x2c>
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	9b 81       	ldd	r25, Y+3	; 0x03
    102e:	36 d3       	rcall	.+1644   	; 0x169c <prvUnlockQueue>
    1030:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1034:	7c cf       	rjmp	.-264    	; 0xf2e <xQueueGenericSend+0x2c>
    1036:	8a 81       	ldd	r24, Y+2	; 0x02
    1038:	9b 81       	ldd	r25, Y+3	; 0x03
    103a:	30 d3       	rcall	.+1632   	; 0x169c <prvUnlockQueue>
    103c:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	2e 96       	adiw	r28, 0x0e	; 14
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	f8 94       	cli
    1048:	de bf       	out	0x3e, r29	; 62
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	cd bf       	out	0x3d, r28	; 61
    104e:	df 91       	pop	r29
    1050:	cf 91       	pop	r28
    1052:	08 95       	ret

00001054 <xQueueGenericSendFromISR>:
    1054:	cf 93       	push	r28
    1056:	df 93       	push	r29
    1058:	cd b7       	in	r28, 0x3d	; 61
    105a:	de b7       	in	r29, 0x3e	; 62
    105c:	2c 97       	sbiw	r28, 0x0c	; 12
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	f8 94       	cli
    1062:	de bf       	out	0x3e, r29	; 62
    1064:	0f be       	out	0x3f, r0	; 63
    1066:	cd bf       	out	0x3d, r28	; 61
    1068:	9f 83       	std	Y+7, r25	; 0x07
    106a:	8e 83       	std	Y+6, r24	; 0x06
    106c:	79 87       	std	Y+9, r23	; 0x09
    106e:	68 87       	std	Y+8, r22	; 0x08
    1070:	5b 87       	std	Y+11, r21	; 0x0b
    1072:	4a 87       	std	Y+10, r20	; 0x0a
    1074:	2c 87       	std	Y+12, r18	; 0x0c
    1076:	8e 81       	ldd	r24, Y+6	; 0x06
    1078:	9f 81       	ldd	r25, Y+7	; 0x07
    107a:	9b 83       	std	Y+3, r25	; 0x03
    107c:	8a 83       	std	Y+2, r24	; 0x02
    107e:	1c 82       	std	Y+4, r1	; 0x04
    1080:	8a 81       	ldd	r24, Y+2	; 0x02
    1082:	9b 81       	ldd	r25, Y+3	; 0x03
    1084:	fc 01       	movw	r30, r24
    1086:	22 8d       	ldd	r18, Z+26	; 0x1a
    1088:	8a 81       	ldd	r24, Y+2	; 0x02
    108a:	9b 81       	ldd	r25, Y+3	; 0x03
    108c:	fc 01       	movw	r30, r24
    108e:	83 8d       	ldd	r24, Z+27	; 0x1b
    1090:	28 17       	cp	r18, r24
    1092:	18 f0       	brcs	.+6      	; 0x109a <xQueueGenericSendFromISR+0x46>
    1094:	8c 85       	ldd	r24, Y+12	; 0x0c
    1096:	82 30       	cpi	r24, 0x02	; 2
    1098:	81 f5       	brne	.+96     	; 0x10fa <xQueueGenericSendFromISR+0xa6>
    109a:	8a 81       	ldd	r24, Y+2	; 0x02
    109c:	9b 81       	ldd	r25, Y+3	; 0x03
    109e:	fc 01       	movw	r30, r24
    10a0:	86 8d       	ldd	r24, Z+30	; 0x1e
    10a2:	8d 83       	std	Y+5, r24	; 0x05
    10a4:	28 85       	ldd	r18, Y+8	; 0x08
    10a6:	39 85       	ldd	r19, Y+9	; 0x09
    10a8:	8a 81       	ldd	r24, Y+2	; 0x02
    10aa:	9b 81       	ldd	r25, Y+3	; 0x03
    10ac:	4c 85       	ldd	r20, Y+12	; 0x0c
    10ae:	b9 01       	movw	r22, r18
    10b0:	d4 d1       	rcall	.+936    	; 0x145a <prvCopyDataToQueue>
    10b2:	8d 81       	ldd	r24, Y+5	; 0x05
    10b4:	8f 3f       	cpi	r24, 0xFF	; 255
    10b6:	b9 f4       	brne	.+46     	; 0x10e6 <xQueueGenericSendFromISR+0x92>
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	9b 81       	ldd	r25, Y+3	; 0x03
    10bc:	fc 01       	movw	r30, r24
    10be:	81 89       	ldd	r24, Z+17	; 0x11
    10c0:	88 23       	and	r24, r24
    10c2:	c1 f0       	breq	.+48     	; 0x10f4 <xQueueGenericSendFromISR+0xa0>
    10c4:	8a 81       	ldd	r24, Y+2	; 0x02
    10c6:	9b 81       	ldd	r25, Y+3	; 0x03
    10c8:	41 96       	adiw	r24, 0x11	; 17
    10ca:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
    10ce:	88 23       	and	r24, r24
    10d0:	89 f0       	breq	.+34     	; 0x10f4 <xQueueGenericSendFromISR+0xa0>
    10d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    10d4:	9b 85       	ldd	r25, Y+11	; 0x0b
    10d6:	89 2b       	or	r24, r25
    10d8:	69 f0       	breq	.+26     	; 0x10f4 <xQueueGenericSendFromISR+0xa0>
    10da:	8a 85       	ldd	r24, Y+10	; 0x0a
    10dc:	9b 85       	ldd	r25, Y+11	; 0x0b
    10de:	21 e0       	ldi	r18, 0x01	; 1
    10e0:	fc 01       	movw	r30, r24
    10e2:	20 83       	st	Z, r18
    10e4:	07 c0       	rjmp	.+14     	; 0x10f4 <xQueueGenericSendFromISR+0xa0>
    10e6:	8d 81       	ldd	r24, Y+5	; 0x05
    10e8:	8f 5f       	subi	r24, 0xFF	; 255
    10ea:	28 2f       	mov	r18, r24
    10ec:	8a 81       	ldd	r24, Y+2	; 0x02
    10ee:	9b 81       	ldd	r25, Y+3	; 0x03
    10f0:	fc 01       	movw	r30, r24
    10f2:	26 8f       	std	Z+30, r18	; 0x1e
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	89 83       	std	Y+1, r24	; 0x01
    10f8:	01 c0       	rjmp	.+2      	; 0x10fc <xQueueGenericSendFromISR+0xa8>
    10fa:	19 82       	std	Y+1, r1	; 0x01
    10fc:	89 81       	ldd	r24, Y+1	; 0x01
    10fe:	2c 96       	adiw	r28, 0x0c	; 12
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61
    110a:	df 91       	pop	r29
    110c:	cf 91       	pop	r28
    110e:	08 95       	ret

00001110 <xQueueReceive>:
    1110:	cf 93       	push	r28
    1112:	df 93       	push	r29
    1114:	cd b7       	in	r28, 0x3d	; 61
    1116:	de b7       	in	r29, 0x3e	; 62
    1118:	2d 97       	sbiw	r28, 0x0d	; 13
    111a:	0f b6       	in	r0, 0x3f	; 63
    111c:	f8 94       	cli
    111e:	de bf       	out	0x3e, r29	; 62
    1120:	0f be       	out	0x3f, r0	; 63
    1122:	cd bf       	out	0x3d, r28	; 61
    1124:	99 87       	std	Y+9, r25	; 0x09
    1126:	88 87       	std	Y+8, r24	; 0x08
    1128:	7b 87       	std	Y+11, r23	; 0x0b
    112a:	6a 87       	std	Y+10, r22	; 0x0a
    112c:	5d 87       	std	Y+13, r21	; 0x0d
    112e:	4c 87       	std	Y+12, r20	; 0x0c
    1130:	19 82       	std	Y+1, r1	; 0x01
    1132:	88 85       	ldd	r24, Y+8	; 0x08
    1134:	99 85       	ldd	r25, Y+9	; 0x09
    1136:	9b 83       	std	Y+3, r25	; 0x03
    1138:	8a 83       	std	Y+2, r24	; 0x02
    113a:	0f b6       	in	r0, 0x3f	; 63
    113c:	f8 94       	cli
    113e:	0f 92       	push	r0
    1140:	8a 81       	ldd	r24, Y+2	; 0x02
    1142:	9b 81       	ldd	r25, Y+3	; 0x03
    1144:	fc 01       	movw	r30, r24
    1146:	82 8d       	ldd	r24, Z+26	; 0x1a
    1148:	8c 83       	std	Y+4, r24	; 0x04
    114a:	8c 81       	ldd	r24, Y+4	; 0x04
    114c:	88 23       	and	r24, r24
    114e:	f9 f0       	breq	.+62     	; 0x118e <xQueueReceive+0x7e>
    1150:	2a 85       	ldd	r18, Y+10	; 0x0a
    1152:	3b 85       	ldd	r19, Y+11	; 0x0b
    1154:	8a 81       	ldd	r24, Y+2	; 0x02
    1156:	9b 81       	ldd	r25, Y+3	; 0x03
    1158:	b9 01       	movw	r22, r18
    115a:	4f d2       	rcall	.+1182   	; 0x15fa <prvCopyDataFromQueue>
    115c:	8c 81       	ldd	r24, Y+4	; 0x04
    115e:	2f ef       	ldi	r18, 0xFF	; 255
    1160:	28 0f       	add	r18, r24
    1162:	8a 81       	ldd	r24, Y+2	; 0x02
    1164:	9b 81       	ldd	r25, Y+3	; 0x03
    1166:	fc 01       	movw	r30, r24
    1168:	22 8f       	std	Z+26, r18	; 0x1a
    116a:	8a 81       	ldd	r24, Y+2	; 0x02
    116c:	9b 81       	ldd	r25, Y+3	; 0x03
    116e:	fc 01       	movw	r30, r24
    1170:	80 85       	ldd	r24, Z+8	; 0x08
    1172:	88 23       	and	r24, r24
    1174:	41 f0       	breq	.+16     	; 0x1186 <xQueueReceive+0x76>
    1176:	8a 81       	ldd	r24, Y+2	; 0x02
    1178:	9b 81       	ldd	r25, Y+3	; 0x03
    117a:	08 96       	adiw	r24, 0x08	; 8
    117c:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
    1180:	88 23       	and	r24, r24
    1182:	09 f0       	breq	.+2      	; 0x1186 <xQueueReceive+0x76>
    1184:	68 dc       	rcall	.-1840   	; 0xa56 <vPortYield>
    1186:	0f 90       	pop	r0
    1188:	0f be       	out	0x3f, r0	; 63
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	61 c0       	rjmp	.+194    	; 0x1250 <xQueueReceive+0x140>
    118e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1190:	9d 85       	ldd	r25, Y+13	; 0x0d
    1192:	89 2b       	or	r24, r25
    1194:	21 f4       	brne	.+8      	; 0x119e <xQueueReceive+0x8e>
    1196:	0f 90       	pop	r0
    1198:	0f be       	out	0x3f, r0	; 63
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	59 c0       	rjmp	.+178    	; 0x1250 <xQueueReceive+0x140>
    119e:	89 81       	ldd	r24, Y+1	; 0x01
    11a0:	88 23       	and	r24, r24
    11a2:	31 f4       	brne	.+12     	; 0x11b0 <xQueueReceive+0xa0>
    11a4:	ce 01       	movw	r24, r28
    11a6:	05 96       	adiw	r24, 0x05	; 5
    11a8:	0e 94 18 16 	call	0x2c30	; 0x2c30 <vTaskInternalSetTimeOutState>
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	0f 90       	pop	r0
    11b2:	0f be       	out	0x3f, r0	; 63
    11b4:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
    11b8:	0f b6       	in	r0, 0x3f	; 63
    11ba:	f8 94       	cli
    11bc:	0f 92       	push	r0
    11be:	8a 81       	ldd	r24, Y+2	; 0x02
    11c0:	9b 81       	ldd	r25, Y+3	; 0x03
    11c2:	fc 01       	movw	r30, r24
    11c4:	85 8d       	ldd	r24, Z+29	; 0x1d
    11c6:	8f 3f       	cpi	r24, 0xFF	; 255
    11c8:	21 f4       	brne	.+8      	; 0x11d2 <xQueueReceive+0xc2>
    11ca:	8a 81       	ldd	r24, Y+2	; 0x02
    11cc:	9b 81       	ldd	r25, Y+3	; 0x03
    11ce:	fc 01       	movw	r30, r24
    11d0:	15 8e       	std	Z+29, r1	; 0x1d
    11d2:	8a 81       	ldd	r24, Y+2	; 0x02
    11d4:	9b 81       	ldd	r25, Y+3	; 0x03
    11d6:	fc 01       	movw	r30, r24
    11d8:	86 8d       	ldd	r24, Z+30	; 0x1e
    11da:	8f 3f       	cpi	r24, 0xFF	; 255
    11dc:	21 f4       	brne	.+8      	; 0x11e6 <xQueueReceive+0xd6>
    11de:	8a 81       	ldd	r24, Y+2	; 0x02
    11e0:	9b 81       	ldd	r25, Y+3	; 0x03
    11e2:	fc 01       	movw	r30, r24
    11e4:	16 8e       	std	Z+30, r1	; 0x1e
    11e6:	0f 90       	pop	r0
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	9e 01       	movw	r18, r28
    11ec:	24 5f       	subi	r18, 0xF4	; 244
    11ee:	3f 4f       	sbci	r19, 0xFF	; 255
    11f0:	ce 01       	movw	r24, r28
    11f2:	05 96       	adiw	r24, 0x05	; 5
    11f4:	b9 01       	movw	r22, r18
    11f6:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <xTaskCheckForTimeOut>
    11fa:	88 23       	and	r24, r24
    11fc:	e9 f4       	brne	.+58     	; 0x1238 <xQueueReceive+0x128>
    11fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1200:	9b 81       	ldd	r25, Y+3	; 0x03
    1202:	aa d2       	rcall	.+1364   	; 0x1758 <prvIsQueueEmpty>
    1204:	88 23       	and	r24, r24
    1206:	91 f0       	breq	.+36     	; 0x122c <xQueueReceive+0x11c>
    1208:	2c 85       	ldd	r18, Y+12	; 0x0c
    120a:	3d 85       	ldd	r19, Y+13	; 0x0d
    120c:	8a 81       	ldd	r24, Y+2	; 0x02
    120e:	9b 81       	ldd	r25, Y+3	; 0x03
    1210:	41 96       	adiw	r24, 0x11	; 17
    1212:	b9 01       	movw	r22, r18
    1214:	0e 94 5d 15 	call	0x2aba	; 0x2aba <vTaskPlaceOnEventList>
    1218:	8a 81       	ldd	r24, Y+2	; 0x02
    121a:	9b 81       	ldd	r25, Y+3	; 0x03
    121c:	3f d2       	rcall	.+1150   	; 0x169c <prvUnlockQueue>
    121e:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1222:	88 23       	and	r24, r24
    1224:	09 f0       	breq	.+2      	; 0x1228 <xQueueReceive+0x118>
    1226:	89 cf       	rjmp	.-238    	; 0x113a <xQueueReceive+0x2a>
    1228:	16 dc       	rcall	.-2004   	; 0xa56 <vPortYield>
    122a:	87 cf       	rjmp	.-242    	; 0x113a <xQueueReceive+0x2a>
    122c:	8a 81       	ldd	r24, Y+2	; 0x02
    122e:	9b 81       	ldd	r25, Y+3	; 0x03
    1230:	35 d2       	rcall	.+1130   	; 0x169c <prvUnlockQueue>
    1232:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1236:	81 cf       	rjmp	.-254    	; 0x113a <xQueueReceive+0x2a>
    1238:	8a 81       	ldd	r24, Y+2	; 0x02
    123a:	9b 81       	ldd	r25, Y+3	; 0x03
    123c:	2f d2       	rcall	.+1118   	; 0x169c <prvUnlockQueue>
    123e:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    1242:	8a 81       	ldd	r24, Y+2	; 0x02
    1244:	9b 81       	ldd	r25, Y+3	; 0x03
    1246:	88 d2       	rcall	.+1296   	; 0x1758 <prvIsQueueEmpty>
    1248:	88 23       	and	r24, r24
    124a:	09 f4       	brne	.+2      	; 0x124e <xQueueReceive+0x13e>
    124c:	76 cf       	rjmp	.-276    	; 0x113a <xQueueReceive+0x2a>
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	2d 96       	adiw	r28, 0x0d	; 13
    1252:	0f b6       	in	r0, 0x3f	; 63
    1254:	f8 94       	cli
    1256:	de bf       	out	0x3e, r29	; 62
    1258:	0f be       	out	0x3f, r0	; 63
    125a:	cd bf       	out	0x3d, r28	; 61
    125c:	df 91       	pop	r29
    125e:	cf 91       	pop	r28
    1260:	08 95       	ret

00001262 <xQueueSemaphoreTake>:
    1262:	cf 93       	push	r28
    1264:	df 93       	push	r29
    1266:	cd b7       	in	r28, 0x3d	; 61
    1268:	de b7       	in	r29, 0x3e	; 62
    126a:	2d 97       	sbiw	r28, 0x0d	; 13
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	de bf       	out	0x3e, r29	; 62
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	cd bf       	out	0x3d, r28	; 61
    1276:	9b 87       	std	Y+11, r25	; 0x0b
    1278:	8a 87       	std	Y+10, r24	; 0x0a
    127a:	7d 87       	std	Y+13, r23	; 0x0d
    127c:	6c 87       	std	Y+12, r22	; 0x0c
    127e:	19 82       	std	Y+1, r1	; 0x01
    1280:	8a 85       	ldd	r24, Y+10	; 0x0a
    1282:	9b 85       	ldd	r25, Y+11	; 0x0b
    1284:	9c 83       	std	Y+4, r25	; 0x04
    1286:	8b 83       	std	Y+3, r24	; 0x03
    1288:	1a 82       	std	Y+2, r1	; 0x02
    128a:	0f b6       	in	r0, 0x3f	; 63
    128c:	f8 94       	cli
    128e:	0f 92       	push	r0
    1290:	8b 81       	ldd	r24, Y+3	; 0x03
    1292:	9c 81       	ldd	r25, Y+4	; 0x04
    1294:	fc 01       	movw	r30, r24
    1296:	82 8d       	ldd	r24, Z+26	; 0x1a
    1298:	8d 83       	std	Y+5, r24	; 0x05
    129a:	8d 81       	ldd	r24, Y+5	; 0x05
    129c:	88 23       	and	r24, r24
    129e:	41 f1       	breq	.+80     	; 0x12f0 <xQueueSemaphoreTake+0x8e>
    12a0:	8d 81       	ldd	r24, Y+5	; 0x05
    12a2:	2f ef       	ldi	r18, 0xFF	; 255
    12a4:	28 0f       	add	r18, r24
    12a6:	8b 81       	ldd	r24, Y+3	; 0x03
    12a8:	9c 81       	ldd	r25, Y+4	; 0x04
    12aa:	fc 01       	movw	r30, r24
    12ac:	22 8f       	std	Z+26, r18	; 0x1a
    12ae:	8b 81       	ldd	r24, Y+3	; 0x03
    12b0:	9c 81       	ldd	r25, Y+4	; 0x04
    12b2:	fc 01       	movw	r30, r24
    12b4:	80 81       	ld	r24, Z
    12b6:	91 81       	ldd	r25, Z+1	; 0x01
    12b8:	89 2b       	or	r24, r25
    12ba:	41 f4       	brne	.+16     	; 0x12cc <xQueueSemaphoreTake+0x6a>
    12bc:	0e 94 63 19 	call	0x32c6	; 0x32c6 <pvTaskIncrementMutexHeldCount>
    12c0:	9c 01       	movw	r18, r24
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	9c 81       	ldd	r25, Y+4	; 0x04
    12c6:	fc 01       	movw	r30, r24
    12c8:	35 83       	std	Z+5, r19	; 0x05
    12ca:	24 83       	std	Z+4, r18	; 0x04
    12cc:	8b 81       	ldd	r24, Y+3	; 0x03
    12ce:	9c 81       	ldd	r25, Y+4	; 0x04
    12d0:	fc 01       	movw	r30, r24
    12d2:	80 85       	ldd	r24, Z+8	; 0x08
    12d4:	88 23       	and	r24, r24
    12d6:	41 f0       	breq	.+16     	; 0x12e8 <xQueueSemaphoreTake+0x86>
    12d8:	8b 81       	ldd	r24, Y+3	; 0x03
    12da:	9c 81       	ldd	r25, Y+4	; 0x04
    12dc:	08 96       	adiw	r24, 0x08	; 8
    12de:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
    12e2:	88 23       	and	r24, r24
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <xQueueSemaphoreTake+0x86>
    12e6:	b7 db       	rcall	.-2194   	; 0xa56 <vPortYield>
    12e8:	0f 90       	pop	r0
    12ea:	0f be       	out	0x3f, r0	; 63
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	8a c0       	rjmp	.+276    	; 0x1404 <xQueueSemaphoreTake+0x1a2>
    12f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    12f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    12f4:	89 2b       	or	r24, r25
    12f6:	21 f4       	brne	.+8      	; 0x1300 <xQueueSemaphoreTake+0x9e>
    12f8:	0f 90       	pop	r0
    12fa:	0f be       	out	0x3f, r0	; 63
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	82 c0       	rjmp	.+260    	; 0x1404 <xQueueSemaphoreTake+0x1a2>
    1300:	89 81       	ldd	r24, Y+1	; 0x01
    1302:	88 23       	and	r24, r24
    1304:	31 f4       	brne	.+12     	; 0x1312 <xQueueSemaphoreTake+0xb0>
    1306:	ce 01       	movw	r24, r28
    1308:	07 96       	adiw	r24, 0x07	; 7
    130a:	0e 94 18 16 	call	0x2c30	; 0x2c30 <vTaskInternalSetTimeOutState>
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	89 83       	std	Y+1, r24	; 0x01
    1312:	0f 90       	pop	r0
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	f8 94       	cli
    131e:	0f 92       	push	r0
    1320:	8b 81       	ldd	r24, Y+3	; 0x03
    1322:	9c 81       	ldd	r25, Y+4	; 0x04
    1324:	fc 01       	movw	r30, r24
    1326:	85 8d       	ldd	r24, Z+29	; 0x1d
    1328:	8f 3f       	cpi	r24, 0xFF	; 255
    132a:	21 f4       	brne	.+8      	; 0x1334 <xQueueSemaphoreTake+0xd2>
    132c:	8b 81       	ldd	r24, Y+3	; 0x03
    132e:	9c 81       	ldd	r25, Y+4	; 0x04
    1330:	fc 01       	movw	r30, r24
    1332:	15 8e       	std	Z+29, r1	; 0x1d
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	9c 81       	ldd	r25, Y+4	; 0x04
    1338:	fc 01       	movw	r30, r24
    133a:	86 8d       	ldd	r24, Z+30	; 0x1e
    133c:	8f 3f       	cpi	r24, 0xFF	; 255
    133e:	21 f4       	brne	.+8      	; 0x1348 <xQueueSemaphoreTake+0xe6>
    1340:	8b 81       	ldd	r24, Y+3	; 0x03
    1342:	9c 81       	ldd	r25, Y+4	; 0x04
    1344:	fc 01       	movw	r30, r24
    1346:	16 8e       	std	Z+30, r1	; 0x1e
    1348:	0f 90       	pop	r0
    134a:	0f be       	out	0x3f, r0	; 63
    134c:	9e 01       	movw	r18, r28
    134e:	24 5f       	subi	r18, 0xF4	; 244
    1350:	3f 4f       	sbci	r19, 0xFF	; 255
    1352:	ce 01       	movw	r24, r28
    1354:	07 96       	adiw	r24, 0x07	; 7
    1356:	b9 01       	movw	r22, r18
    1358:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <xTaskCheckForTimeOut>
    135c:	88 23       	and	r24, r24
    135e:	09 f0       	breq	.+2      	; 0x1362 <xQueueSemaphoreTake+0x100>
    1360:	31 c0       	rjmp	.+98     	; 0x13c4 <xQueueSemaphoreTake+0x162>
    1362:	8b 81       	ldd	r24, Y+3	; 0x03
    1364:	9c 81       	ldd	r25, Y+4	; 0x04
    1366:	f8 d1       	rcall	.+1008   	; 0x1758 <prvIsQueueEmpty>
    1368:	88 23       	and	r24, r24
    136a:	31 f1       	breq	.+76     	; 0x13b8 <xQueueSemaphoreTake+0x156>
    136c:	8b 81       	ldd	r24, Y+3	; 0x03
    136e:	9c 81       	ldd	r25, Y+4	; 0x04
    1370:	fc 01       	movw	r30, r24
    1372:	80 81       	ld	r24, Z
    1374:	91 81       	ldd	r25, Z+1	; 0x01
    1376:	89 2b       	or	r24, r25
    1378:	69 f4       	brne	.+26     	; 0x1394 <xQueueSemaphoreTake+0x132>
    137a:	0f b6       	in	r0, 0x3f	; 63
    137c:	f8 94       	cli
    137e:	0f 92       	push	r0
    1380:	8b 81       	ldd	r24, Y+3	; 0x03
    1382:	9c 81       	ldd	r25, Y+4	; 0x04
    1384:	fc 01       	movw	r30, r24
    1386:	84 81       	ldd	r24, Z+4	; 0x04
    1388:	95 81       	ldd	r25, Z+5	; 0x05
    138a:	0e 94 9a 17 	call	0x2f34	; 0x2f34 <xTaskPriorityInherit>
    138e:	8a 83       	std	Y+2, r24	; 0x02
    1390:	0f 90       	pop	r0
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	2c 85       	ldd	r18, Y+12	; 0x0c
    1396:	3d 85       	ldd	r19, Y+13	; 0x0d
    1398:	8b 81       	ldd	r24, Y+3	; 0x03
    139a:	9c 81       	ldd	r25, Y+4	; 0x04
    139c:	41 96       	adiw	r24, 0x11	; 17
    139e:	b9 01       	movw	r22, r18
    13a0:	0e 94 5d 15 	call	0x2aba	; 0x2aba <vTaskPlaceOnEventList>
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	9c 81       	ldd	r25, Y+4	; 0x04
    13a8:	79 d1       	rcall	.+754    	; 0x169c <prvUnlockQueue>
    13aa:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    13ae:	88 23       	and	r24, r24
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <xQueueSemaphoreTake+0x152>
    13b2:	6b cf       	rjmp	.-298    	; 0x128a <xQueueSemaphoreTake+0x28>
    13b4:	50 db       	rcall	.-2400   	; 0xa56 <vPortYield>
    13b6:	69 cf       	rjmp	.-302    	; 0x128a <xQueueSemaphoreTake+0x28>
    13b8:	8b 81       	ldd	r24, Y+3	; 0x03
    13ba:	9c 81       	ldd	r25, Y+4	; 0x04
    13bc:	6f d1       	rcall	.+734    	; 0x169c <prvUnlockQueue>
    13be:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    13c2:	63 cf       	rjmp	.-314    	; 0x128a <xQueueSemaphoreTake+0x28>
    13c4:	8b 81       	ldd	r24, Y+3	; 0x03
    13c6:	9c 81       	ldd	r25, Y+4	; 0x04
    13c8:	69 d1       	rcall	.+722    	; 0x169c <prvUnlockQueue>
    13ca:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    13ce:	8b 81       	ldd	r24, Y+3	; 0x03
    13d0:	9c 81       	ldd	r25, Y+4	; 0x04
    13d2:	c2 d1       	rcall	.+900    	; 0x1758 <prvIsQueueEmpty>
    13d4:	88 23       	and	r24, r24
    13d6:	09 f4       	brne	.+2      	; 0x13da <xQueueSemaphoreTake+0x178>
    13d8:	58 cf       	rjmp	.-336    	; 0x128a <xQueueSemaphoreTake+0x28>
    13da:	8a 81       	ldd	r24, Y+2	; 0x02
    13dc:	88 23       	and	r24, r24
    13de:	89 f0       	breq	.+34     	; 0x1402 <xQueueSemaphoreTake+0x1a0>
    13e0:	0f b6       	in	r0, 0x3f	; 63
    13e2:	f8 94       	cli
    13e4:	0f 92       	push	r0
    13e6:	8b 81       	ldd	r24, Y+3	; 0x03
    13e8:	9c 81       	ldd	r25, Y+4	; 0x04
    13ea:	15 d0       	rcall	.+42     	; 0x1416 <prvGetDisinheritPriorityAfterTimeout>
    13ec:	8e 83       	std	Y+6, r24	; 0x06
    13ee:	8b 81       	ldd	r24, Y+3	; 0x03
    13f0:	9c 81       	ldd	r25, Y+4	; 0x04
    13f2:	fc 01       	movw	r30, r24
    13f4:	84 81       	ldd	r24, Z+4	; 0x04
    13f6:	95 81       	ldd	r25, Z+5	; 0x05
    13f8:	6e 81       	ldd	r22, Y+6	; 0x06
    13fa:	0e 94 c3 18 	call	0x3186	; 0x3186 <vTaskPriorityDisinheritAfterTimeout>
    13fe:	0f 90       	pop	r0
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	80 e0       	ldi	r24, 0x00	; 0
    1404:	2d 96       	adiw	r28, 0x0d	; 13
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
    1410:	df 91       	pop	r29
    1412:	cf 91       	pop	r28
    1414:	08 95       	ret

00001416 <prvGetDisinheritPriorityAfterTimeout>:
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
    141a:	00 d0       	rcall	.+0      	; 0x141c <prvGetDisinheritPriorityAfterTimeout+0x6>
    141c:	cd b7       	in	r28, 0x3d	; 61
    141e:	de b7       	in	r29, 0x3e	; 62
    1420:	9b 83       	std	Y+3, r25	; 0x03
    1422:	8a 83       	std	Y+2, r24	; 0x02
    1424:	8a 81       	ldd	r24, Y+2	; 0x02
    1426:	9b 81       	ldd	r25, Y+3	; 0x03
    1428:	fc 01       	movw	r30, r24
    142a:	81 89       	ldd	r24, Z+17	; 0x11
    142c:	88 23       	and	r24, r24
    142e:	69 f0       	breq	.+26     	; 0x144a <prvGetDisinheritPriorityAfterTimeout+0x34>
    1430:	8a 81       	ldd	r24, Y+2	; 0x02
    1432:	9b 81       	ldd	r25, Y+3	; 0x03
    1434:	fc 01       	movw	r30, r24
    1436:	86 89       	ldd	r24, Z+22	; 0x16
    1438:	97 89       	ldd	r25, Z+23	; 0x17
    143a:	fc 01       	movw	r30, r24
    143c:	80 81       	ld	r24, Z
    143e:	91 81       	ldd	r25, Z+1	; 0x01
    1440:	98 2f       	mov	r25, r24
    1442:	84 e0       	ldi	r24, 0x04	; 4
    1444:	89 1b       	sub	r24, r25
    1446:	89 83       	std	Y+1, r24	; 0x01
    1448:	01 c0       	rjmp	.+2      	; 0x144c <prvGetDisinheritPriorityAfterTimeout+0x36>
    144a:	19 82       	std	Y+1, r1	; 0x01
    144c:	89 81       	ldd	r24, Y+1	; 0x01
    144e:	0f 90       	pop	r0
    1450:	0f 90       	pop	r0
    1452:	0f 90       	pop	r0
    1454:	df 91       	pop	r29
    1456:	cf 91       	pop	r28
    1458:	08 95       	ret

0000145a <prvCopyDataToQueue>:
    145a:	cf 93       	push	r28
    145c:	df 93       	push	r29
    145e:	cd b7       	in	r28, 0x3d	; 61
    1460:	de b7       	in	r29, 0x3e	; 62
    1462:	27 97       	sbiw	r28, 0x07	; 7
    1464:	0f b6       	in	r0, 0x3f	; 63
    1466:	f8 94       	cli
    1468:	de bf       	out	0x3e, r29	; 62
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	cd bf       	out	0x3d, r28	; 61
    146e:	9c 83       	std	Y+4, r25	; 0x04
    1470:	8b 83       	std	Y+3, r24	; 0x03
    1472:	7e 83       	std	Y+6, r23	; 0x06
    1474:	6d 83       	std	Y+5, r22	; 0x05
    1476:	4f 83       	std	Y+7, r20	; 0x07
    1478:	19 82       	std	Y+1, r1	; 0x01
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	9c 81       	ldd	r25, Y+4	; 0x04
    147e:	fc 01       	movw	r30, r24
    1480:	82 8d       	ldd	r24, Z+26	; 0x1a
    1482:	8a 83       	std	Y+2, r24	; 0x02
    1484:	8b 81       	ldd	r24, Y+3	; 0x03
    1486:	9c 81       	ldd	r25, Y+4	; 0x04
    1488:	fc 01       	movw	r30, r24
    148a:	84 8d       	ldd	r24, Z+28	; 0x1c
    148c:	88 23       	and	r24, r24
    148e:	b1 f4       	brne	.+44     	; 0x14bc <prvCopyDataToQueue+0x62>
    1490:	8b 81       	ldd	r24, Y+3	; 0x03
    1492:	9c 81       	ldd	r25, Y+4	; 0x04
    1494:	fc 01       	movw	r30, r24
    1496:	80 81       	ld	r24, Z
    1498:	91 81       	ldd	r25, Z+1	; 0x01
    149a:	89 2b       	or	r24, r25
    149c:	09 f0       	breq	.+2      	; 0x14a0 <prvCopyDataToQueue+0x46>
    149e:	9c c0       	rjmp	.+312    	; 0x15d8 <prvCopyDataToQueue+0x17e>
    14a0:	8b 81       	ldd	r24, Y+3	; 0x03
    14a2:	9c 81       	ldd	r25, Y+4	; 0x04
    14a4:	fc 01       	movw	r30, r24
    14a6:	84 81       	ldd	r24, Z+4	; 0x04
    14a8:	95 81       	ldd	r25, Z+5	; 0x05
    14aa:	0e 94 46 18 	call	0x308c	; 0x308c <xTaskPriorityDisinherit>
    14ae:	89 83       	std	Y+1, r24	; 0x01
    14b0:	8b 81       	ldd	r24, Y+3	; 0x03
    14b2:	9c 81       	ldd	r25, Y+4	; 0x04
    14b4:	fc 01       	movw	r30, r24
    14b6:	15 82       	std	Z+5, r1	; 0x05
    14b8:	14 82       	std	Z+4, r1	; 0x04
    14ba:	8e c0       	rjmp	.+284    	; 0x15d8 <prvCopyDataToQueue+0x17e>
    14bc:	8f 81       	ldd	r24, Y+7	; 0x07
    14be:	88 23       	and	r24, r24
    14c0:	d9 f5       	brne	.+118    	; 0x1538 <prvCopyDataToQueue+0xde>
    14c2:	8b 81       	ldd	r24, Y+3	; 0x03
    14c4:	9c 81       	ldd	r25, Y+4	; 0x04
    14c6:	fc 01       	movw	r30, r24
    14c8:	84 8d       	ldd	r24, Z+28	; 0x1c
    14ca:	48 2f       	mov	r20, r24
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	9c 81       	ldd	r25, Y+4	; 0x04
    14d2:	fc 01       	movw	r30, r24
    14d4:	82 81       	ldd	r24, Z+2	; 0x02
    14d6:	93 81       	ldd	r25, Z+3	; 0x03
    14d8:	2d 81       	ldd	r18, Y+5	; 0x05
    14da:	3e 81       	ldd	r19, Y+6	; 0x06
    14dc:	b9 01       	movw	r22, r18
    14de:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    14e2:	8b 81       	ldd	r24, Y+3	; 0x03
    14e4:	9c 81       	ldd	r25, Y+4	; 0x04
    14e6:	fc 01       	movw	r30, r24
    14e8:	22 81       	ldd	r18, Z+2	; 0x02
    14ea:	33 81       	ldd	r19, Z+3	; 0x03
    14ec:	8b 81       	ldd	r24, Y+3	; 0x03
    14ee:	9c 81       	ldd	r25, Y+4	; 0x04
    14f0:	fc 01       	movw	r30, r24
    14f2:	84 8d       	ldd	r24, Z+28	; 0x1c
    14f4:	88 2f       	mov	r24, r24
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	28 0f       	add	r18, r24
    14fa:	39 1f       	adc	r19, r25
    14fc:	8b 81       	ldd	r24, Y+3	; 0x03
    14fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1500:	fc 01       	movw	r30, r24
    1502:	33 83       	std	Z+3, r19	; 0x03
    1504:	22 83       	std	Z+2, r18	; 0x02
    1506:	8b 81       	ldd	r24, Y+3	; 0x03
    1508:	9c 81       	ldd	r25, Y+4	; 0x04
    150a:	fc 01       	movw	r30, r24
    150c:	22 81       	ldd	r18, Z+2	; 0x02
    150e:	33 81       	ldd	r19, Z+3	; 0x03
    1510:	8b 81       	ldd	r24, Y+3	; 0x03
    1512:	9c 81       	ldd	r25, Y+4	; 0x04
    1514:	fc 01       	movw	r30, r24
    1516:	84 81       	ldd	r24, Z+4	; 0x04
    1518:	95 81       	ldd	r25, Z+5	; 0x05
    151a:	28 17       	cp	r18, r24
    151c:	39 07       	cpc	r19, r25
    151e:	08 f4       	brcc	.+2      	; 0x1522 <prvCopyDataToQueue+0xc8>
    1520:	5b c0       	rjmp	.+182    	; 0x15d8 <prvCopyDataToQueue+0x17e>
    1522:	8b 81       	ldd	r24, Y+3	; 0x03
    1524:	9c 81       	ldd	r25, Y+4	; 0x04
    1526:	fc 01       	movw	r30, r24
    1528:	20 81       	ld	r18, Z
    152a:	31 81       	ldd	r19, Z+1	; 0x01
    152c:	8b 81       	ldd	r24, Y+3	; 0x03
    152e:	9c 81       	ldd	r25, Y+4	; 0x04
    1530:	fc 01       	movw	r30, r24
    1532:	33 83       	std	Z+3, r19	; 0x03
    1534:	22 83       	std	Z+2, r18	; 0x02
    1536:	50 c0       	rjmp	.+160    	; 0x15d8 <prvCopyDataToQueue+0x17e>
    1538:	8b 81       	ldd	r24, Y+3	; 0x03
    153a:	9c 81       	ldd	r25, Y+4	; 0x04
    153c:	fc 01       	movw	r30, r24
    153e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1540:	48 2f       	mov	r20, r24
    1542:	50 e0       	ldi	r21, 0x00	; 0
    1544:	8b 81       	ldd	r24, Y+3	; 0x03
    1546:	9c 81       	ldd	r25, Y+4	; 0x04
    1548:	fc 01       	movw	r30, r24
    154a:	86 81       	ldd	r24, Z+6	; 0x06
    154c:	97 81       	ldd	r25, Z+7	; 0x07
    154e:	2d 81       	ldd	r18, Y+5	; 0x05
    1550:	3e 81       	ldd	r19, Y+6	; 0x06
    1552:	b9 01       	movw	r22, r18
    1554:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    1558:	8b 81       	ldd	r24, Y+3	; 0x03
    155a:	9c 81       	ldd	r25, Y+4	; 0x04
    155c:	fc 01       	movw	r30, r24
    155e:	26 81       	ldd	r18, Z+6	; 0x06
    1560:	37 81       	ldd	r19, Z+7	; 0x07
    1562:	8b 81       	ldd	r24, Y+3	; 0x03
    1564:	9c 81       	ldd	r25, Y+4	; 0x04
    1566:	fc 01       	movw	r30, r24
    1568:	84 8d       	ldd	r24, Z+28	; 0x1c
    156a:	88 2f       	mov	r24, r24
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	91 95       	neg	r25
    1570:	81 95       	neg	r24
    1572:	91 09       	sbc	r25, r1
    1574:	28 0f       	add	r18, r24
    1576:	39 1f       	adc	r19, r25
    1578:	8b 81       	ldd	r24, Y+3	; 0x03
    157a:	9c 81       	ldd	r25, Y+4	; 0x04
    157c:	fc 01       	movw	r30, r24
    157e:	37 83       	std	Z+7, r19	; 0x07
    1580:	26 83       	std	Z+6, r18	; 0x06
    1582:	8b 81       	ldd	r24, Y+3	; 0x03
    1584:	9c 81       	ldd	r25, Y+4	; 0x04
    1586:	fc 01       	movw	r30, r24
    1588:	26 81       	ldd	r18, Z+6	; 0x06
    158a:	37 81       	ldd	r19, Z+7	; 0x07
    158c:	8b 81       	ldd	r24, Y+3	; 0x03
    158e:	9c 81       	ldd	r25, Y+4	; 0x04
    1590:	fc 01       	movw	r30, r24
    1592:	80 81       	ld	r24, Z
    1594:	91 81       	ldd	r25, Z+1	; 0x01
    1596:	28 17       	cp	r18, r24
    1598:	39 07       	cpc	r19, r25
    159a:	a8 f4       	brcc	.+42     	; 0x15c6 <prvCopyDataToQueue+0x16c>
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	9c 81       	ldd	r25, Y+4	; 0x04
    15a0:	fc 01       	movw	r30, r24
    15a2:	24 81       	ldd	r18, Z+4	; 0x04
    15a4:	35 81       	ldd	r19, Z+5	; 0x05
    15a6:	8b 81       	ldd	r24, Y+3	; 0x03
    15a8:	9c 81       	ldd	r25, Y+4	; 0x04
    15aa:	fc 01       	movw	r30, r24
    15ac:	84 8d       	ldd	r24, Z+28	; 0x1c
    15ae:	88 2f       	mov	r24, r24
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	91 95       	neg	r25
    15b4:	81 95       	neg	r24
    15b6:	91 09       	sbc	r25, r1
    15b8:	28 0f       	add	r18, r24
    15ba:	39 1f       	adc	r19, r25
    15bc:	8b 81       	ldd	r24, Y+3	; 0x03
    15be:	9c 81       	ldd	r25, Y+4	; 0x04
    15c0:	fc 01       	movw	r30, r24
    15c2:	37 83       	std	Z+7, r19	; 0x07
    15c4:	26 83       	std	Z+6, r18	; 0x06
    15c6:	8f 81       	ldd	r24, Y+7	; 0x07
    15c8:	82 30       	cpi	r24, 0x02	; 2
    15ca:	31 f4       	brne	.+12     	; 0x15d8 <prvCopyDataToQueue+0x17e>
    15cc:	8a 81       	ldd	r24, Y+2	; 0x02
    15ce:	88 23       	and	r24, r24
    15d0:	19 f0       	breq	.+6      	; 0x15d8 <prvCopyDataToQueue+0x17e>
    15d2:	8a 81       	ldd	r24, Y+2	; 0x02
    15d4:	81 50       	subi	r24, 0x01	; 1
    15d6:	8a 83       	std	Y+2, r24	; 0x02
    15d8:	8a 81       	ldd	r24, Y+2	; 0x02
    15da:	21 e0       	ldi	r18, 0x01	; 1
    15dc:	28 0f       	add	r18, r24
    15de:	8b 81       	ldd	r24, Y+3	; 0x03
    15e0:	9c 81       	ldd	r25, Y+4	; 0x04
    15e2:	fc 01       	movw	r30, r24
    15e4:	22 8f       	std	Z+26, r18	; 0x1a
    15e6:	89 81       	ldd	r24, Y+1	; 0x01
    15e8:	27 96       	adiw	r28, 0x07	; 7
    15ea:	0f b6       	in	r0, 0x3f	; 63
    15ec:	f8 94       	cli
    15ee:	de bf       	out	0x3e, r29	; 62
    15f0:	0f be       	out	0x3f, r0	; 63
    15f2:	cd bf       	out	0x3d, r28	; 61
    15f4:	df 91       	pop	r29
    15f6:	cf 91       	pop	r28
    15f8:	08 95       	ret

000015fa <prvCopyDataFromQueue>:
    15fa:	cf 93       	push	r28
    15fc:	df 93       	push	r29
    15fe:	00 d0       	rcall	.+0      	; 0x1600 <prvCopyDataFromQueue+0x6>
    1600:	1f 92       	push	r1
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
    1606:	9a 83       	std	Y+2, r25	; 0x02
    1608:	89 83       	std	Y+1, r24	; 0x01
    160a:	7c 83       	std	Y+4, r23	; 0x04
    160c:	6b 83       	std	Y+3, r22	; 0x03
    160e:	89 81       	ldd	r24, Y+1	; 0x01
    1610:	9a 81       	ldd	r25, Y+2	; 0x02
    1612:	fc 01       	movw	r30, r24
    1614:	84 8d       	ldd	r24, Z+28	; 0x1c
    1616:	88 23       	and	r24, r24
    1618:	c9 f1       	breq	.+114    	; 0x168c <prvCopyDataFromQueue+0x92>
    161a:	89 81       	ldd	r24, Y+1	; 0x01
    161c:	9a 81       	ldd	r25, Y+2	; 0x02
    161e:	fc 01       	movw	r30, r24
    1620:	26 81       	ldd	r18, Z+6	; 0x06
    1622:	37 81       	ldd	r19, Z+7	; 0x07
    1624:	89 81       	ldd	r24, Y+1	; 0x01
    1626:	9a 81       	ldd	r25, Y+2	; 0x02
    1628:	fc 01       	movw	r30, r24
    162a:	84 8d       	ldd	r24, Z+28	; 0x1c
    162c:	88 2f       	mov	r24, r24
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	28 0f       	add	r18, r24
    1632:	39 1f       	adc	r19, r25
    1634:	89 81       	ldd	r24, Y+1	; 0x01
    1636:	9a 81       	ldd	r25, Y+2	; 0x02
    1638:	fc 01       	movw	r30, r24
    163a:	37 83       	std	Z+7, r19	; 0x07
    163c:	26 83       	std	Z+6, r18	; 0x06
    163e:	89 81       	ldd	r24, Y+1	; 0x01
    1640:	9a 81       	ldd	r25, Y+2	; 0x02
    1642:	fc 01       	movw	r30, r24
    1644:	26 81       	ldd	r18, Z+6	; 0x06
    1646:	37 81       	ldd	r19, Z+7	; 0x07
    1648:	89 81       	ldd	r24, Y+1	; 0x01
    164a:	9a 81       	ldd	r25, Y+2	; 0x02
    164c:	fc 01       	movw	r30, r24
    164e:	84 81       	ldd	r24, Z+4	; 0x04
    1650:	95 81       	ldd	r25, Z+5	; 0x05
    1652:	28 17       	cp	r18, r24
    1654:	39 07       	cpc	r19, r25
    1656:	50 f0       	brcs	.+20     	; 0x166c <prvCopyDataFromQueue+0x72>
    1658:	89 81       	ldd	r24, Y+1	; 0x01
    165a:	9a 81       	ldd	r25, Y+2	; 0x02
    165c:	fc 01       	movw	r30, r24
    165e:	20 81       	ld	r18, Z
    1660:	31 81       	ldd	r19, Z+1	; 0x01
    1662:	89 81       	ldd	r24, Y+1	; 0x01
    1664:	9a 81       	ldd	r25, Y+2	; 0x02
    1666:	fc 01       	movw	r30, r24
    1668:	37 83       	std	Z+7, r19	; 0x07
    166a:	26 83       	std	Z+6, r18	; 0x06
    166c:	89 81       	ldd	r24, Y+1	; 0x01
    166e:	9a 81       	ldd	r25, Y+2	; 0x02
    1670:	fc 01       	movw	r30, r24
    1672:	84 8d       	ldd	r24, Z+28	; 0x1c
    1674:	48 2f       	mov	r20, r24
    1676:	50 e0       	ldi	r21, 0x00	; 0
    1678:	89 81       	ldd	r24, Y+1	; 0x01
    167a:	9a 81       	ldd	r25, Y+2	; 0x02
    167c:	fc 01       	movw	r30, r24
    167e:	26 81       	ldd	r18, Z+6	; 0x06
    1680:	37 81       	ldd	r19, Z+7	; 0x07
    1682:	8b 81       	ldd	r24, Y+3	; 0x03
    1684:	9c 81       	ldd	r25, Y+4	; 0x04
    1686:	b9 01       	movw	r22, r18
    1688:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    168c:	00 00       	nop
    168e:	0f 90       	pop	r0
    1690:	0f 90       	pop	r0
    1692:	0f 90       	pop	r0
    1694:	0f 90       	pop	r0
    1696:	df 91       	pop	r29
    1698:	cf 91       	pop	r28
    169a:	08 95       	ret

0000169c <prvUnlockQueue>:
    169c:	cf 93       	push	r28
    169e:	df 93       	push	r29
    16a0:	00 d0       	rcall	.+0      	; 0x16a2 <prvUnlockQueue+0x6>
    16a2:	1f 92       	push	r1
    16a4:	cd b7       	in	r28, 0x3d	; 61
    16a6:	de b7       	in	r29, 0x3e	; 62
    16a8:	9c 83       	std	Y+4, r25	; 0x04
    16aa:	8b 83       	std	Y+3, r24	; 0x03
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	0f 92       	push	r0
    16b2:	8b 81       	ldd	r24, Y+3	; 0x03
    16b4:	9c 81       	ldd	r25, Y+4	; 0x04
    16b6:	fc 01       	movw	r30, r24
    16b8:	86 8d       	ldd	r24, Z+30	; 0x1e
    16ba:	89 83       	std	Y+1, r24	; 0x01
    16bc:	12 c0       	rjmp	.+36     	; 0x16e2 <prvUnlockQueue+0x46>
    16be:	8b 81       	ldd	r24, Y+3	; 0x03
    16c0:	9c 81       	ldd	r25, Y+4	; 0x04
    16c2:	fc 01       	movw	r30, r24
    16c4:	81 89       	ldd	r24, Z+17	; 0x11
    16c6:	88 23       	and	r24, r24
    16c8:	81 f0       	breq	.+32     	; 0x16ea <prvUnlockQueue+0x4e>
    16ca:	8b 81       	ldd	r24, Y+3	; 0x03
    16cc:	9c 81       	ldd	r25, Y+4	; 0x04
    16ce:	41 96       	adiw	r24, 0x11	; 17
    16d0:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
    16d4:	88 23       	and	r24, r24
    16d6:	11 f0       	breq	.+4      	; 0x16dc <prvUnlockQueue+0x40>
    16d8:	0e 94 a7 16 	call	0x2d4e	; 0x2d4e <vTaskMissedYield>
    16dc:	89 81       	ldd	r24, Y+1	; 0x01
    16de:	81 50       	subi	r24, 0x01	; 1
    16e0:	89 83       	std	Y+1, r24	; 0x01
    16e2:	89 81       	ldd	r24, Y+1	; 0x01
    16e4:	18 16       	cp	r1, r24
    16e6:	5c f3       	brlt	.-42     	; 0x16be <prvUnlockQueue+0x22>
    16e8:	01 c0       	rjmp	.+2      	; 0x16ec <prvUnlockQueue+0x50>
    16ea:	00 00       	nop
    16ec:	8b 81       	ldd	r24, Y+3	; 0x03
    16ee:	9c 81       	ldd	r25, Y+4	; 0x04
    16f0:	2f ef       	ldi	r18, 0xFF	; 255
    16f2:	fc 01       	movw	r30, r24
    16f4:	26 8f       	std	Z+30, r18	; 0x1e
    16f6:	0f 90       	pop	r0
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	0f b6       	in	r0, 0x3f	; 63
    16fc:	f8 94       	cli
    16fe:	0f 92       	push	r0
    1700:	8b 81       	ldd	r24, Y+3	; 0x03
    1702:	9c 81       	ldd	r25, Y+4	; 0x04
    1704:	fc 01       	movw	r30, r24
    1706:	85 8d       	ldd	r24, Z+29	; 0x1d
    1708:	8a 83       	std	Y+2, r24	; 0x02
    170a:	12 c0       	rjmp	.+36     	; 0x1730 <prvUnlockQueue+0x94>
    170c:	8b 81       	ldd	r24, Y+3	; 0x03
    170e:	9c 81       	ldd	r25, Y+4	; 0x04
    1710:	fc 01       	movw	r30, r24
    1712:	80 85       	ldd	r24, Z+8	; 0x08
    1714:	88 23       	and	r24, r24
    1716:	81 f0       	breq	.+32     	; 0x1738 <prvUnlockQueue+0x9c>
    1718:	8b 81       	ldd	r24, Y+3	; 0x03
    171a:	9c 81       	ldd	r25, Y+4	; 0x04
    171c:	08 96       	adiw	r24, 0x08	; 8
    171e:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <xTaskRemoveFromEventList>
    1722:	88 23       	and	r24, r24
    1724:	11 f0       	breq	.+4      	; 0x172a <prvUnlockQueue+0x8e>
    1726:	0e 94 a7 16 	call	0x2d4e	; 0x2d4e <vTaskMissedYield>
    172a:	8a 81       	ldd	r24, Y+2	; 0x02
    172c:	81 50       	subi	r24, 0x01	; 1
    172e:	8a 83       	std	Y+2, r24	; 0x02
    1730:	8a 81       	ldd	r24, Y+2	; 0x02
    1732:	18 16       	cp	r1, r24
    1734:	5c f3       	brlt	.-42     	; 0x170c <prvUnlockQueue+0x70>
    1736:	01 c0       	rjmp	.+2      	; 0x173a <prvUnlockQueue+0x9e>
    1738:	00 00       	nop
    173a:	8b 81       	ldd	r24, Y+3	; 0x03
    173c:	9c 81       	ldd	r25, Y+4	; 0x04
    173e:	2f ef       	ldi	r18, 0xFF	; 255
    1740:	fc 01       	movw	r30, r24
    1742:	25 8f       	std	Z+29, r18	; 0x1d
    1744:	0f 90       	pop	r0
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	00 00       	nop
    174a:	0f 90       	pop	r0
    174c:	0f 90       	pop	r0
    174e:	0f 90       	pop	r0
    1750:	0f 90       	pop	r0
    1752:	df 91       	pop	r29
    1754:	cf 91       	pop	r28
    1756:	08 95       	ret

00001758 <prvIsQueueEmpty>:
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	00 d0       	rcall	.+0      	; 0x175e <prvIsQueueEmpty+0x6>
    175e:	cd b7       	in	r28, 0x3d	; 61
    1760:	de b7       	in	r29, 0x3e	; 62
    1762:	9b 83       	std	Y+3, r25	; 0x03
    1764:	8a 83       	std	Y+2, r24	; 0x02
    1766:	0f b6       	in	r0, 0x3f	; 63
    1768:	f8 94       	cli
    176a:	0f 92       	push	r0
    176c:	8a 81       	ldd	r24, Y+2	; 0x02
    176e:	9b 81       	ldd	r25, Y+3	; 0x03
    1770:	fc 01       	movw	r30, r24
    1772:	82 8d       	ldd	r24, Z+26	; 0x1a
    1774:	88 23       	and	r24, r24
    1776:	19 f4       	brne	.+6      	; 0x177e <prvIsQueueEmpty+0x26>
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	89 83       	std	Y+1, r24	; 0x01
    177c:	01 c0       	rjmp	.+2      	; 0x1780 <prvIsQueueEmpty+0x28>
    177e:	19 82       	std	Y+1, r1	; 0x01
    1780:	0f 90       	pop	r0
    1782:	0f be       	out	0x3f, r0	; 63
    1784:	89 81       	ldd	r24, Y+1	; 0x01
    1786:	0f 90       	pop	r0
    1788:	0f 90       	pop	r0
    178a:	0f 90       	pop	r0
    178c:	df 91       	pop	r29
    178e:	cf 91       	pop	r28
    1790:	08 95       	ret

00001792 <prvIsQueueFull>:
    1792:	cf 93       	push	r28
    1794:	df 93       	push	r29
    1796:	00 d0       	rcall	.+0      	; 0x1798 <prvIsQueueFull+0x6>
    1798:	cd b7       	in	r28, 0x3d	; 61
    179a:	de b7       	in	r29, 0x3e	; 62
    179c:	9b 83       	std	Y+3, r25	; 0x03
    179e:	8a 83       	std	Y+2, r24	; 0x02
    17a0:	0f b6       	in	r0, 0x3f	; 63
    17a2:	f8 94       	cli
    17a4:	0f 92       	push	r0
    17a6:	8a 81       	ldd	r24, Y+2	; 0x02
    17a8:	9b 81       	ldd	r25, Y+3	; 0x03
    17aa:	fc 01       	movw	r30, r24
    17ac:	22 8d       	ldd	r18, Z+26	; 0x1a
    17ae:	8a 81       	ldd	r24, Y+2	; 0x02
    17b0:	9b 81       	ldd	r25, Y+3	; 0x03
    17b2:	fc 01       	movw	r30, r24
    17b4:	83 8d       	ldd	r24, Z+27	; 0x1b
    17b6:	28 17       	cp	r18, r24
    17b8:	19 f4       	brne	.+6      	; 0x17c0 <prvIsQueueFull+0x2e>
    17ba:	81 e0       	ldi	r24, 0x01	; 1
    17bc:	89 83       	std	Y+1, r24	; 0x01
    17be:	01 c0       	rjmp	.+2      	; 0x17c2 <prvIsQueueFull+0x30>
    17c0:	19 82       	std	Y+1, r1	; 0x01
    17c2:	0f 90       	pop	r0
    17c4:	0f be       	out	0x3f, r0	; 63
    17c6:	89 81       	ldd	r24, Y+1	; 0x01
    17c8:	0f 90       	pop	r0
    17ca:	0f 90       	pop	r0
    17cc:	0f 90       	pop	r0
    17ce:	df 91       	pop	r29
    17d0:	cf 91       	pop	r28
    17d2:	08 95       	ret

000017d4 <vQueueWaitForMessageRestricted>:
    17d4:	cf 93       	push	r28
    17d6:	df 93       	push	r29
    17d8:	cd b7       	in	r28, 0x3d	; 61
    17da:	de b7       	in	r29, 0x3e	; 62
    17dc:	27 97       	sbiw	r28, 0x07	; 7
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	9c 83       	std	Y+4, r25	; 0x04
    17ea:	8b 83       	std	Y+3, r24	; 0x03
    17ec:	7e 83       	std	Y+6, r23	; 0x06
    17ee:	6d 83       	std	Y+5, r22	; 0x05
    17f0:	4f 83       	std	Y+7, r20	; 0x07
    17f2:	8b 81       	ldd	r24, Y+3	; 0x03
    17f4:	9c 81       	ldd	r25, Y+4	; 0x04
    17f6:	9a 83       	std	Y+2, r25	; 0x02
    17f8:	89 83       	std	Y+1, r24	; 0x01
    17fa:	0f b6       	in	r0, 0x3f	; 63
    17fc:	f8 94       	cli
    17fe:	0f 92       	push	r0
    1800:	89 81       	ldd	r24, Y+1	; 0x01
    1802:	9a 81       	ldd	r25, Y+2	; 0x02
    1804:	fc 01       	movw	r30, r24
    1806:	85 8d       	ldd	r24, Z+29	; 0x1d
    1808:	8f 3f       	cpi	r24, 0xFF	; 255
    180a:	21 f4       	brne	.+8      	; 0x1814 <vQueueWaitForMessageRestricted+0x40>
    180c:	89 81       	ldd	r24, Y+1	; 0x01
    180e:	9a 81       	ldd	r25, Y+2	; 0x02
    1810:	fc 01       	movw	r30, r24
    1812:	15 8e       	std	Z+29, r1	; 0x1d
    1814:	89 81       	ldd	r24, Y+1	; 0x01
    1816:	9a 81       	ldd	r25, Y+2	; 0x02
    1818:	fc 01       	movw	r30, r24
    181a:	86 8d       	ldd	r24, Z+30	; 0x1e
    181c:	8f 3f       	cpi	r24, 0xFF	; 255
    181e:	21 f4       	brne	.+8      	; 0x1828 <vQueueWaitForMessageRestricted+0x54>
    1820:	89 81       	ldd	r24, Y+1	; 0x01
    1822:	9a 81       	ldd	r25, Y+2	; 0x02
    1824:	fc 01       	movw	r30, r24
    1826:	16 8e       	std	Z+30, r1	; 0x1e
    1828:	0f 90       	pop	r0
    182a:	0f be       	out	0x3f, r0	; 63
    182c:	89 81       	ldd	r24, Y+1	; 0x01
    182e:	9a 81       	ldd	r25, Y+2	; 0x02
    1830:	fc 01       	movw	r30, r24
    1832:	82 8d       	ldd	r24, Z+26	; 0x1a
    1834:	88 23       	and	r24, r24
    1836:	49 f4       	brne	.+18     	; 0x184a <vQueueWaitForMessageRestricted+0x76>
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	9a 81       	ldd	r25, Y+2	; 0x02
    183c:	41 96       	adiw	r24, 0x11	; 17
    183e:	2d 81       	ldd	r18, Y+5	; 0x05
    1840:	3e 81       	ldd	r19, Y+6	; 0x06
    1842:	4f 81       	ldd	r20, Y+7	; 0x07
    1844:	b9 01       	movw	r22, r18
    1846:	0e 94 7f 15 	call	0x2afe	; 0x2afe <vTaskPlaceOnEventListRestricted>
    184a:	89 81       	ldd	r24, Y+1	; 0x01
    184c:	9a 81       	ldd	r25, Y+2	; 0x02
    184e:	26 df       	rcall	.-436    	; 0x169c <prvUnlockQueue>
    1850:	00 00       	nop
    1852:	27 96       	adiw	r28, 0x07	; 7
    1854:	0f b6       	in	r0, 0x3f	; 63
    1856:	f8 94       	cli
    1858:	de bf       	out	0x3e, r29	; 62
    185a:	0f be       	out	0x3f, r0	; 63
    185c:	cd bf       	out	0x3d, r28	; 61
    185e:	df 91       	pop	r29
    1860:	cf 91       	pop	r28
    1862:	08 95       	ret

00001864 <xStreamBufferGenericCreate>:
    1864:	0f 93       	push	r16
    1866:	cf 93       	push	r28
    1868:	df 93       	push	r29
    186a:	cd b7       	in	r28, 0x3d	; 61
    186c:	de b7       	in	r29, 0x3e	; 62
    186e:	28 97       	sbiw	r28, 0x08	; 8
    1870:	0f b6       	in	r0, 0x3f	; 63
    1872:	f8 94       	cli
    1874:	de bf       	out	0x3e, r29	; 62
    1876:	0f be       	out	0x3f, r0	; 63
    1878:	cd bf       	out	0x3d, r28	; 61
    187a:	9d 83       	std	Y+5, r25	; 0x05
    187c:	8c 83       	std	Y+4, r24	; 0x04
    187e:	7f 83       	std	Y+7, r23	; 0x07
    1880:	6e 83       	std	Y+6, r22	; 0x06
    1882:	48 87       	std	Y+8, r20	; 0x08
    1884:	88 85       	ldd	r24, Y+8	; 0x08
    1886:	81 30       	cpi	r24, 0x01	; 1
    1888:	19 f4       	brne	.+6      	; 0x1890 <xStreamBufferGenericCreate+0x2c>
    188a:	81 e0       	ldi	r24, 0x01	; 1
    188c:	89 83       	std	Y+1, r24	; 0x01
    188e:	01 c0       	rjmp	.+2      	; 0x1892 <xStreamBufferGenericCreate+0x2e>
    1890:	19 82       	std	Y+1, r1	; 0x01
    1892:	8e 81       	ldd	r24, Y+6	; 0x06
    1894:	9f 81       	ldd	r25, Y+7	; 0x07
    1896:	89 2b       	or	r24, r25
    1898:	21 f4       	brne	.+8      	; 0x18a2 <xStreamBufferGenericCreate+0x3e>
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	9f 83       	std	Y+7, r25	; 0x07
    18a0:	8e 83       	std	Y+6, r24	; 0x06
    18a2:	8c 81       	ldd	r24, Y+4	; 0x04
    18a4:	9d 81       	ldd	r25, Y+5	; 0x05
    18a6:	01 96       	adiw	r24, 0x01	; 1
    18a8:	9d 83       	std	Y+5, r25	; 0x05
    18aa:	8c 83       	std	Y+4, r24	; 0x04
    18ac:	8c 81       	ldd	r24, Y+4	; 0x04
    18ae:	9d 81       	ldd	r25, Y+5	; 0x05
    18b0:	40 96       	adiw	r24, 0x10	; 16
    18b2:	0e 94 8d 01 	call	0x31a	; 0x31a <pvPortMalloc>
    18b6:	9b 83       	std	Y+3, r25	; 0x03
    18b8:	8a 83       	std	Y+2, r24	; 0x02
    18ba:	8a 81       	ldd	r24, Y+2	; 0x02
    18bc:	9b 81       	ldd	r25, Y+3	; 0x03
    18be:	89 2b       	or	r24, r25
    18c0:	69 f0       	breq	.+26     	; 0x18dc <xStreamBufferGenericCreate+0x78>
    18c2:	8a 81       	ldd	r24, Y+2	; 0x02
    18c4:	9b 81       	ldd	r25, Y+3	; 0x03
    18c6:	bc 01       	movw	r22, r24
    18c8:	60 5f       	subi	r22, 0xF0	; 240
    18ca:	7f 4f       	sbci	r23, 0xFF	; 255
    18cc:	2e 81       	ldd	r18, Y+6	; 0x06
    18ce:	3f 81       	ldd	r19, Y+7	; 0x07
    18d0:	4c 81       	ldd	r20, Y+4	; 0x04
    18d2:	5d 81       	ldd	r21, Y+5	; 0x05
    18d4:	8a 81       	ldd	r24, Y+2	; 0x02
    18d6:	9b 81       	ldd	r25, Y+3	; 0x03
    18d8:	09 81       	ldd	r16, Y+1	; 0x01
    18da:	30 d4       	rcall	.+2144   	; 0x213c <prvInitialiseNewStreamBuffer>
    18dc:	8a 81       	ldd	r24, Y+2	; 0x02
    18de:	9b 81       	ldd	r25, Y+3	; 0x03
    18e0:	28 96       	adiw	r28, 0x08	; 8
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	f8 94       	cli
    18e6:	de bf       	out	0x3e, r29	; 62
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	cd bf       	out	0x3d, r28	; 61
    18ec:	df 91       	pop	r29
    18ee:	cf 91       	pop	r28
    18f0:	0f 91       	pop	r16
    18f2:	08 95       	ret

000018f4 <xStreamBufferReset>:
    18f4:	0f 93       	push	r16
    18f6:	cf 93       	push	r28
    18f8:	df 93       	push	r29
    18fa:	00 d0       	rcall	.+0      	; 0x18fc <xStreamBufferReset+0x8>
    18fc:	00 d0       	rcall	.+0      	; 0x18fe <xStreamBufferReset+0xa>
    18fe:	cd b7       	in	r28, 0x3d	; 61
    1900:	de b7       	in	r29, 0x3e	; 62
    1902:	9e 83       	std	Y+6, r25	; 0x06
    1904:	8d 83       	std	Y+5, r24	; 0x05
    1906:	8d 81       	ldd	r24, Y+5	; 0x05
    1908:	9e 81       	ldd	r25, Y+6	; 0x06
    190a:	9b 83       	std	Y+3, r25	; 0x03
    190c:	8a 83       	std	Y+2, r24	; 0x02
    190e:	19 82       	std	Y+1, r1	; 0x01
    1910:	8a 81       	ldd	r24, Y+2	; 0x02
    1912:	9b 81       	ldd	r25, Y+3	; 0x03
    1914:	dc 01       	movw	r26, r24
    1916:	1f 96       	adiw	r26, 0x0f	; 15
    1918:	8c 91       	ld	r24, X
    191a:	8c 83       	std	Y+4, r24	; 0x04
    191c:	0f b6       	in	r0, 0x3f	; 63
    191e:	f8 94       	cli
    1920:	0f 92       	push	r0
    1922:	8a 81       	ldd	r24, Y+2	; 0x02
    1924:	9b 81       	ldd	r25, Y+3	; 0x03
    1926:	fc 01       	movw	r30, r24
    1928:	80 85       	ldd	r24, Z+8	; 0x08
    192a:	91 85       	ldd	r25, Z+9	; 0x09
    192c:	89 2b       	or	r24, r25
    192e:	71 f5       	brne	.+92     	; 0x198c <xStreamBufferReset+0x98>
    1930:	8a 81       	ldd	r24, Y+2	; 0x02
    1932:	9b 81       	ldd	r25, Y+3	; 0x03
    1934:	dc 01       	movw	r26, r24
    1936:	1a 96       	adiw	r26, 0x0a	; 10
    1938:	8d 91       	ld	r24, X+
    193a:	9c 91       	ld	r25, X
    193c:	1b 97       	sbiw	r26, 0x0b	; 11
    193e:	89 2b       	or	r24, r25
    1940:	29 f5       	brne	.+74     	; 0x198c <xStreamBufferReset+0x98>
    1942:	8a 81       	ldd	r24, Y+2	; 0x02
    1944:	9b 81       	ldd	r25, Y+3	; 0x03
    1946:	dc 01       	movw	r26, r24
    1948:	1e 96       	adiw	r26, 0x0e	; 14
    194a:	ec 91       	ld	r30, X
    194c:	8a 81       	ldd	r24, Y+2	; 0x02
    194e:	9b 81       	ldd	r25, Y+3	; 0x03
    1950:	dc 01       	movw	r26, r24
    1952:	16 96       	adiw	r26, 0x06	; 6
    1954:	2d 91       	ld	r18, X+
    1956:	3c 91       	ld	r19, X
    1958:	17 97       	sbiw	r26, 0x07	; 7
    195a:	8a 81       	ldd	r24, Y+2	; 0x02
    195c:	9b 81       	ldd	r25, Y+3	; 0x03
    195e:	dc 01       	movw	r26, r24
    1960:	14 96       	adiw	r26, 0x04	; 4
    1962:	4d 91       	ld	r20, X+
    1964:	5c 91       	ld	r21, X
    1966:	15 97       	sbiw	r26, 0x05	; 5
    1968:	8a 81       	ldd	r24, Y+2	; 0x02
    196a:	9b 81       	ldd	r25, Y+3	; 0x03
    196c:	dc 01       	movw	r26, r24
    196e:	1c 96       	adiw	r26, 0x0c	; 12
    1970:	6d 91       	ld	r22, X+
    1972:	7c 91       	ld	r23, X
    1974:	1d 97       	sbiw	r26, 0x0d	; 13
    1976:	8a 81       	ldd	r24, Y+2	; 0x02
    1978:	9b 81       	ldd	r25, Y+3	; 0x03
    197a:	0e 2f       	mov	r16, r30
    197c:	df d3       	rcall	.+1982   	; 0x213c <prvInitialiseNewStreamBuffer>
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	89 83       	std	Y+1, r24	; 0x01
    1982:	8a 81       	ldd	r24, Y+2	; 0x02
    1984:	9b 81       	ldd	r25, Y+3	; 0x03
    1986:	2c 81       	ldd	r18, Y+4	; 0x04
    1988:	fc 01       	movw	r30, r24
    198a:	27 87       	std	Z+15, r18	; 0x0f
    198c:	0f 90       	pop	r0
    198e:	0f be       	out	0x3f, r0	; 63
    1990:	89 81       	ldd	r24, Y+1	; 0x01
    1992:	26 96       	adiw	r28, 0x06	; 6
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	f8 94       	cli
    1998:	de bf       	out	0x3e, r29	; 62
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	cd bf       	out	0x3d, r28	; 61
    199e:	df 91       	pop	r29
    19a0:	cf 91       	pop	r28
    19a2:	0f 91       	pop	r16
    19a4:	08 95       	ret

000019a6 <xStreamBufferSpacesAvailable>:
    19a6:	cf 93       	push	r28
    19a8:	df 93       	push	r29
    19aa:	00 d0       	rcall	.+0      	; 0x19ac <xStreamBufferSpacesAvailable+0x6>
    19ac:	00 d0       	rcall	.+0      	; 0x19ae <xStreamBufferSpacesAvailable+0x8>
    19ae:	cd b7       	in	r28, 0x3d	; 61
    19b0:	de b7       	in	r29, 0x3e	; 62
    19b2:	9e 83       	std	Y+6, r25	; 0x06
    19b4:	8d 83       	std	Y+5, r24	; 0x05
    19b6:	8d 81       	ldd	r24, Y+5	; 0x05
    19b8:	9e 81       	ldd	r25, Y+6	; 0x06
    19ba:	9c 83       	std	Y+4, r25	; 0x04
    19bc:	8b 83       	std	Y+3, r24	; 0x03
    19be:	8b 81       	ldd	r24, Y+3	; 0x03
    19c0:	9c 81       	ldd	r25, Y+4	; 0x04
    19c2:	fc 01       	movw	r30, r24
    19c4:	24 81       	ldd	r18, Z+4	; 0x04
    19c6:	35 81       	ldd	r19, Z+5	; 0x05
    19c8:	8b 81       	ldd	r24, Y+3	; 0x03
    19ca:	9c 81       	ldd	r25, Y+4	; 0x04
    19cc:	fc 01       	movw	r30, r24
    19ce:	80 81       	ld	r24, Z
    19d0:	91 81       	ldd	r25, Z+1	; 0x01
    19d2:	82 0f       	add	r24, r18
    19d4:	93 1f       	adc	r25, r19
    19d6:	9a 83       	std	Y+2, r25	; 0x02
    19d8:	89 83       	std	Y+1, r24	; 0x01
    19da:	8b 81       	ldd	r24, Y+3	; 0x03
    19dc:	9c 81       	ldd	r25, Y+4	; 0x04
    19de:	fc 01       	movw	r30, r24
    19e0:	82 81       	ldd	r24, Z+2	; 0x02
    19e2:	93 81       	ldd	r25, Z+3	; 0x03
    19e4:	29 81       	ldd	r18, Y+1	; 0x01
    19e6:	3a 81       	ldd	r19, Y+2	; 0x02
    19e8:	a9 01       	movw	r20, r18
    19ea:	48 1b       	sub	r20, r24
    19ec:	59 0b       	sbc	r21, r25
    19ee:	ca 01       	movw	r24, r20
    19f0:	9a 83       	std	Y+2, r25	; 0x02
    19f2:	89 83       	std	Y+1, r24	; 0x01
    19f4:	89 81       	ldd	r24, Y+1	; 0x01
    19f6:	9a 81       	ldd	r25, Y+2	; 0x02
    19f8:	01 97       	sbiw	r24, 0x01	; 1
    19fa:	9a 83       	std	Y+2, r25	; 0x02
    19fc:	89 83       	std	Y+1, r24	; 0x01
    19fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1a00:	9c 81       	ldd	r25, Y+4	; 0x04
    1a02:	fc 01       	movw	r30, r24
    1a04:	24 81       	ldd	r18, Z+4	; 0x04
    1a06:	35 81       	ldd	r19, Z+5	; 0x05
    1a08:	89 81       	ldd	r24, Y+1	; 0x01
    1a0a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a0c:	82 17       	cp	r24, r18
    1a0e:	93 07       	cpc	r25, r19
    1a10:	68 f0       	brcs	.+26     	; 0x1a2c <xStreamBufferSpacesAvailable+0x86>
    1a12:	8b 81       	ldd	r24, Y+3	; 0x03
    1a14:	9c 81       	ldd	r25, Y+4	; 0x04
    1a16:	fc 01       	movw	r30, r24
    1a18:	84 81       	ldd	r24, Z+4	; 0x04
    1a1a:	95 81       	ldd	r25, Z+5	; 0x05
    1a1c:	29 81       	ldd	r18, Y+1	; 0x01
    1a1e:	3a 81       	ldd	r19, Y+2	; 0x02
    1a20:	a9 01       	movw	r20, r18
    1a22:	48 1b       	sub	r20, r24
    1a24:	59 0b       	sbc	r21, r25
    1a26:	ca 01       	movw	r24, r20
    1a28:	9a 83       	std	Y+2, r25	; 0x02
    1a2a:	89 83       	std	Y+1, r24	; 0x01
    1a2c:	89 81       	ldd	r24, Y+1	; 0x01
    1a2e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a30:	26 96       	adiw	r28, 0x06	; 6
    1a32:	0f b6       	in	r0, 0x3f	; 63
    1a34:	f8 94       	cli
    1a36:	de bf       	out	0x3e, r29	; 62
    1a38:	0f be       	out	0x3f, r0	; 63
    1a3a:	cd bf       	out	0x3d, r28	; 61
    1a3c:	df 91       	pop	r29
    1a3e:	cf 91       	pop	r28
    1a40:	08 95       	ret

00001a42 <xStreamBufferSendFromISR>:
    1a42:	ef 92       	push	r14
    1a44:	ff 92       	push	r15
    1a46:	0f 93       	push	r16
    1a48:	1f 93       	push	r17
    1a4a:	cf 93       	push	r28
    1a4c:	df 93       	push	r29
    1a4e:	cd b7       	in	r28, 0x3d	; 61
    1a50:	de b7       	in	r29, 0x3e	; 62
    1a52:	61 97       	sbiw	r28, 0x11	; 17
    1a54:	0f b6       	in	r0, 0x3f	; 63
    1a56:	f8 94       	cli
    1a58:	de bf       	out	0x3e, r29	; 62
    1a5a:	0f be       	out	0x3f, r0	; 63
    1a5c:	cd bf       	out	0x3d, r28	; 61
    1a5e:	9b 87       	std	Y+11, r25	; 0x0b
    1a60:	8a 87       	std	Y+10, r24	; 0x0a
    1a62:	7d 87       	std	Y+13, r23	; 0x0d
    1a64:	6c 87       	std	Y+12, r22	; 0x0c
    1a66:	5f 87       	std	Y+15, r21	; 0x0f
    1a68:	4e 87       	std	Y+14, r20	; 0x0e
    1a6a:	39 8b       	std	Y+17, r19	; 0x11
    1a6c:	28 8b       	std	Y+16, r18	; 0x10
    1a6e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1a70:	9b 85       	ldd	r25, Y+11	; 0x0b
    1a72:	9c 83       	std	Y+4, r25	; 0x04
    1a74:	8b 83       	std	Y+3, r24	; 0x03
    1a76:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a78:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a7a:	9a 83       	std	Y+2, r25	; 0x02
    1a7c:	89 83       	std	Y+1, r24	; 0x01
    1a7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a80:	9c 81       	ldd	r25, Y+4	; 0x04
    1a82:	fc 01       	movw	r30, r24
    1a84:	86 85       	ldd	r24, Z+14	; 0x0e
    1a86:	88 2f       	mov	r24, r24
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	81 70       	andi	r24, 0x01	; 1
    1a8c:	99 27       	eor	r25, r25
    1a8e:	89 2b       	or	r24, r25
    1a90:	29 f0       	breq	.+10     	; 0x1a9c <xStreamBufferSendFromISR+0x5a>
    1a92:	89 81       	ldd	r24, Y+1	; 0x01
    1a94:	9a 81       	ldd	r25, Y+2	; 0x02
    1a96:	02 96       	adiw	r24, 0x02	; 2
    1a98:	9a 83       	std	Y+2, r25	; 0x02
    1a9a:	89 83       	std	Y+1, r24	; 0x01
    1a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa0:	82 df       	rcall	.-252    	; 0x19a6 <xStreamBufferSpacesAvailable>
    1aa2:	9e 83       	std	Y+6, r25	; 0x06
    1aa4:	8d 83       	std	Y+5, r24	; 0x05
    1aa6:	e9 81       	ldd	r30, Y+1	; 0x01
    1aa8:	fa 81       	ldd	r31, Y+2	; 0x02
    1aaa:	2d 81       	ldd	r18, Y+5	; 0x05
    1aac:	3e 81       	ldd	r19, Y+6	; 0x06
    1aae:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ab0:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ab2:	6c 85       	ldd	r22, Y+12	; 0x0c
    1ab4:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ab6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab8:	9c 81       	ldd	r25, Y+4	; 0x04
    1aba:	8f 01       	movw	r16, r30
    1abc:	3e d0       	rcall	.+124    	; 0x1b3a <prvWriteMessageToBuffer>
    1abe:	98 87       	std	Y+8, r25	; 0x08
    1ac0:	8f 83       	std	Y+7, r24	; 0x07
    1ac2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ac4:	98 85       	ldd	r25, Y+8	; 0x08
    1ac6:	89 2b       	or	r24, r25
    1ac8:	49 f1       	breq	.+82     	; 0x1b1c <xStreamBufferSendFromISR+0xda>
    1aca:	8b 81       	ldd	r24, Y+3	; 0x03
    1acc:	9c 81       	ldd	r25, Y+4	; 0x04
    1ace:	f3 d2       	rcall	.+1510   	; 0x20b6 <prvBytesInBuffer>
    1ad0:	9c 01       	movw	r18, r24
    1ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad6:	fc 01       	movw	r30, r24
    1ad8:	86 81       	ldd	r24, Z+6	; 0x06
    1ada:	97 81       	ldd	r25, Z+7	; 0x07
    1adc:	28 17       	cp	r18, r24
    1ade:	39 07       	cpc	r19, r25
    1ae0:	e8 f0       	brcs	.+58     	; 0x1b1c <xStreamBufferSendFromISR+0xda>
    1ae2:	19 86       	std	Y+9, r1	; 0x09
    1ae4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ae6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ae8:	fc 01       	movw	r30, r24
    1aea:	80 85       	ldd	r24, Z+8	; 0x08
    1aec:	91 85       	ldd	r25, Z+9	; 0x09
    1aee:	89 2b       	or	r24, r25
    1af0:	a9 f0       	breq	.+42     	; 0x1b1c <xStreamBufferSendFromISR+0xda>
    1af2:	8b 81       	ldd	r24, Y+3	; 0x03
    1af4:	9c 81       	ldd	r25, Y+4	; 0x04
    1af6:	fc 01       	movw	r30, r24
    1af8:	80 85       	ldd	r24, Z+8	; 0x08
    1afa:	91 85       	ldd	r25, Z+9	; 0x09
    1afc:	28 89       	ldd	r18, Y+16	; 0x10
    1afe:	39 89       	ldd	r19, Y+17	; 0x11
    1b00:	79 01       	movw	r14, r18
    1b02:	00 e0       	ldi	r16, 0x00	; 0
    1b04:	10 e0       	ldi	r17, 0x00	; 0
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	40 e0       	ldi	r20, 0x00	; 0
    1b0a:	50 e0       	ldi	r21, 0x00	; 0
    1b0c:	ba 01       	movw	r22, r20
    1b0e:	0e 94 03 1b 	call	0x3606	; 0x3606 <xTaskGenericNotifyFromISR>
    1b12:	8b 81       	ldd	r24, Y+3	; 0x03
    1b14:	9c 81       	ldd	r25, Y+4	; 0x04
    1b16:	fc 01       	movw	r30, r24
    1b18:	11 86       	std	Z+9, r1	; 0x09
    1b1a:	10 86       	std	Z+8, r1	; 0x08
    1b1c:	8f 81       	ldd	r24, Y+7	; 0x07
    1b1e:	98 85       	ldd	r25, Y+8	; 0x08
    1b20:	61 96       	adiw	r28, 0x11	; 17
    1b22:	0f b6       	in	r0, 0x3f	; 63
    1b24:	f8 94       	cli
    1b26:	de bf       	out	0x3e, r29	; 62
    1b28:	0f be       	out	0x3f, r0	; 63
    1b2a:	cd bf       	out	0x3d, r28	; 61
    1b2c:	df 91       	pop	r29
    1b2e:	cf 91       	pop	r28
    1b30:	1f 91       	pop	r17
    1b32:	0f 91       	pop	r16
    1b34:	ff 90       	pop	r15
    1b36:	ef 90       	pop	r14
    1b38:	08 95       	ret

00001b3a <prvWriteMessageToBuffer>:
    1b3a:	0f 93       	push	r16
    1b3c:	1f 93       	push	r17
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	cd b7       	in	r28, 0x3d	; 61
    1b44:	de b7       	in	r29, 0x3e	; 62
    1b46:	61 97       	sbiw	r28, 0x11	; 17
    1b48:	0f b6       	in	r0, 0x3f	; 63
    1b4a:	f8 94       	cli
    1b4c:	de bf       	out	0x3e, r29	; 62
    1b4e:	0f be       	out	0x3f, r0	; 63
    1b50:	cd bf       	out	0x3d, r28	; 61
    1b52:	99 87       	std	Y+9, r25	; 0x09
    1b54:	88 87       	std	Y+8, r24	; 0x08
    1b56:	7b 87       	std	Y+11, r23	; 0x0b
    1b58:	6a 87       	std	Y+10, r22	; 0x0a
    1b5a:	5d 87       	std	Y+13, r21	; 0x0d
    1b5c:	4c 87       	std	Y+12, r20	; 0x0c
    1b5e:	3f 87       	std	Y+15, r19	; 0x0f
    1b60:	2e 87       	std	Y+14, r18	; 0x0e
    1b62:	19 8b       	std	Y+17, r17	; 0x11
    1b64:	08 8b       	std	Y+16, r16	; 0x10
    1b66:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b68:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b6a:	89 2b       	or	r24, r25
    1b6c:	11 f4       	brne	.+4      	; 0x1b72 <prvWriteMessageToBuffer+0x38>
    1b6e:	19 82       	std	Y+1, r1	; 0x01
    1b70:	33 c0       	rjmp	.+102    	; 0x1bd8 <prvWriteMessageToBuffer+0x9e>
    1b72:	88 85       	ldd	r24, Y+8	; 0x08
    1b74:	99 85       	ldd	r25, Y+9	; 0x09
    1b76:	fc 01       	movw	r30, r24
    1b78:	86 85       	ldd	r24, Z+14	; 0x0e
    1b7a:	88 2f       	mov	r24, r24
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	81 70       	andi	r24, 0x01	; 1
    1b80:	99 27       	eor	r25, r25
    1b82:	89 2b       	or	r24, r25
    1b84:	a9 f4       	brne	.+42     	; 0x1bb0 <prvWriteMessageToBuffer+0x76>
    1b86:	81 e0       	ldi	r24, 0x01	; 1
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b8c:	9d 85       	ldd	r25, Y+13	; 0x0d
    1b8e:	9d 83       	std	Y+5, r25	; 0x05
    1b90:	8c 83       	std	Y+4, r24	; 0x04
    1b92:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b94:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b96:	9f 83       	std	Y+7, r25	; 0x07
    1b98:	8e 83       	std	Y+6, r24	; 0x06
    1b9a:	2c 81       	ldd	r18, Y+4	; 0x04
    1b9c:	3d 81       	ldd	r19, Y+5	; 0x05
    1b9e:	8e 81       	ldd	r24, Y+6	; 0x06
    1ba0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ba2:	28 17       	cp	r18, r24
    1ba4:	39 07       	cpc	r19, r25
    1ba6:	08 f4       	brcc	.+2      	; 0x1baa <prvWriteMessageToBuffer+0x70>
    1ba8:	c9 01       	movw	r24, r18
    1baa:	9d 87       	std	Y+13, r25	; 0x0d
    1bac:	8c 87       	std	Y+12, r24	; 0x0c
    1bae:	14 c0       	rjmp	.+40     	; 0x1bd8 <prvWriteMessageToBuffer+0x9e>
    1bb0:	2e 85       	ldd	r18, Y+14	; 0x0e
    1bb2:	3f 85       	ldd	r19, Y+15	; 0x0f
    1bb4:	88 89       	ldd	r24, Y+16	; 0x10
    1bb6:	99 89       	ldd	r25, Y+17	; 0x11
    1bb8:	28 17       	cp	r18, r24
    1bba:	39 07       	cpc	r19, r25
    1bbc:	60 f0       	brcs	.+24     	; 0x1bd6 <prvWriteMessageToBuffer+0x9c>
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	89 83       	std	Y+1, r24	; 0x01
    1bc2:	9e 01       	movw	r18, r28
    1bc4:	24 5f       	subi	r18, 0xF4	; 244
    1bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc8:	88 85       	ldd	r24, Y+8	; 0x08
    1bca:	99 85       	ldd	r25, Y+9	; 0x09
    1bcc:	42 e0       	ldi	r20, 0x02	; 2
    1bce:	50 e0       	ldi	r21, 0x00	; 0
    1bd0:	b9 01       	movw	r22, r18
    1bd2:	3b d1       	rcall	.+630    	; 0x1e4a <prvWriteBytesToBuffer>
    1bd4:	01 c0       	rjmp	.+2      	; 0x1bd8 <prvWriteMessageToBuffer+0x9e>
    1bd6:	19 82       	std	Y+1, r1	; 0x01
    1bd8:	89 81       	ldd	r24, Y+1	; 0x01
    1bda:	88 23       	and	r24, r24
    1bdc:	59 f0       	breq	.+22     	; 0x1bf4 <prvWriteMessageToBuffer+0xba>
    1bde:	4c 85       	ldd	r20, Y+12	; 0x0c
    1be0:	5d 85       	ldd	r21, Y+13	; 0x0d
    1be2:	2a 85       	ldd	r18, Y+10	; 0x0a
    1be4:	3b 85       	ldd	r19, Y+11	; 0x0b
    1be6:	88 85       	ldd	r24, Y+8	; 0x08
    1be8:	99 85       	ldd	r25, Y+9	; 0x09
    1bea:	b9 01       	movw	r22, r18
    1bec:	2e d1       	rcall	.+604    	; 0x1e4a <prvWriteBytesToBuffer>
    1bee:	9b 83       	std	Y+3, r25	; 0x03
    1bf0:	8a 83       	std	Y+2, r24	; 0x02
    1bf2:	02 c0       	rjmp	.+4      	; 0x1bf8 <prvWriteMessageToBuffer+0xbe>
    1bf4:	1b 82       	std	Y+3, r1	; 0x03
    1bf6:	1a 82       	std	Y+2, r1	; 0x02
    1bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bfa:	9b 81       	ldd	r25, Y+3	; 0x03
    1bfc:	61 96       	adiw	r28, 0x11	; 17
    1bfe:	0f b6       	in	r0, 0x3f	; 63
    1c00:	f8 94       	cli
    1c02:	de bf       	out	0x3e, r29	; 62
    1c04:	0f be       	out	0x3f, r0	; 63
    1c06:	cd bf       	out	0x3d, r28	; 61
    1c08:	df 91       	pop	r29
    1c0a:	cf 91       	pop	r28
    1c0c:	1f 91       	pop	r17
    1c0e:	0f 91       	pop	r16
    1c10:	08 95       	ret

00001c12 <xStreamBufferReceive>:
    1c12:	ef 92       	push	r14
    1c14:	ff 92       	push	r15
    1c16:	0f 93       	push	r16
    1c18:	1f 93       	push	r17
    1c1a:	cf 93       	push	r28
    1c1c:	df 93       	push	r29
    1c1e:	cd b7       	in	r28, 0x3d	; 61
    1c20:	de b7       	in	r29, 0x3e	; 62
    1c22:	60 97       	sbiw	r28, 0x10	; 16
    1c24:	0f b6       	in	r0, 0x3f	; 63
    1c26:	f8 94       	cli
    1c28:	de bf       	out	0x3e, r29	; 62
    1c2a:	0f be       	out	0x3f, r0	; 63
    1c2c:	cd bf       	out	0x3d, r28	; 61
    1c2e:	9a 87       	std	Y+10, r25	; 0x0a
    1c30:	89 87       	std	Y+9, r24	; 0x09
    1c32:	7c 87       	std	Y+12, r23	; 0x0c
    1c34:	6b 87       	std	Y+11, r22	; 0x0b
    1c36:	5e 87       	std	Y+14, r21	; 0x0e
    1c38:	4d 87       	std	Y+13, r20	; 0x0d
    1c3a:	38 8b       	std	Y+16, r19	; 0x10
    1c3c:	2f 87       	std	Y+15, r18	; 0x0f
    1c3e:	89 85       	ldd	r24, Y+9	; 0x09
    1c40:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c42:	98 87       	std	Y+8, r25	; 0x08
    1c44:	8f 83       	std	Y+7, r24	; 0x07
    1c46:	1a 82       	std	Y+2, r1	; 0x02
    1c48:	19 82       	std	Y+1, r1	; 0x01
    1c4a:	8f 81       	ldd	r24, Y+7	; 0x07
    1c4c:	98 85       	ldd	r25, Y+8	; 0x08
    1c4e:	fc 01       	movw	r30, r24
    1c50:	86 85       	ldd	r24, Z+14	; 0x0e
    1c52:	88 2f       	mov	r24, r24
    1c54:	90 e0       	ldi	r25, 0x00	; 0
    1c56:	81 70       	andi	r24, 0x01	; 1
    1c58:	99 27       	eor	r25, r25
    1c5a:	89 2b       	or	r24, r25
    1c5c:	29 f0       	breq	.+10     	; 0x1c68 <xStreamBufferReceive+0x56>
    1c5e:	82 e0       	ldi	r24, 0x02	; 2
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	9e 83       	std	Y+6, r25	; 0x06
    1c64:	8d 83       	std	Y+5, r24	; 0x05
    1c66:	02 c0       	rjmp	.+4      	; 0x1c6c <xStreamBufferReceive+0x5a>
    1c68:	1e 82       	std	Y+6, r1	; 0x06
    1c6a:	1d 82       	std	Y+5, r1	; 0x05
    1c6c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c6e:	98 89       	ldd	r25, Y+16	; 0x10
    1c70:	89 2b       	or	r24, r25
    1c72:	09 f4       	brne	.+2      	; 0x1c76 <xStreamBufferReceive+0x64>
    1c74:	3c c0       	rjmp	.+120    	; 0x1cee <xStreamBufferReceive+0xdc>
    1c76:	0f b6       	in	r0, 0x3f	; 63
    1c78:	f8 94       	cli
    1c7a:	0f 92       	push	r0
    1c7c:	8f 81       	ldd	r24, Y+7	; 0x07
    1c7e:	98 85       	ldd	r25, Y+8	; 0x08
    1c80:	1a d2       	rcall	.+1076   	; 0x20b6 <prvBytesInBuffer>
    1c82:	9c 83       	std	Y+4, r25	; 0x04
    1c84:	8b 83       	std	Y+3, r24	; 0x03
    1c86:	2b 81       	ldd	r18, Y+3	; 0x03
    1c88:	3c 81       	ldd	r19, Y+4	; 0x04
    1c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8e:	82 17       	cp	r24, r18
    1c90:	93 07       	cpc	r25, r19
    1c92:	60 f0       	brcs	.+24     	; 0x1cac <xStreamBufferReceive+0x9a>
    1c94:	80 e0       	ldi	r24, 0x00	; 0
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	0e 94 fe 1b 	call	0x37fc	; 0x37fc <xTaskNotifyStateClear>
    1c9c:	0e 94 6e 17 	call	0x2edc	; 0x2edc <xTaskGetCurrentTaskHandle>
    1ca0:	9c 01       	movw	r18, r24
    1ca2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ca4:	98 85       	ldd	r25, Y+8	; 0x08
    1ca6:	fc 01       	movw	r30, r24
    1ca8:	31 87       	std	Z+9, r19	; 0x09
    1caa:	20 87       	std	Z+8, r18	; 0x08
    1cac:	0f 90       	pop	r0
    1cae:	0f be       	out	0x3f, r0	; 63
    1cb0:	2b 81       	ldd	r18, Y+3	; 0x03
    1cb2:	3c 81       	ldd	r19, Y+4	; 0x04
    1cb4:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb6:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb8:	82 17       	cp	r24, r18
    1cba:	93 07       	cpc	r25, r19
    1cbc:	e8 f0       	brcs	.+58     	; 0x1cf8 <xStreamBufferReceive+0xe6>
    1cbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cc0:	98 89       	ldd	r25, Y+16	; 0x10
    1cc2:	7c 01       	movw	r14, r24
    1cc4:	00 e0       	ldi	r16, 0x00	; 0
    1cc6:	10 e0       	ldi	r17, 0x00	; 0
    1cc8:	20 e0       	ldi	r18, 0x00	; 0
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	a9 01       	movw	r20, r18
    1cce:	60 e0       	ldi	r22, 0x00	; 0
    1cd0:	70 e0       	ldi	r23, 0x00	; 0
    1cd2:	cb 01       	movw	r24, r22
    1cd4:	0e 94 7d 19 	call	0x32fa	; 0x32fa <xTaskNotifyWait>
    1cd8:	8f 81       	ldd	r24, Y+7	; 0x07
    1cda:	98 85       	ldd	r25, Y+8	; 0x08
    1cdc:	fc 01       	movw	r30, r24
    1cde:	11 86       	std	Z+9, r1	; 0x09
    1ce0:	10 86       	std	Z+8, r1	; 0x08
    1ce2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ce4:	98 85       	ldd	r25, Y+8	; 0x08
    1ce6:	e7 d1       	rcall	.+974    	; 0x20b6 <prvBytesInBuffer>
    1ce8:	9c 83       	std	Y+4, r25	; 0x04
    1cea:	8b 83       	std	Y+3, r24	; 0x03
    1cec:	05 c0       	rjmp	.+10     	; 0x1cf8 <xStreamBufferReceive+0xe6>
    1cee:	8f 81       	ldd	r24, Y+7	; 0x07
    1cf0:	98 85       	ldd	r25, Y+8	; 0x08
    1cf2:	e1 d1       	rcall	.+962    	; 0x20b6 <prvBytesInBuffer>
    1cf4:	9c 83       	std	Y+4, r25	; 0x04
    1cf6:	8b 83       	std	Y+3, r24	; 0x03
    1cf8:	2b 81       	ldd	r18, Y+3	; 0x03
    1cfa:	3c 81       	ldd	r19, Y+4	; 0x04
    1cfc:	8d 81       	ldd	r24, Y+5	; 0x05
    1cfe:	9e 81       	ldd	r25, Y+6	; 0x06
    1d00:	82 17       	cp	r24, r18
    1d02:	93 07       	cpc	r25, r19
    1d04:	68 f5       	brcc	.+90     	; 0x1d60 <xStreamBufferReceive+0x14e>
    1d06:	ed 81       	ldd	r30, Y+5	; 0x05
    1d08:	fe 81       	ldd	r31, Y+6	; 0x06
    1d0a:	2b 81       	ldd	r18, Y+3	; 0x03
    1d0c:	3c 81       	ldd	r19, Y+4	; 0x04
    1d0e:	4d 85       	ldd	r20, Y+13	; 0x0d
    1d10:	5e 85       	ldd	r21, Y+14	; 0x0e
    1d12:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d14:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d16:	8f 81       	ldd	r24, Y+7	; 0x07
    1d18:	98 85       	ldd	r25, Y+8	; 0x08
    1d1a:	8f 01       	movw	r16, r30
    1d1c:	30 d0       	rcall	.+96     	; 0x1d7e <prvReadMessageFromBuffer>
    1d1e:	9a 83       	std	Y+2, r25	; 0x02
    1d20:	89 83       	std	Y+1, r24	; 0x01
    1d22:	89 81       	ldd	r24, Y+1	; 0x01
    1d24:	9a 81       	ldd	r25, Y+2	; 0x02
    1d26:	89 2b       	or	r24, r25
    1d28:	d9 f0       	breq	.+54     	; 0x1d60 <xStreamBufferReceive+0x14e>
    1d2a:	7d d4       	rcall	.+2298   	; 0x2626 <vTaskSuspendAll>
    1d2c:	8f 81       	ldd	r24, Y+7	; 0x07
    1d2e:	98 85       	ldd	r25, Y+8	; 0x08
    1d30:	fc 01       	movw	r30, r24
    1d32:	82 85       	ldd	r24, Z+10	; 0x0a
    1d34:	93 85       	ldd	r25, Z+11	; 0x0b
    1d36:	89 2b       	or	r24, r25
    1d38:	91 f0       	breq	.+36     	; 0x1d5e <xStreamBufferReceive+0x14c>
    1d3a:	8f 81       	ldd	r24, Y+7	; 0x07
    1d3c:	98 85       	ldd	r25, Y+8	; 0x08
    1d3e:	fc 01       	movw	r30, r24
    1d40:	82 85       	ldd	r24, Z+10	; 0x0a
    1d42:	93 85       	ldd	r25, Z+11	; 0x0b
    1d44:	00 e0       	ldi	r16, 0x00	; 0
    1d46:	10 e0       	ldi	r17, 0x00	; 0
    1d48:	20 e0       	ldi	r18, 0x00	; 0
    1d4a:	40 e0       	ldi	r20, 0x00	; 0
    1d4c:	50 e0       	ldi	r21, 0x00	; 0
    1d4e:	ba 01       	movw	r22, r20
    1d50:	0e 94 22 1a 	call	0x3444	; 0x3444 <xTaskGenericNotify>
    1d54:	8f 81       	ldd	r24, Y+7	; 0x07
    1d56:	98 85       	ldd	r25, Y+8	; 0x08
    1d58:	fc 01       	movw	r30, r24
    1d5a:	13 86       	std	Z+11, r1	; 0x0b
    1d5c:	12 86       	std	Z+10, r1	; 0x0a
    1d5e:	70 d4       	rcall	.+2272   	; 0x2640 <xTaskResumeAll>
    1d60:	89 81       	ldd	r24, Y+1	; 0x01
    1d62:	9a 81       	ldd	r25, Y+2	; 0x02
    1d64:	60 96       	adiw	r28, 0x10	; 16
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	de bf       	out	0x3e, r29	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	cd bf       	out	0x3d, r28	; 61
    1d70:	df 91       	pop	r29
    1d72:	cf 91       	pop	r28
    1d74:	1f 91       	pop	r17
    1d76:	0f 91       	pop	r16
    1d78:	ff 90       	pop	r15
    1d7a:	ef 90       	pop	r14
    1d7c:	08 95       	ret

00001d7e <prvReadMessageFromBuffer>:
    1d7e:	0f 93       	push	r16
    1d80:	1f 93       	push	r17
    1d82:	cf 93       	push	r28
    1d84:	df 93       	push	r29
    1d86:	cd b7       	in	r28, 0x3d	; 61
    1d88:	de b7       	in	r29, 0x3e	; 62
    1d8a:	62 97       	sbiw	r28, 0x12	; 18
    1d8c:	0f b6       	in	r0, 0x3f	; 63
    1d8e:	f8 94       	cli
    1d90:	de bf       	out	0x3e, r29	; 62
    1d92:	0f be       	out	0x3f, r0	; 63
    1d94:	cd bf       	out	0x3d, r28	; 61
    1d96:	9a 87       	std	Y+10, r25	; 0x0a
    1d98:	89 87       	std	Y+9, r24	; 0x09
    1d9a:	7c 87       	std	Y+12, r23	; 0x0c
    1d9c:	6b 87       	std	Y+11, r22	; 0x0b
    1d9e:	5e 87       	std	Y+14, r21	; 0x0e
    1da0:	4d 87       	std	Y+13, r20	; 0x0d
    1da2:	38 8b       	std	Y+16, r19	; 0x10
    1da4:	2f 87       	std	Y+15, r18	; 0x0f
    1da6:	1a 8b       	std	Y+18, r17	; 0x12
    1da8:	09 8b       	std	Y+17, r16	; 0x11
    1daa:	89 89       	ldd	r24, Y+17	; 0x11
    1dac:	9a 89       	ldd	r25, Y+18	; 0x12
    1dae:	89 2b       	or	r24, r25
    1db0:	81 f1       	breq	.+96     	; 0x1e12 <prvReadMessageFromBuffer+0x94>
    1db2:	89 85       	ldd	r24, Y+9	; 0x09
    1db4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1db6:	fc 01       	movw	r30, r24
    1db8:	80 81       	ld	r24, Z
    1dba:	91 81       	ldd	r25, Z+1	; 0x01
    1dbc:	9c 83       	std	Y+4, r25	; 0x04
    1dbe:	8b 83       	std	Y+3, r24	; 0x03
    1dc0:	2f 85       	ldd	r18, Y+15	; 0x0f
    1dc2:	38 89       	ldd	r19, Y+16	; 0x10
    1dc4:	49 89       	ldd	r20, Y+17	; 0x11
    1dc6:	5a 89       	ldd	r21, Y+18	; 0x12
    1dc8:	be 01       	movw	r22, r28
    1dca:	69 5f       	subi	r22, 0xF9	; 249
    1dcc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dce:	89 85       	ldd	r24, Y+9	; 0x09
    1dd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dd2:	ca d0       	rcall	.+404    	; 0x1f68 <prvReadBytesFromBuffer>
    1dd4:	8f 81       	ldd	r24, Y+7	; 0x07
    1dd6:	98 85       	ldd	r25, Y+8	; 0x08
    1dd8:	9a 83       	std	Y+2, r25	; 0x02
    1dda:	89 83       	std	Y+1, r24	; 0x01
    1ddc:	2f 85       	ldd	r18, Y+15	; 0x0f
    1dde:	38 89       	ldd	r19, Y+16	; 0x10
    1de0:	89 89       	ldd	r24, Y+17	; 0x11
    1de2:	9a 89       	ldd	r25, Y+18	; 0x12
    1de4:	a9 01       	movw	r20, r18
    1de6:	48 1b       	sub	r20, r24
    1de8:	59 0b       	sbc	r21, r25
    1dea:	ca 01       	movw	r24, r20
    1dec:	98 8b       	std	Y+16, r25	; 0x10
    1dee:	8f 87       	std	Y+15, r24	; 0x0f
    1df0:	29 81       	ldd	r18, Y+1	; 0x01
    1df2:	3a 81       	ldd	r19, Y+2	; 0x02
    1df4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1df6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1df8:	82 17       	cp	r24, r18
    1dfa:	93 07       	cpc	r25, r19
    1dfc:	70 f4       	brcc	.+28     	; 0x1e1a <prvReadMessageFromBuffer+0x9c>
    1dfe:	89 85       	ldd	r24, Y+9	; 0x09
    1e00:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e02:	2b 81       	ldd	r18, Y+3	; 0x03
    1e04:	3c 81       	ldd	r19, Y+4	; 0x04
    1e06:	fc 01       	movw	r30, r24
    1e08:	31 83       	std	Z+1, r19	; 0x01
    1e0a:	20 83       	st	Z, r18
    1e0c:	1a 82       	std	Y+2, r1	; 0x02
    1e0e:	19 82       	std	Y+1, r1	; 0x01
    1e10:	04 c0       	rjmp	.+8      	; 0x1e1a <prvReadMessageFromBuffer+0x9c>
    1e12:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e14:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e16:	9a 83       	std	Y+2, r25	; 0x02
    1e18:	89 83       	std	Y+1, r24	; 0x01
    1e1a:	2f 85       	ldd	r18, Y+15	; 0x0f
    1e1c:	38 89       	ldd	r19, Y+16	; 0x10
    1e1e:	49 81       	ldd	r20, Y+1	; 0x01
    1e20:	5a 81       	ldd	r21, Y+2	; 0x02
    1e22:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e24:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e26:	89 85       	ldd	r24, Y+9	; 0x09
    1e28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e2a:	9e d0       	rcall	.+316    	; 0x1f68 <prvReadBytesFromBuffer>
    1e2c:	9e 83       	std	Y+6, r25	; 0x06
    1e2e:	8d 83       	std	Y+5, r24	; 0x05
    1e30:	8d 81       	ldd	r24, Y+5	; 0x05
    1e32:	9e 81       	ldd	r25, Y+6	; 0x06
    1e34:	62 96       	adiw	r28, 0x12	; 18
    1e36:	0f b6       	in	r0, 0x3f	; 63
    1e38:	f8 94       	cli
    1e3a:	de bf       	out	0x3e, r29	; 62
    1e3c:	0f be       	out	0x3f, r0	; 63
    1e3e:	cd bf       	out	0x3d, r28	; 61
    1e40:	df 91       	pop	r29
    1e42:	cf 91       	pop	r28
    1e44:	1f 91       	pop	r17
    1e46:	0f 91       	pop	r16
    1e48:	08 95       	ret

00001e4a <prvWriteBytesToBuffer>:
    1e4a:	cf 93       	push	r28
    1e4c:	df 93       	push	r29
    1e4e:	cd b7       	in	r28, 0x3d	; 61
    1e50:	de b7       	in	r29, 0x3e	; 62
    1e52:	2e 97       	sbiw	r28, 0x0e	; 14
    1e54:	0f b6       	in	r0, 0x3f	; 63
    1e56:	f8 94       	cli
    1e58:	de bf       	out	0x3e, r29	; 62
    1e5a:	0f be       	out	0x3f, r0	; 63
    1e5c:	cd bf       	out	0x3d, r28	; 61
    1e5e:	9a 87       	std	Y+10, r25	; 0x0a
    1e60:	89 87       	std	Y+9, r24	; 0x09
    1e62:	7c 87       	std	Y+12, r23	; 0x0c
    1e64:	6b 87       	std	Y+11, r22	; 0x0b
    1e66:	5e 87       	std	Y+14, r21	; 0x0e
    1e68:	4d 87       	std	Y+13, r20	; 0x0d
    1e6a:	89 85       	ldd	r24, Y+9	; 0x09
    1e6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e6e:	fc 01       	movw	r30, r24
    1e70:	82 81       	ldd	r24, Z+2	; 0x02
    1e72:	93 81       	ldd	r25, Z+3	; 0x03
    1e74:	9a 83       	std	Y+2, r25	; 0x02
    1e76:	89 83       	std	Y+1, r24	; 0x01
    1e78:	89 85       	ldd	r24, Y+9	; 0x09
    1e7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e7c:	fc 01       	movw	r30, r24
    1e7e:	24 81       	ldd	r18, Z+4	; 0x04
    1e80:	35 81       	ldd	r19, Z+5	; 0x05
    1e82:	89 81       	ldd	r24, Y+1	; 0x01
    1e84:	9a 81       	ldd	r25, Y+2	; 0x02
    1e86:	a9 01       	movw	r20, r18
    1e88:	48 1b       	sub	r20, r24
    1e8a:	59 0b       	sbc	r21, r25
    1e8c:	ca 01       	movw	r24, r20
    1e8e:	9c 83       	std	Y+4, r25	; 0x04
    1e90:	8b 83       	std	Y+3, r24	; 0x03
    1e92:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e94:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e96:	9e 83       	std	Y+6, r25	; 0x06
    1e98:	8d 83       	std	Y+5, r24	; 0x05
    1e9a:	2b 81       	ldd	r18, Y+3	; 0x03
    1e9c:	3c 81       	ldd	r19, Y+4	; 0x04
    1e9e:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea0:	9e 81       	ldd	r25, Y+6	; 0x06
    1ea2:	28 17       	cp	r18, r24
    1ea4:	39 07       	cpc	r19, r25
    1ea6:	08 f4       	brcc	.+2      	; 0x1eaa <prvWriteBytesToBuffer+0x60>
    1ea8:	c9 01       	movw	r24, r18
    1eaa:	98 87       	std	Y+8, r25	; 0x08
    1eac:	8f 83       	std	Y+7, r24	; 0x07
    1eae:	89 85       	ldd	r24, Y+9	; 0x09
    1eb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eb2:	fc 01       	movw	r30, r24
    1eb4:	24 85       	ldd	r18, Z+12	; 0x0c
    1eb6:	35 85       	ldd	r19, Z+13	; 0x0d
    1eb8:	89 81       	ldd	r24, Y+1	; 0x01
    1eba:	9a 81       	ldd	r25, Y+2	; 0x02
    1ebc:	82 0f       	add	r24, r18
    1ebe:	93 1f       	adc	r25, r19
    1ec0:	4f 81       	ldd	r20, Y+7	; 0x07
    1ec2:	58 85       	ldd	r21, Y+8	; 0x08
    1ec4:	2b 85       	ldd	r18, Y+11	; 0x0b
    1ec6:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ec8:	b9 01       	movw	r22, r18
    1eca:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    1ece:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ed0:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ed2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ed4:	98 85       	ldd	r25, Y+8	; 0x08
    1ed6:	82 17       	cp	r24, r18
    1ed8:	93 07       	cpc	r25, r19
    1eda:	a8 f4       	brcc	.+42     	; 0x1f06 <prvWriteBytesToBuffer+0xbc>
    1edc:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ede:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ee0:	8f 81       	ldd	r24, Y+7	; 0x07
    1ee2:	98 85       	ldd	r25, Y+8	; 0x08
    1ee4:	a9 01       	movw	r20, r18
    1ee6:	48 1b       	sub	r20, r24
    1ee8:	59 0b       	sbc	r21, r25
    1eea:	2b 85       	ldd	r18, Y+11	; 0x0b
    1eec:	3c 85       	ldd	r19, Y+12	; 0x0c
    1eee:	8f 81       	ldd	r24, Y+7	; 0x07
    1ef0:	98 85       	ldd	r25, Y+8	; 0x08
    1ef2:	28 0f       	add	r18, r24
    1ef4:	39 1f       	adc	r19, r25
    1ef6:	89 85       	ldd	r24, Y+9	; 0x09
    1ef8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1efa:	fc 01       	movw	r30, r24
    1efc:	84 85       	ldd	r24, Z+12	; 0x0c
    1efe:	95 85       	ldd	r25, Z+13	; 0x0d
    1f00:	b9 01       	movw	r22, r18
    1f02:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    1f06:	29 81       	ldd	r18, Y+1	; 0x01
    1f08:	3a 81       	ldd	r19, Y+2	; 0x02
    1f0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f0e:	82 0f       	add	r24, r18
    1f10:	93 1f       	adc	r25, r19
    1f12:	9a 83       	std	Y+2, r25	; 0x02
    1f14:	89 83       	std	Y+1, r24	; 0x01
    1f16:	89 85       	ldd	r24, Y+9	; 0x09
    1f18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f1a:	fc 01       	movw	r30, r24
    1f1c:	24 81       	ldd	r18, Z+4	; 0x04
    1f1e:	35 81       	ldd	r19, Z+5	; 0x05
    1f20:	89 81       	ldd	r24, Y+1	; 0x01
    1f22:	9a 81       	ldd	r25, Y+2	; 0x02
    1f24:	82 17       	cp	r24, r18
    1f26:	93 07       	cpc	r25, r19
    1f28:	68 f0       	brcs	.+26     	; 0x1f44 <prvWriteBytesToBuffer+0xfa>
    1f2a:	89 85       	ldd	r24, Y+9	; 0x09
    1f2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f2e:	fc 01       	movw	r30, r24
    1f30:	84 81       	ldd	r24, Z+4	; 0x04
    1f32:	95 81       	ldd	r25, Z+5	; 0x05
    1f34:	29 81       	ldd	r18, Y+1	; 0x01
    1f36:	3a 81       	ldd	r19, Y+2	; 0x02
    1f38:	a9 01       	movw	r20, r18
    1f3a:	48 1b       	sub	r20, r24
    1f3c:	59 0b       	sbc	r21, r25
    1f3e:	ca 01       	movw	r24, r20
    1f40:	9a 83       	std	Y+2, r25	; 0x02
    1f42:	89 83       	std	Y+1, r24	; 0x01
    1f44:	89 85       	ldd	r24, Y+9	; 0x09
    1f46:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f48:	29 81       	ldd	r18, Y+1	; 0x01
    1f4a:	3a 81       	ldd	r19, Y+2	; 0x02
    1f4c:	fc 01       	movw	r30, r24
    1f4e:	33 83       	std	Z+3, r19	; 0x03
    1f50:	22 83       	std	Z+2, r18	; 0x02
    1f52:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f54:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f56:	2e 96       	adiw	r28, 0x0e	; 14
    1f58:	0f b6       	in	r0, 0x3f	; 63
    1f5a:	f8 94       	cli
    1f5c:	de bf       	out	0x3e, r29	; 62
    1f5e:	0f be       	out	0x3f, r0	; 63
    1f60:	cd bf       	out	0x3d, r28	; 61
    1f62:	df 91       	pop	r29
    1f64:	cf 91       	pop	r28
    1f66:	08 95       	ret

00001f68 <prvReadBytesFromBuffer>:
    1f68:	cf 93       	push	r28
    1f6a:	df 93       	push	r29
    1f6c:	cd b7       	in	r28, 0x3d	; 61
    1f6e:	de b7       	in	r29, 0x3e	; 62
    1f70:	66 97       	sbiw	r28, 0x16	; 22
    1f72:	0f b6       	in	r0, 0x3f	; 63
    1f74:	f8 94       	cli
    1f76:	de bf       	out	0x3e, r29	; 62
    1f78:	0f be       	out	0x3f, r0	; 63
    1f7a:	cd bf       	out	0x3d, r28	; 61
    1f7c:	98 8b       	std	Y+16, r25	; 0x10
    1f7e:	8f 87       	std	Y+15, r24	; 0x0f
    1f80:	7a 8b       	std	Y+18, r23	; 0x12
    1f82:	69 8b       	std	Y+17, r22	; 0x11
    1f84:	5c 8b       	std	Y+20, r21	; 0x14
    1f86:	4b 8b       	std	Y+19, r20	; 0x13
    1f88:	3e 8b       	std	Y+22, r19	; 0x16
    1f8a:	2d 8b       	std	Y+21, r18	; 0x15
    1f8c:	8d 89       	ldd	r24, Y+21	; 0x15
    1f8e:	9e 89       	ldd	r25, Y+22	; 0x16
    1f90:	9c 83       	std	Y+4, r25	; 0x04
    1f92:	8b 83       	std	Y+3, r24	; 0x03
    1f94:	8b 89       	ldd	r24, Y+19	; 0x13
    1f96:	9c 89       	ldd	r25, Y+20	; 0x14
    1f98:	9e 83       	std	Y+6, r25	; 0x06
    1f9a:	8d 83       	std	Y+5, r24	; 0x05
    1f9c:	2b 81       	ldd	r18, Y+3	; 0x03
    1f9e:	3c 81       	ldd	r19, Y+4	; 0x04
    1fa0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa2:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa4:	28 17       	cp	r18, r24
    1fa6:	39 07       	cpc	r19, r25
    1fa8:	08 f4       	brcc	.+2      	; 0x1fac <prvReadBytesFromBuffer+0x44>
    1faa:	c9 01       	movw	r24, r18
    1fac:	98 87       	std	Y+8, r25	; 0x08
    1fae:	8f 83       	std	Y+7, r24	; 0x07
    1fb0:	8f 81       	ldd	r24, Y+7	; 0x07
    1fb2:	98 85       	ldd	r25, Y+8	; 0x08
    1fb4:	89 2b       	or	r24, r25
    1fb6:	09 f4       	brne	.+2      	; 0x1fba <prvReadBytesFromBuffer+0x52>
    1fb8:	73 c0       	rjmp	.+230    	; 0x20a0 <prvReadBytesFromBuffer+0x138>
    1fba:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fbc:	98 89       	ldd	r25, Y+16	; 0x10
    1fbe:	fc 01       	movw	r30, r24
    1fc0:	80 81       	ld	r24, Z
    1fc2:	91 81       	ldd	r25, Z+1	; 0x01
    1fc4:	9a 83       	std	Y+2, r25	; 0x02
    1fc6:	89 83       	std	Y+1, r24	; 0x01
    1fc8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fca:	98 89       	ldd	r25, Y+16	; 0x10
    1fcc:	fc 01       	movw	r30, r24
    1fce:	24 81       	ldd	r18, Z+4	; 0x04
    1fd0:	35 81       	ldd	r19, Z+5	; 0x05
    1fd2:	89 81       	ldd	r24, Y+1	; 0x01
    1fd4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fd6:	a9 01       	movw	r20, r18
    1fd8:	48 1b       	sub	r20, r24
    1fda:	59 0b       	sbc	r21, r25
    1fdc:	ca 01       	movw	r24, r20
    1fde:	9a 87       	std	Y+10, r25	; 0x0a
    1fe0:	89 87       	std	Y+9, r24	; 0x09
    1fe2:	8f 81       	ldd	r24, Y+7	; 0x07
    1fe4:	98 85       	ldd	r25, Y+8	; 0x08
    1fe6:	9c 87       	std	Y+12, r25	; 0x0c
    1fe8:	8b 87       	std	Y+11, r24	; 0x0b
    1fea:	29 85       	ldd	r18, Y+9	; 0x09
    1fec:	3a 85       	ldd	r19, Y+10	; 0x0a
    1fee:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ff0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1ff2:	28 17       	cp	r18, r24
    1ff4:	39 07       	cpc	r19, r25
    1ff6:	08 f4       	brcc	.+2      	; 0x1ffa <prvReadBytesFromBuffer+0x92>
    1ff8:	c9 01       	movw	r24, r18
    1ffa:	9e 87       	std	Y+14, r25	; 0x0e
    1ffc:	8d 87       	std	Y+13, r24	; 0x0d
    1ffe:	8f 85       	ldd	r24, Y+15	; 0x0f
    2000:	98 89       	ldd	r25, Y+16	; 0x10
    2002:	fc 01       	movw	r30, r24
    2004:	24 85       	ldd	r18, Z+12	; 0x0c
    2006:	35 85       	ldd	r19, Z+13	; 0x0d
    2008:	89 81       	ldd	r24, Y+1	; 0x01
    200a:	9a 81       	ldd	r25, Y+2	; 0x02
    200c:	28 0f       	add	r18, r24
    200e:	39 1f       	adc	r19, r25
    2010:	4d 85       	ldd	r20, Y+13	; 0x0d
    2012:	5e 85       	ldd	r21, Y+14	; 0x0e
    2014:	89 89       	ldd	r24, Y+17	; 0x11
    2016:	9a 89       	ldd	r25, Y+18	; 0x12
    2018:	b9 01       	movw	r22, r18
    201a:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    201e:	2f 81       	ldd	r18, Y+7	; 0x07
    2020:	38 85       	ldd	r19, Y+8	; 0x08
    2022:	8d 85       	ldd	r24, Y+13	; 0x0d
    2024:	9e 85       	ldd	r25, Y+14	; 0x0e
    2026:	82 17       	cp	r24, r18
    2028:	93 07       	cpc	r25, r19
    202a:	a0 f4       	brcc	.+40     	; 0x2054 <prvReadBytesFromBuffer+0xec>
    202c:	2f 81       	ldd	r18, Y+7	; 0x07
    202e:	38 85       	ldd	r19, Y+8	; 0x08
    2030:	8d 85       	ldd	r24, Y+13	; 0x0d
    2032:	9e 85       	ldd	r25, Y+14	; 0x0e
    2034:	a9 01       	movw	r20, r18
    2036:	48 1b       	sub	r20, r24
    2038:	59 0b       	sbc	r21, r25
    203a:	8f 85       	ldd	r24, Y+15	; 0x0f
    203c:	98 89       	ldd	r25, Y+16	; 0x10
    203e:	fc 01       	movw	r30, r24
    2040:	64 85       	ldd	r22, Z+12	; 0x0c
    2042:	75 85       	ldd	r23, Z+13	; 0x0d
    2044:	29 89       	ldd	r18, Y+17	; 0x11
    2046:	3a 89       	ldd	r19, Y+18	; 0x12
    2048:	8d 85       	ldd	r24, Y+13	; 0x0d
    204a:	9e 85       	ldd	r25, Y+14	; 0x0e
    204c:	82 0f       	add	r24, r18
    204e:	93 1f       	adc	r25, r19
    2050:	0e 94 ec 36 	call	0x6dd8	; 0x6dd8 <memcpy>
    2054:	29 81       	ldd	r18, Y+1	; 0x01
    2056:	3a 81       	ldd	r19, Y+2	; 0x02
    2058:	8f 81       	ldd	r24, Y+7	; 0x07
    205a:	98 85       	ldd	r25, Y+8	; 0x08
    205c:	82 0f       	add	r24, r18
    205e:	93 1f       	adc	r25, r19
    2060:	9a 83       	std	Y+2, r25	; 0x02
    2062:	89 83       	std	Y+1, r24	; 0x01
    2064:	8f 85       	ldd	r24, Y+15	; 0x0f
    2066:	98 89       	ldd	r25, Y+16	; 0x10
    2068:	fc 01       	movw	r30, r24
    206a:	24 81       	ldd	r18, Z+4	; 0x04
    206c:	35 81       	ldd	r19, Z+5	; 0x05
    206e:	89 81       	ldd	r24, Y+1	; 0x01
    2070:	9a 81       	ldd	r25, Y+2	; 0x02
    2072:	82 17       	cp	r24, r18
    2074:	93 07       	cpc	r25, r19
    2076:	68 f0       	brcs	.+26     	; 0x2092 <prvReadBytesFromBuffer+0x12a>
    2078:	8f 85       	ldd	r24, Y+15	; 0x0f
    207a:	98 89       	ldd	r25, Y+16	; 0x10
    207c:	fc 01       	movw	r30, r24
    207e:	84 81       	ldd	r24, Z+4	; 0x04
    2080:	95 81       	ldd	r25, Z+5	; 0x05
    2082:	29 81       	ldd	r18, Y+1	; 0x01
    2084:	3a 81       	ldd	r19, Y+2	; 0x02
    2086:	a9 01       	movw	r20, r18
    2088:	48 1b       	sub	r20, r24
    208a:	59 0b       	sbc	r21, r25
    208c:	ca 01       	movw	r24, r20
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	89 83       	std	Y+1, r24	; 0x01
    2092:	8f 85       	ldd	r24, Y+15	; 0x0f
    2094:	98 89       	ldd	r25, Y+16	; 0x10
    2096:	29 81       	ldd	r18, Y+1	; 0x01
    2098:	3a 81       	ldd	r19, Y+2	; 0x02
    209a:	fc 01       	movw	r30, r24
    209c:	31 83       	std	Z+1, r19	; 0x01
    209e:	20 83       	st	Z, r18
    20a0:	8f 81       	ldd	r24, Y+7	; 0x07
    20a2:	98 85       	ldd	r25, Y+8	; 0x08
    20a4:	66 96       	adiw	r28, 0x16	; 22
    20a6:	0f b6       	in	r0, 0x3f	; 63
    20a8:	f8 94       	cli
    20aa:	de bf       	out	0x3e, r29	; 62
    20ac:	0f be       	out	0x3f, r0	; 63
    20ae:	cd bf       	out	0x3d, r28	; 61
    20b0:	df 91       	pop	r29
    20b2:	cf 91       	pop	r28
    20b4:	08 95       	ret

000020b6 <prvBytesInBuffer>:
    20b6:	cf 93       	push	r28
    20b8:	df 93       	push	r29
    20ba:	00 d0       	rcall	.+0      	; 0x20bc <prvBytesInBuffer+0x6>
    20bc:	1f 92       	push	r1
    20be:	cd b7       	in	r28, 0x3d	; 61
    20c0:	de b7       	in	r29, 0x3e	; 62
    20c2:	9c 83       	std	Y+4, r25	; 0x04
    20c4:	8b 83       	std	Y+3, r24	; 0x03
    20c6:	8b 81       	ldd	r24, Y+3	; 0x03
    20c8:	9c 81       	ldd	r25, Y+4	; 0x04
    20ca:	fc 01       	movw	r30, r24
    20cc:	24 81       	ldd	r18, Z+4	; 0x04
    20ce:	35 81       	ldd	r19, Z+5	; 0x05
    20d0:	8b 81       	ldd	r24, Y+3	; 0x03
    20d2:	9c 81       	ldd	r25, Y+4	; 0x04
    20d4:	fc 01       	movw	r30, r24
    20d6:	82 81       	ldd	r24, Z+2	; 0x02
    20d8:	93 81       	ldd	r25, Z+3	; 0x03
    20da:	82 0f       	add	r24, r18
    20dc:	93 1f       	adc	r25, r19
    20de:	9a 83       	std	Y+2, r25	; 0x02
    20e0:	89 83       	std	Y+1, r24	; 0x01
    20e2:	8b 81       	ldd	r24, Y+3	; 0x03
    20e4:	9c 81       	ldd	r25, Y+4	; 0x04
    20e6:	fc 01       	movw	r30, r24
    20e8:	80 81       	ld	r24, Z
    20ea:	91 81       	ldd	r25, Z+1	; 0x01
    20ec:	29 81       	ldd	r18, Y+1	; 0x01
    20ee:	3a 81       	ldd	r19, Y+2	; 0x02
    20f0:	a9 01       	movw	r20, r18
    20f2:	48 1b       	sub	r20, r24
    20f4:	59 0b       	sbc	r21, r25
    20f6:	ca 01       	movw	r24, r20
    20f8:	9a 83       	std	Y+2, r25	; 0x02
    20fa:	89 83       	std	Y+1, r24	; 0x01
    20fc:	8b 81       	ldd	r24, Y+3	; 0x03
    20fe:	9c 81       	ldd	r25, Y+4	; 0x04
    2100:	fc 01       	movw	r30, r24
    2102:	24 81       	ldd	r18, Z+4	; 0x04
    2104:	35 81       	ldd	r19, Z+5	; 0x05
    2106:	89 81       	ldd	r24, Y+1	; 0x01
    2108:	9a 81       	ldd	r25, Y+2	; 0x02
    210a:	82 17       	cp	r24, r18
    210c:	93 07       	cpc	r25, r19
    210e:	68 f0       	brcs	.+26     	; 0x212a <prvBytesInBuffer+0x74>
    2110:	8b 81       	ldd	r24, Y+3	; 0x03
    2112:	9c 81       	ldd	r25, Y+4	; 0x04
    2114:	fc 01       	movw	r30, r24
    2116:	84 81       	ldd	r24, Z+4	; 0x04
    2118:	95 81       	ldd	r25, Z+5	; 0x05
    211a:	29 81       	ldd	r18, Y+1	; 0x01
    211c:	3a 81       	ldd	r19, Y+2	; 0x02
    211e:	a9 01       	movw	r20, r18
    2120:	48 1b       	sub	r20, r24
    2122:	59 0b       	sbc	r21, r25
    2124:	ca 01       	movw	r24, r20
    2126:	9a 83       	std	Y+2, r25	; 0x02
    2128:	89 83       	std	Y+1, r24	; 0x01
    212a:	89 81       	ldd	r24, Y+1	; 0x01
    212c:	9a 81       	ldd	r25, Y+2	; 0x02
    212e:	0f 90       	pop	r0
    2130:	0f 90       	pop	r0
    2132:	0f 90       	pop	r0
    2134:	0f 90       	pop	r0
    2136:	df 91       	pop	r29
    2138:	cf 91       	pop	r28
    213a:	08 95       	ret

0000213c <prvInitialiseNewStreamBuffer>:
    213c:	0f 93       	push	r16
    213e:	cf 93       	push	r28
    2140:	df 93       	push	r29
    2142:	cd b7       	in	r28, 0x3d	; 61
    2144:	de b7       	in	r29, 0x3e	; 62
    2146:	29 97       	sbiw	r28, 0x09	; 9
    2148:	0f b6       	in	r0, 0x3f	; 63
    214a:	f8 94       	cli
    214c:	de bf       	out	0x3e, r29	; 62
    214e:	0f be       	out	0x3f, r0	; 63
    2150:	cd bf       	out	0x3d, r28	; 61
    2152:	9a 83       	std	Y+2, r25	; 0x02
    2154:	89 83       	std	Y+1, r24	; 0x01
    2156:	7c 83       	std	Y+4, r23	; 0x04
    2158:	6b 83       	std	Y+3, r22	; 0x03
    215a:	5e 83       	std	Y+6, r21	; 0x06
    215c:	4d 83       	std	Y+5, r20	; 0x05
    215e:	38 87       	std	Y+8, r19	; 0x08
    2160:	2f 83       	std	Y+7, r18	; 0x07
    2162:	09 87       	std	Y+9, r16	; 0x09
    2164:	89 81       	ldd	r24, Y+1	; 0x01
    2166:	9a 81       	ldd	r25, Y+2	; 0x02
    2168:	40 e1       	ldi	r20, 0x10	; 16
    216a:	50 e0       	ldi	r21, 0x00	; 0
    216c:	60 e0       	ldi	r22, 0x00	; 0
    216e:	70 e0       	ldi	r23, 0x00	; 0
    2170:	0e 94 f5 36 	call	0x6dea	; 0x6dea <memset>
    2174:	89 81       	ldd	r24, Y+1	; 0x01
    2176:	9a 81       	ldd	r25, Y+2	; 0x02
    2178:	2b 81       	ldd	r18, Y+3	; 0x03
    217a:	3c 81       	ldd	r19, Y+4	; 0x04
    217c:	fc 01       	movw	r30, r24
    217e:	35 87       	std	Z+13, r19	; 0x0d
    2180:	24 87       	std	Z+12, r18	; 0x0c
    2182:	89 81       	ldd	r24, Y+1	; 0x01
    2184:	9a 81       	ldd	r25, Y+2	; 0x02
    2186:	2d 81       	ldd	r18, Y+5	; 0x05
    2188:	3e 81       	ldd	r19, Y+6	; 0x06
    218a:	fc 01       	movw	r30, r24
    218c:	35 83       	std	Z+5, r19	; 0x05
    218e:	24 83       	std	Z+4, r18	; 0x04
    2190:	89 81       	ldd	r24, Y+1	; 0x01
    2192:	9a 81       	ldd	r25, Y+2	; 0x02
    2194:	2f 81       	ldd	r18, Y+7	; 0x07
    2196:	38 85       	ldd	r19, Y+8	; 0x08
    2198:	fc 01       	movw	r30, r24
    219a:	37 83       	std	Z+7, r19	; 0x07
    219c:	26 83       	std	Z+6, r18	; 0x06
    219e:	89 81       	ldd	r24, Y+1	; 0x01
    21a0:	9a 81       	ldd	r25, Y+2	; 0x02
    21a2:	29 85       	ldd	r18, Y+9	; 0x09
    21a4:	fc 01       	movw	r30, r24
    21a6:	26 87       	std	Z+14, r18	; 0x0e
    21a8:	00 00       	nop
    21aa:	29 96       	adiw	r28, 0x09	; 9
    21ac:	0f b6       	in	r0, 0x3f	; 63
    21ae:	f8 94       	cli
    21b0:	de bf       	out	0x3e, r29	; 62
    21b2:	0f be       	out	0x3f, r0	; 63
    21b4:	cd bf       	out	0x3d, r28	; 61
    21b6:	df 91       	pop	r29
    21b8:	cf 91       	pop	r28
    21ba:	0f 91       	pop	r16
    21bc:	08 95       	ret

000021be <xTaskCreate>:
    21be:	af 92       	push	r10
    21c0:	bf 92       	push	r11
    21c2:	cf 92       	push	r12
    21c4:	df 92       	push	r13
    21c6:	ef 92       	push	r14
    21c8:	ff 92       	push	r15
    21ca:	0f 93       	push	r16
    21cc:	cf 93       	push	r28
    21ce:	df 93       	push	r29
    21d0:	cd b7       	in	r28, 0x3d	; 61
    21d2:	de b7       	in	r29, 0x3e	; 62
    21d4:	60 97       	sbiw	r28, 0x10	; 16
    21d6:	0f b6       	in	r0, 0x3f	; 63
    21d8:	f8 94       	cli
    21da:	de bf       	out	0x3e, r29	; 62
    21dc:	0f be       	out	0x3f, r0	; 63
    21de:	cd bf       	out	0x3d, r28	; 61
    21e0:	9f 83       	std	Y+7, r25	; 0x07
    21e2:	8e 83       	std	Y+6, r24	; 0x06
    21e4:	79 87       	std	Y+9, r23	; 0x09
    21e6:	68 87       	std	Y+8, r22	; 0x08
    21e8:	5b 87       	std	Y+11, r21	; 0x0b
    21ea:	4a 87       	std	Y+10, r20	; 0x0a
    21ec:	3d 87       	std	Y+13, r19	; 0x0d
    21ee:	2c 87       	std	Y+12, r18	; 0x0c
    21f0:	0e 87       	std	Y+14, r16	; 0x0e
    21f2:	f8 8a       	std	Y+16, r15	; 0x10
    21f4:	ef 86       	std	Y+15, r14	; 0x0f
    21f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    21f8:	9b 85       	ldd	r25, Y+11	; 0x0b
    21fa:	0e 94 8d 01 	call	0x31a	; 0x31a <pvPortMalloc>
    21fe:	9d 83       	std	Y+5, r25	; 0x05
    2200:	8c 83       	std	Y+4, r24	; 0x04
    2202:	8c 81       	ldd	r24, Y+4	; 0x04
    2204:	9d 81       	ldd	r25, Y+5	; 0x05
    2206:	89 2b       	or	r24, r25
    2208:	b9 f0       	breq	.+46     	; 0x2238 <__stack+0x39>
    220a:	8c e2       	ldi	r24, 0x2C	; 44
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	0e 94 8d 01 	call	0x31a	; 0x31a <pvPortMalloc>
    2212:	9a 83       	std	Y+2, r25	; 0x02
    2214:	89 83       	std	Y+1, r24	; 0x01
    2216:	89 81       	ldd	r24, Y+1	; 0x01
    2218:	9a 81       	ldd	r25, Y+2	; 0x02
    221a:	89 2b       	or	r24, r25
    221c:	41 f0       	breq	.+16     	; 0x222e <__stack+0x2f>
    221e:	89 81       	ldd	r24, Y+1	; 0x01
    2220:	9a 81       	ldd	r25, Y+2	; 0x02
    2222:	2c 81       	ldd	r18, Y+4	; 0x04
    2224:	3d 81       	ldd	r19, Y+5	; 0x05
    2226:	fc 01       	movw	r30, r24
    2228:	30 8f       	std	Z+24, r19	; 0x18
    222a:	27 8b       	std	Z+23, r18	; 0x17
    222c:	07 c0       	rjmp	.+14     	; 0x223c <__stack+0x3d>
    222e:	8c 81       	ldd	r24, Y+4	; 0x04
    2230:	9d 81       	ldd	r25, Y+5	; 0x05
    2232:	0e 94 ae 01 	call	0x35c	; 0x35c <vPortFree>
    2236:	02 c0       	rjmp	.+4      	; 0x223c <__stack+0x3d>
    2238:	1a 82       	std	Y+2, r1	; 0x02
    223a:	19 82       	std	Y+1, r1	; 0x01
    223c:	89 81       	ldd	r24, Y+1	; 0x01
    223e:	9a 81       	ldd	r25, Y+2	; 0x02
    2240:	89 2b       	or	r24, r25
    2242:	c1 f0       	breq	.+48     	; 0x2274 <__stack+0x75>
    2244:	a9 81       	ldd	r26, Y+1	; 0x01
    2246:	ba 81       	ldd	r27, Y+2	; 0x02
    2248:	ef 85       	ldd	r30, Y+15	; 0x0f
    224a:	f8 89       	ldd	r31, Y+16	; 0x10
    224c:	2c 85       	ldd	r18, Y+12	; 0x0c
    224e:	3d 85       	ldd	r19, Y+13	; 0x0d
    2250:	4a 85       	ldd	r20, Y+10	; 0x0a
    2252:	5b 85       	ldd	r21, Y+11	; 0x0b
    2254:	68 85       	ldd	r22, Y+8	; 0x08
    2256:	79 85       	ldd	r23, Y+9	; 0x09
    2258:	8e 81       	ldd	r24, Y+6	; 0x06
    225a:	9f 81       	ldd	r25, Y+7	; 0x07
    225c:	a1 2c       	mov	r10, r1
    225e:	b1 2c       	mov	r11, r1
    2260:	6d 01       	movw	r12, r26
    2262:	7f 01       	movw	r14, r30
    2264:	0e 85       	ldd	r16, Y+14	; 0x0e
    2266:	19 d0       	rcall	.+50     	; 0x229a <prvInitialiseNewTask>
    2268:	89 81       	ldd	r24, Y+1	; 0x01
    226a:	9a 81       	ldd	r25, Y+2	; 0x02
    226c:	f5 d0       	rcall	.+490    	; 0x2458 <prvAddNewTaskToReadyList>
    226e:	81 e0       	ldi	r24, 0x01	; 1
    2270:	8b 83       	std	Y+3, r24	; 0x03
    2272:	02 c0       	rjmp	.+4      	; 0x2278 <__stack+0x79>
    2274:	8f ef       	ldi	r24, 0xFF	; 255
    2276:	8b 83       	std	Y+3, r24	; 0x03
    2278:	8b 81       	ldd	r24, Y+3	; 0x03
    227a:	60 96       	adiw	r28, 0x10	; 16
    227c:	0f b6       	in	r0, 0x3f	; 63
    227e:	f8 94       	cli
    2280:	de bf       	out	0x3e, r29	; 62
    2282:	0f be       	out	0x3f, r0	; 63
    2284:	cd bf       	out	0x3d, r28	; 61
    2286:	df 91       	pop	r29
    2288:	cf 91       	pop	r28
    228a:	0f 91       	pop	r16
    228c:	ff 90       	pop	r15
    228e:	ef 90       	pop	r14
    2290:	df 90       	pop	r13
    2292:	cf 90       	pop	r12
    2294:	bf 90       	pop	r11
    2296:	af 90       	pop	r10
    2298:	08 95       	ret

0000229a <prvInitialiseNewTask>:
    229a:	af 92       	push	r10
    229c:	bf 92       	push	r11
    229e:	cf 92       	push	r12
    22a0:	df 92       	push	r13
    22a2:	ef 92       	push	r14
    22a4:	ff 92       	push	r15
    22a6:	0f 93       	push	r16
    22a8:	cf 93       	push	r28
    22aa:	df 93       	push	r29
    22ac:	cd b7       	in	r28, 0x3d	; 61
    22ae:	de b7       	in	r29, 0x3e	; 62
    22b0:	62 97       	sbiw	r28, 0x12	; 18
    22b2:	0f b6       	in	r0, 0x3f	; 63
    22b4:	f8 94       	cli
    22b6:	de bf       	out	0x3e, r29	; 62
    22b8:	0f be       	out	0x3f, r0	; 63
    22ba:	cd bf       	out	0x3d, r28	; 61
    22bc:	9d 83       	std	Y+5, r25	; 0x05
    22be:	8c 83       	std	Y+4, r24	; 0x04
    22c0:	7f 83       	std	Y+7, r23	; 0x07
    22c2:	6e 83       	std	Y+6, r22	; 0x06
    22c4:	59 87       	std	Y+9, r21	; 0x09
    22c6:	48 87       	std	Y+8, r20	; 0x08
    22c8:	3b 87       	std	Y+11, r19	; 0x0b
    22ca:	2a 87       	std	Y+10, r18	; 0x0a
    22cc:	0c 87       	std	Y+12, r16	; 0x0c
    22ce:	fe 86       	std	Y+14, r15	; 0x0e
    22d0:	ed 86       	std	Y+13, r14	; 0x0d
    22d2:	d8 8a       	std	Y+16, r13	; 0x10
    22d4:	cf 86       	std	Y+15, r12	; 0x0f
    22d6:	ba 8a       	std	Y+18, r11	; 0x12
    22d8:	a9 8a       	std	Y+17, r10	; 0x11
    22da:	8f 85       	ldd	r24, Y+15	; 0x0f
    22dc:	98 89       	ldd	r25, Y+16	; 0x10
    22de:	fc 01       	movw	r30, r24
    22e0:	87 89       	ldd	r24, Z+23	; 0x17
    22e2:	90 8d       	ldd	r25, Z+24	; 0x18
    22e4:	28 85       	ldd	r18, Y+8	; 0x08
    22e6:	39 85       	ldd	r19, Y+9	; 0x09
    22e8:	a9 01       	movw	r20, r18
    22ea:	65 ea       	ldi	r22, 0xA5	; 165
    22ec:	70 e0       	ldi	r23, 0x00	; 0
    22ee:	0e 94 f5 36 	call	0x6dea	; 0x6dea <memset>
    22f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    22f4:	98 89       	ldd	r25, Y+16	; 0x10
    22f6:	fc 01       	movw	r30, r24
    22f8:	27 89       	ldd	r18, Z+23	; 0x17
    22fa:	30 8d       	ldd	r19, Z+24	; 0x18
    22fc:	88 85       	ldd	r24, Y+8	; 0x08
    22fe:	99 85       	ldd	r25, Y+9	; 0x09
    2300:	01 97       	sbiw	r24, 0x01	; 1
    2302:	82 0f       	add	r24, r18
    2304:	93 1f       	adc	r25, r19
    2306:	9b 83       	std	Y+3, r25	; 0x03
    2308:	8a 83       	std	Y+2, r24	; 0x02
    230a:	8e 81       	ldd	r24, Y+6	; 0x06
    230c:	9f 81       	ldd	r25, Y+7	; 0x07
    230e:	89 2b       	or	r24, r25
    2310:	69 f1       	breq	.+90     	; 0x236c <prvInitialiseNewTask+0xd2>
    2312:	19 82       	std	Y+1, r1	; 0x01
    2314:	21 c0       	rjmp	.+66     	; 0x2358 <prvInitialiseNewTask+0xbe>
    2316:	89 81       	ldd	r24, Y+1	; 0x01
    2318:	88 2f       	mov	r24, r24
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	29 81       	ldd	r18, Y+1	; 0x01
    231e:	22 2f       	mov	r18, r18
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	4e 81       	ldd	r20, Y+6	; 0x06
    2324:	5f 81       	ldd	r21, Y+7	; 0x07
    2326:	24 0f       	add	r18, r20
    2328:	35 1f       	adc	r19, r21
    232a:	f9 01       	movw	r30, r18
    232c:	40 81       	ld	r20, Z
    232e:	2f 85       	ldd	r18, Y+15	; 0x0f
    2330:	38 89       	ldd	r19, Y+16	; 0x10
    2332:	82 0f       	add	r24, r18
    2334:	93 1f       	adc	r25, r19
    2336:	49 96       	adiw	r24, 0x19	; 25
    2338:	fc 01       	movw	r30, r24
    233a:	40 83       	st	Z, r20
    233c:	89 81       	ldd	r24, Y+1	; 0x01
    233e:	88 2f       	mov	r24, r24
    2340:	90 e0       	ldi	r25, 0x00	; 0
    2342:	2e 81       	ldd	r18, Y+6	; 0x06
    2344:	3f 81       	ldd	r19, Y+7	; 0x07
    2346:	82 0f       	add	r24, r18
    2348:	93 1f       	adc	r25, r19
    234a:	fc 01       	movw	r30, r24
    234c:	80 81       	ld	r24, Z
    234e:	88 23       	and	r24, r24
    2350:	39 f0       	breq	.+14     	; 0x2360 <prvInitialiseNewTask+0xc6>
    2352:	89 81       	ldd	r24, Y+1	; 0x01
    2354:	8f 5f       	subi	r24, 0xFF	; 255
    2356:	89 83       	std	Y+1, r24	; 0x01
    2358:	89 81       	ldd	r24, Y+1	; 0x01
    235a:	88 30       	cpi	r24, 0x08	; 8
    235c:	e0 f2       	brcs	.-72     	; 0x2316 <prvInitialiseNewTask+0x7c>
    235e:	01 c0       	rjmp	.+2      	; 0x2362 <prvInitialiseNewTask+0xc8>
    2360:	00 00       	nop
    2362:	8f 85       	ldd	r24, Y+15	; 0x0f
    2364:	98 89       	ldd	r25, Y+16	; 0x10
    2366:	fc 01       	movw	r30, r24
    2368:	10 a2       	std	Z+32, r1	; 0x20
    236a:	04 c0       	rjmp	.+8      	; 0x2374 <prvInitialiseNewTask+0xda>
    236c:	8f 85       	ldd	r24, Y+15	; 0x0f
    236e:	98 89       	ldd	r25, Y+16	; 0x10
    2370:	fc 01       	movw	r30, r24
    2372:	11 8e       	std	Z+25, r1	; 0x19
    2374:	8c 85       	ldd	r24, Y+12	; 0x0c
    2376:	84 30       	cpi	r24, 0x04	; 4
    2378:	10 f0       	brcs	.+4      	; 0x237e <prvInitialiseNewTask+0xe4>
    237a:	83 e0       	ldi	r24, 0x03	; 3
    237c:	8c 87       	std	Y+12, r24	; 0x0c
    237e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2380:	98 89       	ldd	r25, Y+16	; 0x10
    2382:	2c 85       	ldd	r18, Y+12	; 0x0c
    2384:	fc 01       	movw	r30, r24
    2386:	26 8b       	std	Z+22, r18	; 0x16
    2388:	8f 85       	ldd	r24, Y+15	; 0x0f
    238a:	98 89       	ldd	r25, Y+16	; 0x10
    238c:	2c 85       	ldd	r18, Y+12	; 0x0c
    238e:	fc 01       	movw	r30, r24
    2390:	23 a3       	std	Z+35, r18	; 0x23
    2392:	8f 85       	ldd	r24, Y+15	; 0x0f
    2394:	98 89       	ldd	r25, Y+16	; 0x10
    2396:	fc 01       	movw	r30, r24
    2398:	14 a2       	std	Z+36, r1	; 0x24
    239a:	8f 85       	ldd	r24, Y+15	; 0x0f
    239c:	98 89       	ldd	r25, Y+16	; 0x10
    239e:	02 96       	adiw	r24, 0x02	; 2
    23a0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <vListInitialiseItem>
    23a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    23a6:	98 89       	ldd	r25, Y+16	; 0x10
    23a8:	0c 96       	adiw	r24, 0x0c	; 12
    23aa:	0e 94 ff 01 	call	0x3fe	; 0x3fe <vListInitialiseItem>
    23ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    23b0:	98 89       	ldd	r25, Y+16	; 0x10
    23b2:	2f 85       	ldd	r18, Y+15	; 0x0f
    23b4:	38 89       	ldd	r19, Y+16	; 0x10
    23b6:	fc 01       	movw	r30, r24
    23b8:	31 87       	std	Z+9, r19	; 0x09
    23ba:	20 87       	std	Z+8, r18	; 0x08
    23bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    23be:	88 2f       	mov	r24, r24
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	24 e0       	ldi	r18, 0x04	; 4
    23c4:	30 e0       	ldi	r19, 0x00	; 0
    23c6:	28 1b       	sub	r18, r24
    23c8:	39 0b       	sbc	r19, r25
    23ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    23cc:	98 89       	ldd	r25, Y+16	; 0x10
    23ce:	fc 01       	movw	r30, r24
    23d0:	35 87       	std	Z+13, r19	; 0x0d
    23d2:	24 87       	std	Z+12, r18	; 0x0c
    23d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    23d6:	98 89       	ldd	r25, Y+16	; 0x10
    23d8:	2f 85       	ldd	r18, Y+15	; 0x0f
    23da:	38 89       	ldd	r19, Y+16	; 0x10
    23dc:	fc 01       	movw	r30, r24
    23de:	33 8b       	std	Z+19, r19	; 0x13
    23e0:	22 8b       	std	Z+18, r18	; 0x12
    23e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    23e4:	98 89       	ldd	r25, Y+16	; 0x10
    23e6:	fc 01       	movw	r30, r24
    23e8:	16 a2       	std	Z+38, r1	; 0x26
    23ea:	15 a2       	std	Z+37, r1	; 0x25
    23ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    23ee:	98 89       	ldd	r25, Y+16	; 0x10
    23f0:	fc 01       	movw	r30, r24
    23f2:	17 a2       	std	Z+39, r1	; 0x27
    23f4:	10 a6       	std	Z+40, r1	; 0x28
    23f6:	11 a6       	std	Z+41, r1	; 0x29
    23f8:	12 a6       	std	Z+42, r1	; 0x2a
    23fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    23fc:	98 89       	ldd	r25, Y+16	; 0x10
    23fe:	fc 01       	movw	r30, r24
    2400:	13 a6       	std	Z+43, r1	; 0x2b
    2402:	4a 85       	ldd	r20, Y+10	; 0x0a
    2404:	5b 85       	ldd	r21, Y+11	; 0x0b
    2406:	2c 81       	ldd	r18, Y+4	; 0x04
    2408:	3d 81       	ldd	r19, Y+5	; 0x05
    240a:	8a 81       	ldd	r24, Y+2	; 0x02
    240c:	9b 81       	ldd	r25, Y+3	; 0x03
    240e:	b9 01       	movw	r22, r18
    2410:	0e 94 2f 03 	call	0x65e	; 0x65e <pxPortInitialiseStack>
    2414:	9c 01       	movw	r18, r24
    2416:	8f 85       	ldd	r24, Y+15	; 0x0f
    2418:	98 89       	ldd	r25, Y+16	; 0x10
    241a:	fc 01       	movw	r30, r24
    241c:	31 83       	std	Z+1, r19	; 0x01
    241e:	20 83       	st	Z, r18
    2420:	8d 85       	ldd	r24, Y+13	; 0x0d
    2422:	9e 85       	ldd	r25, Y+14	; 0x0e
    2424:	89 2b       	or	r24, r25
    2426:	39 f0       	breq	.+14     	; 0x2436 <prvInitialiseNewTask+0x19c>
    2428:	8d 85       	ldd	r24, Y+13	; 0x0d
    242a:	9e 85       	ldd	r25, Y+14	; 0x0e
    242c:	2f 85       	ldd	r18, Y+15	; 0x0f
    242e:	38 89       	ldd	r19, Y+16	; 0x10
    2430:	fc 01       	movw	r30, r24
    2432:	31 83       	std	Z+1, r19	; 0x01
    2434:	20 83       	st	Z, r18
    2436:	00 00       	nop
    2438:	62 96       	adiw	r28, 0x12	; 18
    243a:	0f b6       	in	r0, 0x3f	; 63
    243c:	f8 94       	cli
    243e:	de bf       	out	0x3e, r29	; 62
    2440:	0f be       	out	0x3f, r0	; 63
    2442:	cd bf       	out	0x3d, r28	; 61
    2444:	df 91       	pop	r29
    2446:	cf 91       	pop	r28
    2448:	0f 91       	pop	r16
    244a:	ff 90       	pop	r15
    244c:	ef 90       	pop	r14
    244e:	df 90       	pop	r13
    2450:	cf 90       	pop	r12
    2452:	bf 90       	pop	r11
    2454:	af 90       	pop	r10
    2456:	08 95       	ret

00002458 <prvAddNewTaskToReadyList>:
    2458:	cf 93       	push	r28
    245a:	df 93       	push	r29
    245c:	1f 92       	push	r1
    245e:	1f 92       	push	r1
    2460:	cd b7       	in	r28, 0x3d	; 61
    2462:	de b7       	in	r29, 0x3e	; 62
    2464:	9a 83       	std	Y+2, r25	; 0x02
    2466:	89 83       	std	Y+1, r24	; 0x01
    2468:	0f b6       	in	r0, 0x3f	; 63
    246a:	f8 94       	cli
    246c:	0f 92       	push	r0
    246e:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <uxCurrentNumberOfTasks>
    2472:	8f 5f       	subi	r24, 0xFF	; 255
    2474:	80 93 8e 08 	sts	0x088E, r24	; 0x80088e <uxCurrentNumberOfTasks>
    2478:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    247c:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2480:	89 2b       	or	r24, r25
    2482:	61 f4       	brne	.+24     	; 0x249c <prvAddNewTaskToReadyList+0x44>
    2484:	89 81       	ldd	r24, Y+1	; 0x01
    2486:	9a 81       	ldd	r25, Y+2	; 0x02
    2488:	90 93 37 08 	sts	0x0837, r25	; 0x800837 <__data_end+0x1>
    248c:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <__data_end>
    2490:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <uxCurrentNumberOfTasks>
    2494:	81 30       	cpi	r24, 0x01	; 1
    2496:	c1 f4       	brne	.+48     	; 0x24c8 <prvAddNewTaskToReadyList+0x70>
    2498:	65 d4       	rcall	.+2250   	; 0x2d64 <prvInitialiseTaskLists>
    249a:	16 c0       	rjmp	.+44     	; 0x24c8 <prvAddNewTaskToReadyList+0x70>
    249c:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <xSchedulerRunning>
    24a0:	88 23       	and	r24, r24
    24a2:	91 f4       	brne	.+36     	; 0x24c8 <prvAddNewTaskToReadyList+0x70>
    24a4:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    24a8:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    24ac:	fc 01       	movw	r30, r24
    24ae:	26 89       	ldd	r18, Z+22	; 0x16
    24b0:	89 81       	ldd	r24, Y+1	; 0x01
    24b2:	9a 81       	ldd	r25, Y+2	; 0x02
    24b4:	fc 01       	movw	r30, r24
    24b6:	86 89       	ldd	r24, Z+22	; 0x16
    24b8:	82 17       	cp	r24, r18
    24ba:	30 f0       	brcs	.+12     	; 0x24c8 <prvAddNewTaskToReadyList+0x70>
    24bc:	89 81       	ldd	r24, Y+1	; 0x01
    24be:	9a 81       	ldd	r25, Y+2	; 0x02
    24c0:	90 93 37 08 	sts	0x0837, r25	; 0x800837 <__data_end+0x1>
    24c4:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <__data_end>
    24c8:	80 91 96 08 	lds	r24, 0x0896	; 0x800896 <uxTaskNumber>
    24cc:	8f 5f       	subi	r24, 0xFF	; 255
    24ce:	80 93 96 08 	sts	0x0896, r24	; 0x800896 <uxTaskNumber>
    24d2:	20 91 96 08 	lds	r18, 0x0896	; 0x800896 <uxTaskNumber>
    24d6:	89 81       	ldd	r24, Y+1	; 0x01
    24d8:	9a 81       	ldd	r25, Y+2	; 0x02
    24da:	fc 01       	movw	r30, r24
    24dc:	21 a3       	std	Z+33, r18	; 0x21
    24de:	89 81       	ldd	r24, Y+1	; 0x01
    24e0:	9a 81       	ldd	r25, Y+2	; 0x02
    24e2:	fc 01       	movw	r30, r24
    24e4:	96 89       	ldd	r25, Z+22	; 0x16
    24e6:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    24ea:	89 17       	cp	r24, r25
    24ec:	30 f4       	brcc	.+12     	; 0x24fa <prvAddNewTaskToReadyList+0xa2>
    24ee:	89 81       	ldd	r24, Y+1	; 0x01
    24f0:	9a 81       	ldd	r25, Y+2	; 0x02
    24f2:	fc 01       	movw	r30, r24
    24f4:	86 89       	ldd	r24, Z+22	; 0x16
    24f6:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    24fa:	89 81       	ldd	r24, Y+1	; 0x01
    24fc:	9a 81       	ldd	r25, Y+2	; 0x02
    24fe:	ac 01       	movw	r20, r24
    2500:	4e 5f       	subi	r20, 0xFE	; 254
    2502:	5f 4f       	sbci	r21, 0xFF	; 255
    2504:	89 81       	ldd	r24, Y+1	; 0x01
    2506:	9a 81       	ldd	r25, Y+2	; 0x02
    2508:	fc 01       	movw	r30, r24
    250a:	86 89       	ldd	r24, Z+22	; 0x16
    250c:	28 2f       	mov	r18, r24
    250e:	30 e0       	ldi	r19, 0x00	; 0
    2510:	c9 01       	movw	r24, r18
    2512:	88 0f       	add	r24, r24
    2514:	99 1f       	adc	r25, r25
    2516:	88 0f       	add	r24, r24
    2518:	99 1f       	adc	r25, r25
    251a:	88 0f       	add	r24, r24
    251c:	99 1f       	adc	r25, r25
    251e:	82 0f       	add	r24, r18
    2520:	93 1f       	adc	r25, r19
    2522:	88 5c       	subi	r24, 0xC8	; 200
    2524:	97 4f       	sbci	r25, 0xF7	; 247
    2526:	ba 01       	movw	r22, r20
    2528:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    252c:	0f 90       	pop	r0
    252e:	0f be       	out	0x3f, r0	; 63
    2530:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <xSchedulerRunning>
    2534:	88 23       	and	r24, r24
    2536:	71 f0       	breq	.+28     	; 0x2554 <prvAddNewTaskToReadyList+0xfc>
    2538:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    253c:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2540:	fc 01       	movw	r30, r24
    2542:	26 89       	ldd	r18, Z+22	; 0x16
    2544:	89 81       	ldd	r24, Y+1	; 0x01
    2546:	9a 81       	ldd	r25, Y+2	; 0x02
    2548:	fc 01       	movw	r30, r24
    254a:	86 89       	ldd	r24, Z+22	; 0x16
    254c:	28 17       	cp	r18, r24
    254e:	10 f4       	brcc	.+4      	; 0x2554 <prvAddNewTaskToReadyList+0xfc>
    2550:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    2554:	00 00       	nop
    2556:	0f 90       	pop	r0
    2558:	0f 90       	pop	r0
    255a:	df 91       	pop	r29
    255c:	cf 91       	pop	r28
    255e:	08 95       	ret

00002560 <vTaskDelay>:
    2560:	cf 93       	push	r28
    2562:	df 93       	push	r29
    2564:	00 d0       	rcall	.+0      	; 0x2566 <vTaskDelay+0x6>
    2566:	cd b7       	in	r28, 0x3d	; 61
    2568:	de b7       	in	r29, 0x3e	; 62
    256a:	9b 83       	std	Y+3, r25	; 0x03
    256c:	8a 83       	std	Y+2, r24	; 0x02
    256e:	19 82       	std	Y+1, r1	; 0x01
    2570:	8a 81       	ldd	r24, Y+2	; 0x02
    2572:	9b 81       	ldd	r25, Y+3	; 0x03
    2574:	89 2b       	or	r24, r25
    2576:	41 f0       	breq	.+16     	; 0x2588 <vTaskDelay+0x28>
    2578:	56 d0       	rcall	.+172    	; 0x2626 <vTaskSuspendAll>
    257a:	8a 81       	ldd	r24, Y+2	; 0x02
    257c:	9b 81       	ldd	r25, Y+3	; 0x03
    257e:	60 e0       	ldi	r22, 0x00	; 0
    2580:	0e 94 30 1c 	call	0x3860	; 0x3860 <prvAddCurrentTaskToDelayedList>
    2584:	5d d0       	rcall	.+186    	; 0x2640 <xTaskResumeAll>
    2586:	89 83       	std	Y+1, r24	; 0x01
    2588:	89 81       	ldd	r24, Y+1	; 0x01
    258a:	88 23       	and	r24, r24
    258c:	11 f4       	brne	.+4      	; 0x2592 <vTaskDelay+0x32>
    258e:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    2592:	00 00       	nop
    2594:	0f 90       	pop	r0
    2596:	0f 90       	pop	r0
    2598:	0f 90       	pop	r0
    259a:	df 91       	pop	r29
    259c:	cf 91       	pop	r28
    259e:	08 95       	ret

000025a0 <vTaskStartScheduler>:
    25a0:	ef 92       	push	r14
    25a2:	ff 92       	push	r15
    25a4:	0f 93       	push	r16
    25a6:	cf 93       	push	r28
    25a8:	df 93       	push	r29
    25aa:	1f 92       	push	r1
    25ac:	cd b7       	in	r28, 0x3d	; 61
    25ae:	de b7       	in	r29, 0x3e	; 62
    25b0:	0f 2e       	mov	r0, r31
    25b2:	f9 e9       	ldi	r31, 0x99	; 153
    25b4:	ef 2e       	mov	r14, r31
    25b6:	f8 e0       	ldi	r31, 0x08	; 8
    25b8:	ff 2e       	mov	r15, r31
    25ba:	f0 2d       	mov	r31, r0
    25bc:	00 e0       	ldi	r16, 0x00	; 0
    25be:	20 e0       	ldi	r18, 0x00	; 0
    25c0:	30 e0       	ldi	r19, 0x00	; 0
    25c2:	40 ec       	ldi	r20, 0xC0	; 192
    25c4:	50 e0       	ldi	r21, 0x00	; 0
    25c6:	61 e2       	ldi	r22, 0x21	; 33
    25c8:	72 e0       	ldi	r23, 0x02	; 2
    25ca:	8d ec       	ldi	r24, 0xCD	; 205
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	f7 dd       	rcall	.-1042   	; 0x21be <xTaskCreate>
    25d0:	89 83       	std	Y+1, r24	; 0x01
    25d2:	89 81       	ldd	r24, Y+1	; 0x01
    25d4:	81 30       	cpi	r24, 0x01	; 1
    25d6:	19 f4       	brne	.+6      	; 0x25de <vTaskStartScheduler+0x3e>
    25d8:	0e 94 aa 1c 	call	0x3954	; 0x3954 <xTimerCreateTimerTask>
    25dc:	89 83       	std	Y+1, r24	; 0x01
    25de:	89 81       	ldd	r24, Y+1	; 0x01
    25e0:	81 30       	cpi	r24, 0x01	; 1
    25e2:	c9 f4       	brne	.+50     	; 0x2616 <vTaskStartScheduler+0x76>
    25e4:	f8 94       	cli
    25e6:	8f ef       	ldi	r24, 0xFF	; 255
    25e8:	9f ef       	ldi	r25, 0xFF	; 255
    25ea:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    25ee:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	80 93 92 08 	sts	0x0892, r24	; 0x800892 <xSchedulerRunning>
    25f8:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <xTickCount+0x1>
    25fc:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <xTickCount>
    2600:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2604:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2608:	fc 01       	movw	r30, r24
    260a:	85 a1       	ldd	r24, Z+37	; 0x25
    260c:	96 a1       	ldd	r25, Z+38	; 0x26
    260e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <task_switch_in>
    2612:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <xPortStartScheduler>
    2616:	00 00       	nop
    2618:	0f 90       	pop	r0
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	0f 91       	pop	r16
    2620:	ff 90       	pop	r15
    2622:	ef 90       	pop	r14
    2624:	08 95       	ret

00002626 <vTaskSuspendAll>:
    2626:	cf 93       	push	r28
    2628:	df 93       	push	r29
    262a:	cd b7       	in	r28, 0x3d	; 61
    262c:	de b7       	in	r29, 0x3e	; 62
    262e:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    2632:	8f 5f       	subi	r24, 0xFF	; 255
    2634:	80 93 9b 08 	sts	0x089B, r24	; 0x80089b <uxSchedulerSuspended>
    2638:	00 00       	nop
    263a:	df 91       	pop	r29
    263c:	cf 91       	pop	r28
    263e:	08 95       	ret

00002640 <xTaskResumeAll>:
    2640:	cf 93       	push	r28
    2642:	df 93       	push	r29
    2644:	00 d0       	rcall	.+0      	; 0x2646 <xTaskResumeAll+0x6>
    2646:	1f 92       	push	r1
    2648:	cd b7       	in	r28, 0x3d	; 61
    264a:	de b7       	in	r29, 0x3e	; 62
    264c:	1a 82       	std	Y+2, r1	; 0x02
    264e:	19 82       	std	Y+1, r1	; 0x01
    2650:	1b 82       	std	Y+3, r1	; 0x03
    2652:	0f b6       	in	r0, 0x3f	; 63
    2654:	f8 94       	cli
    2656:	0f 92       	push	r0
    2658:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    265c:	81 50       	subi	r24, 0x01	; 1
    265e:	80 93 9b 08 	sts	0x089B, r24	; 0x80089b <uxSchedulerSuspended>
    2662:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    2666:	88 23       	and	r24, r24
    2668:	09 f0       	breq	.+2      	; 0x266c <xTaskResumeAll+0x2c>
    266a:	75 c0       	rjmp	.+234    	; 0x2756 <xTaskResumeAll+0x116>
    266c:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <uxCurrentNumberOfTasks>
    2670:	88 23       	and	r24, r24
    2672:	09 f4       	brne	.+2      	; 0x2676 <xTaskResumeAll+0x36>
    2674:	70 c0       	rjmp	.+224    	; 0x2756 <xTaskResumeAll+0x116>
    2676:	49 c0       	rjmp	.+146    	; 0x270a <xTaskResumeAll+0xca>
    2678:	80 91 77 08 	lds	r24, 0x0877	; 0x800877 <xPendingReadyList+0x5>
    267c:	90 91 78 08 	lds	r25, 0x0878	; 0x800878 <xPendingReadyList+0x6>
    2680:	fc 01       	movw	r30, r24
    2682:	86 81       	ldd	r24, Z+6	; 0x06
    2684:	97 81       	ldd	r25, Z+7	; 0x07
    2686:	9a 83       	std	Y+2, r25	; 0x02
    2688:	89 83       	std	Y+1, r24	; 0x01
    268a:	89 81       	ldd	r24, Y+1	; 0x01
    268c:	9a 81       	ldd	r25, Y+2	; 0x02
    268e:	0c 96       	adiw	r24, 0x0c	; 12
    2690:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    2694:	89 81       	ldd	r24, Y+1	; 0x01
    2696:	9a 81       	ldd	r25, Y+2	; 0x02
    2698:	02 96       	adiw	r24, 0x02	; 2
    269a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    269e:	89 81       	ldd	r24, Y+1	; 0x01
    26a0:	9a 81       	ldd	r25, Y+2	; 0x02
    26a2:	fc 01       	movw	r30, r24
    26a4:	96 89       	ldd	r25, Z+22	; 0x16
    26a6:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    26aa:	89 17       	cp	r24, r25
    26ac:	30 f4       	brcc	.+12     	; 0x26ba <xTaskResumeAll+0x7a>
    26ae:	89 81       	ldd	r24, Y+1	; 0x01
    26b0:	9a 81       	ldd	r25, Y+2	; 0x02
    26b2:	fc 01       	movw	r30, r24
    26b4:	86 89       	ldd	r24, Z+22	; 0x16
    26b6:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    26ba:	89 81       	ldd	r24, Y+1	; 0x01
    26bc:	9a 81       	ldd	r25, Y+2	; 0x02
    26be:	ac 01       	movw	r20, r24
    26c0:	4e 5f       	subi	r20, 0xFE	; 254
    26c2:	5f 4f       	sbci	r21, 0xFF	; 255
    26c4:	89 81       	ldd	r24, Y+1	; 0x01
    26c6:	9a 81       	ldd	r25, Y+2	; 0x02
    26c8:	fc 01       	movw	r30, r24
    26ca:	86 89       	ldd	r24, Z+22	; 0x16
    26cc:	28 2f       	mov	r18, r24
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	c9 01       	movw	r24, r18
    26d2:	88 0f       	add	r24, r24
    26d4:	99 1f       	adc	r25, r25
    26d6:	88 0f       	add	r24, r24
    26d8:	99 1f       	adc	r25, r25
    26da:	88 0f       	add	r24, r24
    26dc:	99 1f       	adc	r25, r25
    26de:	82 0f       	add	r24, r18
    26e0:	93 1f       	adc	r25, r19
    26e2:	88 5c       	subi	r24, 0xC8	; 200
    26e4:	97 4f       	sbci	r25, 0xF7	; 247
    26e6:	ba 01       	movw	r22, r20
    26e8:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    26ec:	89 81       	ldd	r24, Y+1	; 0x01
    26ee:	9a 81       	ldd	r25, Y+2	; 0x02
    26f0:	fc 01       	movw	r30, r24
    26f2:	26 89       	ldd	r18, Z+22	; 0x16
    26f4:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    26f8:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    26fc:	fc 01       	movw	r30, r24
    26fe:	86 89       	ldd	r24, Z+22	; 0x16
    2700:	28 17       	cp	r18, r24
    2702:	18 f0       	brcs	.+6      	; 0x270a <xTaskResumeAll+0xca>
    2704:	81 e0       	ldi	r24, 0x01	; 1
    2706:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    270a:	80 91 72 08 	lds	r24, 0x0872	; 0x800872 <xPendingReadyList>
    270e:	88 23       	and	r24, r24
    2710:	09 f0       	breq	.+2      	; 0x2714 <xTaskResumeAll+0xd4>
    2712:	b2 cf       	rjmp	.-156    	; 0x2678 <xTaskResumeAll+0x38>
    2714:	89 81       	ldd	r24, Y+1	; 0x01
    2716:	9a 81       	ldd	r25, Y+2	; 0x02
    2718:	89 2b       	or	r24, r25
    271a:	09 f0       	breq	.+2      	; 0x271e <xTaskResumeAll+0xde>
    271c:	af d3       	rcall	.+1886   	; 0x2e7c <prvResetNextTaskUnblockTime>
    271e:	80 91 93 08 	lds	r24, 0x0893	; 0x800893 <uxPendedTicks>
    2722:	8c 83       	std	Y+4, r24	; 0x04
    2724:	8c 81       	ldd	r24, Y+4	; 0x04
    2726:	88 23       	and	r24, r24
    2728:	71 f0       	breq	.+28     	; 0x2746 <xTaskResumeAll+0x106>
    272a:	37 d0       	rcall	.+110    	; 0x279a <xTaskIncrementTick>
    272c:	88 23       	and	r24, r24
    272e:	19 f0       	breq	.+6      	; 0x2736 <xTaskResumeAll+0xf6>
    2730:	81 e0       	ldi	r24, 0x01	; 1
    2732:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    2736:	8c 81       	ldd	r24, Y+4	; 0x04
    2738:	81 50       	subi	r24, 0x01	; 1
    273a:	8c 83       	std	Y+4, r24	; 0x04
    273c:	8c 81       	ldd	r24, Y+4	; 0x04
    273e:	88 23       	and	r24, r24
    2740:	a1 f7       	brne	.-24     	; 0x272a <xTaskResumeAll+0xea>
    2742:	10 92 93 08 	sts	0x0893, r1	; 0x800893 <uxPendedTicks>
    2746:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <xYieldPending>
    274a:	88 23       	and	r24, r24
    274c:	21 f0       	breq	.+8      	; 0x2756 <xTaskResumeAll+0x116>
    274e:	81 e0       	ldi	r24, 0x01	; 1
    2750:	8b 83       	std	Y+3, r24	; 0x03
    2752:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    2756:	0f 90       	pop	r0
    2758:	0f be       	out	0x3f, r0	; 63
    275a:	8b 81       	ldd	r24, Y+3	; 0x03
    275c:	0f 90       	pop	r0
    275e:	0f 90       	pop	r0
    2760:	0f 90       	pop	r0
    2762:	0f 90       	pop	r0
    2764:	df 91       	pop	r29
    2766:	cf 91       	pop	r28
    2768:	08 95       	ret

0000276a <xTaskGetTickCount>:
    276a:	cf 93       	push	r28
    276c:	df 93       	push	r29
    276e:	1f 92       	push	r1
    2770:	1f 92       	push	r1
    2772:	cd b7       	in	r28, 0x3d	; 61
    2774:	de b7       	in	r29, 0x3e	; 62
    2776:	0f b6       	in	r0, 0x3f	; 63
    2778:	f8 94       	cli
    277a:	0f 92       	push	r0
    277c:	80 91 8f 08 	lds	r24, 0x088F	; 0x80088f <xTickCount>
    2780:	90 91 90 08 	lds	r25, 0x0890	; 0x800890 <xTickCount+0x1>
    2784:	9a 83       	std	Y+2, r25	; 0x02
    2786:	89 83       	std	Y+1, r24	; 0x01
    2788:	0f 90       	pop	r0
    278a:	0f be       	out	0x3f, r0	; 63
    278c:	89 81       	ldd	r24, Y+1	; 0x01
    278e:	9a 81       	ldd	r25, Y+2	; 0x02
    2790:	0f 90       	pop	r0
    2792:	0f 90       	pop	r0
    2794:	df 91       	pop	r29
    2796:	cf 91       	pop	r28
    2798:	08 95       	ret

0000279a <xTaskIncrementTick>:
    279a:	cf 93       	push	r28
    279c:	df 93       	push	r29
    279e:	cd b7       	in	r28, 0x3d	; 61
    27a0:	de b7       	in	r29, 0x3e	; 62
    27a2:	29 97       	sbiw	r28, 0x09	; 9
    27a4:	0f b6       	in	r0, 0x3f	; 63
    27a6:	f8 94       	cli
    27a8:	de bf       	out	0x3e, r29	; 62
    27aa:	0f be       	out	0x3f, r0	; 63
    27ac:	cd bf       	out	0x3d, r28	; 61
    27ae:	19 82       	std	Y+1, r1	; 0x01
    27b0:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    27b4:	88 23       	and	r24, r24
    27b6:	09 f0       	breq	.+2      	; 0x27ba <xTaskIncrementTick+0x20>
    27b8:	c7 c0       	rjmp	.+398    	; 0x2948 <xTaskIncrementTick+0x1ae>
    27ba:	80 91 8f 08 	lds	r24, 0x088F	; 0x80088f <xTickCount>
    27be:	90 91 90 08 	lds	r25, 0x0890	; 0x800890 <xTickCount+0x1>
    27c2:	01 96       	adiw	r24, 0x01	; 1
    27c4:	9b 83       	std	Y+3, r25	; 0x03
    27c6:	8a 83       	std	Y+2, r24	; 0x02
    27c8:	8a 81       	ldd	r24, Y+2	; 0x02
    27ca:	9b 81       	ldd	r25, Y+3	; 0x03
    27cc:	90 93 90 08 	sts	0x0890, r25	; 0x800890 <xTickCount+0x1>
    27d0:	80 93 8f 08 	sts	0x088F, r24	; 0x80088f <xTickCount>
    27d4:	8a 81       	ldd	r24, Y+2	; 0x02
    27d6:	9b 81       	ldd	r25, Y+3	; 0x03
    27d8:	89 2b       	or	r24, r25
    27da:	d1 f4       	brne	.+52     	; 0x2810 <xTaskIncrementTick+0x76>
    27dc:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    27e0:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    27e4:	9d 83       	std	Y+5, r25	; 0x05
    27e6:	8c 83       	std	Y+4, r24	; 0x04
    27e8:	80 91 70 08 	lds	r24, 0x0870	; 0x800870 <pxOverflowDelayedTaskList>
    27ec:	90 91 71 08 	lds	r25, 0x0871	; 0x800871 <pxOverflowDelayedTaskList+0x1>
    27f0:	90 93 6f 08 	sts	0x086F, r25	; 0x80086f <pxDelayedTaskList+0x1>
    27f4:	80 93 6e 08 	sts	0x086E, r24	; 0x80086e <pxDelayedTaskList>
    27f8:	8c 81       	ldd	r24, Y+4	; 0x04
    27fa:	9d 81       	ldd	r25, Y+5	; 0x05
    27fc:	90 93 71 08 	sts	0x0871, r25	; 0x800871 <pxOverflowDelayedTaskList+0x1>
    2800:	80 93 70 08 	sts	0x0870, r24	; 0x800870 <pxOverflowDelayedTaskList>
    2804:	80 91 95 08 	lds	r24, 0x0895	; 0x800895 <xNumOfOverflows>
    2808:	8f 5f       	subi	r24, 0xFF	; 255
    280a:	80 93 95 08 	sts	0x0895, r24	; 0x800895 <xNumOfOverflows>
    280e:	36 d3       	rcall	.+1644   	; 0x2e7c <prvResetNextTaskUnblockTime>
    2810:	80 91 97 08 	lds	r24, 0x0897	; 0x800897 <xNextTaskUnblockTime>
    2814:	90 91 98 08 	lds	r25, 0x0898	; 0x800898 <xNextTaskUnblockTime+0x1>
    2818:	2a 81       	ldd	r18, Y+2	; 0x02
    281a:	3b 81       	ldd	r19, Y+3	; 0x03
    281c:	28 17       	cp	r18, r24
    281e:	39 07       	cpc	r19, r25
    2820:	08 f4       	brcc	.+2      	; 0x2824 <xTaskIncrementTick+0x8a>
    2822:	78 c0       	rjmp	.+240    	; 0x2914 <xTaskIncrementTick+0x17a>
    2824:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    2828:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    282c:	fc 01       	movw	r30, r24
    282e:	80 81       	ld	r24, Z
    2830:	88 23       	and	r24, r24
    2832:	39 f4       	brne	.+14     	; 0x2842 <xTaskIncrementTick+0xa8>
    2834:	8f ef       	ldi	r24, 0xFF	; 255
    2836:	9f ef       	ldi	r25, 0xFF	; 255
    2838:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    283c:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    2840:	69 c0       	rjmp	.+210    	; 0x2914 <xTaskIncrementTick+0x17a>
    2842:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    2846:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    284a:	fc 01       	movw	r30, r24
    284c:	85 81       	ldd	r24, Z+5	; 0x05
    284e:	96 81       	ldd	r25, Z+6	; 0x06
    2850:	fc 01       	movw	r30, r24
    2852:	86 81       	ldd	r24, Z+6	; 0x06
    2854:	97 81       	ldd	r25, Z+7	; 0x07
    2856:	9f 83       	std	Y+7, r25	; 0x07
    2858:	8e 83       	std	Y+6, r24	; 0x06
    285a:	8e 81       	ldd	r24, Y+6	; 0x06
    285c:	9f 81       	ldd	r25, Y+7	; 0x07
    285e:	fc 01       	movw	r30, r24
    2860:	82 81       	ldd	r24, Z+2	; 0x02
    2862:	93 81       	ldd	r25, Z+3	; 0x03
    2864:	99 87       	std	Y+9, r25	; 0x09
    2866:	88 87       	std	Y+8, r24	; 0x08
    2868:	2a 81       	ldd	r18, Y+2	; 0x02
    286a:	3b 81       	ldd	r19, Y+3	; 0x03
    286c:	88 85       	ldd	r24, Y+8	; 0x08
    286e:	99 85       	ldd	r25, Y+9	; 0x09
    2870:	28 17       	cp	r18, r24
    2872:	39 07       	cpc	r19, r25
    2874:	38 f4       	brcc	.+14     	; 0x2884 <xTaskIncrementTick+0xea>
    2876:	88 85       	ldd	r24, Y+8	; 0x08
    2878:	99 85       	ldd	r25, Y+9	; 0x09
    287a:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    287e:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    2882:	48 c0       	rjmp	.+144    	; 0x2914 <xTaskIncrementTick+0x17a>
    2884:	8e 81       	ldd	r24, Y+6	; 0x06
    2886:	9f 81       	ldd	r25, Y+7	; 0x07
    2888:	02 96       	adiw	r24, 0x02	; 2
    288a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    288e:	8e 81       	ldd	r24, Y+6	; 0x06
    2890:	9f 81       	ldd	r25, Y+7	; 0x07
    2892:	fc 01       	movw	r30, r24
    2894:	84 89       	ldd	r24, Z+20	; 0x14
    2896:	95 89       	ldd	r25, Z+21	; 0x15
    2898:	89 2b       	or	r24, r25
    289a:	29 f0       	breq	.+10     	; 0x28a6 <xTaskIncrementTick+0x10c>
    289c:	8e 81       	ldd	r24, Y+6	; 0x06
    289e:	9f 81       	ldd	r25, Y+7	; 0x07
    28a0:	0c 96       	adiw	r24, 0x0c	; 12
    28a2:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    28a6:	8e 81       	ldd	r24, Y+6	; 0x06
    28a8:	9f 81       	ldd	r25, Y+7	; 0x07
    28aa:	fc 01       	movw	r30, r24
    28ac:	96 89       	ldd	r25, Z+22	; 0x16
    28ae:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    28b2:	89 17       	cp	r24, r25
    28b4:	30 f4       	brcc	.+12     	; 0x28c2 <xTaskIncrementTick+0x128>
    28b6:	8e 81       	ldd	r24, Y+6	; 0x06
    28b8:	9f 81       	ldd	r25, Y+7	; 0x07
    28ba:	fc 01       	movw	r30, r24
    28bc:	86 89       	ldd	r24, Z+22	; 0x16
    28be:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    28c2:	8e 81       	ldd	r24, Y+6	; 0x06
    28c4:	9f 81       	ldd	r25, Y+7	; 0x07
    28c6:	ac 01       	movw	r20, r24
    28c8:	4e 5f       	subi	r20, 0xFE	; 254
    28ca:	5f 4f       	sbci	r21, 0xFF	; 255
    28cc:	8e 81       	ldd	r24, Y+6	; 0x06
    28ce:	9f 81       	ldd	r25, Y+7	; 0x07
    28d0:	fc 01       	movw	r30, r24
    28d2:	86 89       	ldd	r24, Z+22	; 0x16
    28d4:	28 2f       	mov	r18, r24
    28d6:	30 e0       	ldi	r19, 0x00	; 0
    28d8:	c9 01       	movw	r24, r18
    28da:	88 0f       	add	r24, r24
    28dc:	99 1f       	adc	r25, r25
    28de:	88 0f       	add	r24, r24
    28e0:	99 1f       	adc	r25, r25
    28e2:	88 0f       	add	r24, r24
    28e4:	99 1f       	adc	r25, r25
    28e6:	82 0f       	add	r24, r18
    28e8:	93 1f       	adc	r25, r19
    28ea:	88 5c       	subi	r24, 0xC8	; 200
    28ec:	97 4f       	sbci	r25, 0xF7	; 247
    28ee:	ba 01       	movw	r22, r20
    28f0:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    28f4:	8e 81       	ldd	r24, Y+6	; 0x06
    28f6:	9f 81       	ldd	r25, Y+7	; 0x07
    28f8:	fc 01       	movw	r30, r24
    28fa:	26 89       	ldd	r18, Z+22	; 0x16
    28fc:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2900:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2904:	fc 01       	movw	r30, r24
    2906:	86 89       	ldd	r24, Z+22	; 0x16
    2908:	28 17       	cp	r18, r24
    290a:	08 f4       	brcc	.+2      	; 0x290e <xTaskIncrementTick+0x174>
    290c:	8b cf       	rjmp	.-234    	; 0x2824 <xTaskIncrementTick+0x8a>
    290e:	81 e0       	ldi	r24, 0x01	; 1
    2910:	89 83       	std	Y+1, r24	; 0x01
    2912:	88 cf       	rjmp	.-240    	; 0x2824 <xTaskIncrementTick+0x8a>
    2914:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2918:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    291c:	fc 01       	movw	r30, r24
    291e:	86 89       	ldd	r24, Z+22	; 0x16
    2920:	28 2f       	mov	r18, r24
    2922:	30 e0       	ldi	r19, 0x00	; 0
    2924:	c9 01       	movw	r24, r18
    2926:	88 0f       	add	r24, r24
    2928:	99 1f       	adc	r25, r25
    292a:	88 0f       	add	r24, r24
    292c:	99 1f       	adc	r25, r25
    292e:	88 0f       	add	r24, r24
    2930:	99 1f       	adc	r25, r25
    2932:	82 0f       	add	r24, r18
    2934:	93 1f       	adc	r25, r19
    2936:	88 5c       	subi	r24, 0xC8	; 200
    2938:	97 4f       	sbci	r25, 0xF7	; 247
    293a:	fc 01       	movw	r30, r24
    293c:	80 81       	ld	r24, Z
    293e:	82 30       	cpi	r24, 0x02	; 2
    2940:	40 f0       	brcs	.+16     	; 0x2952 <xTaskIncrementTick+0x1b8>
    2942:	81 e0       	ldi	r24, 0x01	; 1
    2944:	89 83       	std	Y+1, r24	; 0x01
    2946:	05 c0       	rjmp	.+10     	; 0x2952 <xTaskIncrementTick+0x1b8>
    2948:	80 91 93 08 	lds	r24, 0x0893	; 0x800893 <uxPendedTicks>
    294c:	8f 5f       	subi	r24, 0xFF	; 255
    294e:	80 93 93 08 	sts	0x0893, r24	; 0x800893 <uxPendedTicks>
    2952:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <xYieldPending>
    2956:	88 23       	and	r24, r24
    2958:	11 f0       	breq	.+4      	; 0x295e <xTaskIncrementTick+0x1c4>
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	89 83       	std	Y+1, r24	; 0x01
    295e:	89 81       	ldd	r24, Y+1	; 0x01
    2960:	29 96       	adiw	r28, 0x09	; 9
    2962:	0f b6       	in	r0, 0x3f	; 63
    2964:	f8 94       	cli
    2966:	de bf       	out	0x3e, r29	; 62
    2968:	0f be       	out	0x3f, r0	; 63
    296a:	cd bf       	out	0x3d, r28	; 61
    296c:	df 91       	pop	r29
    296e:	cf 91       	pop	r28
    2970:	08 95       	ret

00002972 <vTaskSwitchContext>:
    2972:	cf 93       	push	r28
    2974:	df 93       	push	r29
    2976:	00 d0       	rcall	.+0      	; 0x2978 <vTaskSwitchContext+0x6>
    2978:	cd b7       	in	r28, 0x3d	; 61
    297a:	de b7       	in	r29, 0x3e	; 62
    297c:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    2980:	88 23       	and	r24, r24
    2982:	21 f0       	breq	.+8      	; 0x298c <vTaskSwitchContext+0x1a>
    2984:	81 e0       	ldi	r24, 0x01	; 1
    2986:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    298a:	90 c0       	rjmp	.+288    	; 0x2aac <vTaskSwitchContext+0x13a>
    298c:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <xYieldPending>
    2990:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2994:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2998:	fc 01       	movw	r30, r24
    299a:	85 a1       	ldd	r24, Z+37	; 0x25
    299c:	96 a1       	ldd	r25, Z+38	; 0x26
    299e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <task_switch_out>
    29a2:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    29a6:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    29aa:	fc 01       	movw	r30, r24
    29ac:	20 81       	ld	r18, Z
    29ae:	31 81       	ldd	r19, Z+1	; 0x01
    29b0:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    29b4:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    29b8:	fc 01       	movw	r30, r24
    29ba:	87 89       	ldd	r24, Z+23	; 0x17
    29bc:	90 8d       	ldd	r25, Z+24	; 0x18
    29be:	82 17       	cp	r24, r18
    29c0:	93 07       	cpc	r25, r19
    29c2:	70 f0       	brcs	.+28     	; 0x29e0 <vTaskSwitchContext+0x6e>
    29c4:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    29c8:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    29cc:	9c 01       	movw	r18, r24
    29ce:	27 5e       	subi	r18, 0xE7	; 231
    29d0:	3f 4f       	sbci	r19, 0xFF	; 255
    29d2:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    29d6:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    29da:	b9 01       	movw	r22, r18
    29dc:	0e 94 c4 21 	call	0x4388	; 0x4388 <vApplicationStackOverflowHook>
    29e0:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    29e4:	89 83       	std	Y+1, r24	; 0x01
    29e6:	03 c0       	rjmp	.+6      	; 0x29ee <vTaskSwitchContext+0x7c>
    29e8:	89 81       	ldd	r24, Y+1	; 0x01
    29ea:	81 50       	subi	r24, 0x01	; 1
    29ec:	89 83       	std	Y+1, r24	; 0x01
    29ee:	89 81       	ldd	r24, Y+1	; 0x01
    29f0:	28 2f       	mov	r18, r24
    29f2:	30 e0       	ldi	r19, 0x00	; 0
    29f4:	c9 01       	movw	r24, r18
    29f6:	88 0f       	add	r24, r24
    29f8:	99 1f       	adc	r25, r25
    29fa:	88 0f       	add	r24, r24
    29fc:	99 1f       	adc	r25, r25
    29fe:	88 0f       	add	r24, r24
    2a00:	99 1f       	adc	r25, r25
    2a02:	82 0f       	add	r24, r18
    2a04:	93 1f       	adc	r25, r19
    2a06:	88 5c       	subi	r24, 0xC8	; 200
    2a08:	97 4f       	sbci	r25, 0xF7	; 247
    2a0a:	fc 01       	movw	r30, r24
    2a0c:	80 81       	ld	r24, Z
    2a0e:	88 23       	and	r24, r24
    2a10:	59 f3       	breq	.-42     	; 0x29e8 <vTaskSwitchContext+0x76>
    2a12:	89 81       	ldd	r24, Y+1	; 0x01
    2a14:	28 2f       	mov	r18, r24
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	c9 01       	movw	r24, r18
    2a1a:	88 0f       	add	r24, r24
    2a1c:	99 1f       	adc	r25, r25
    2a1e:	88 0f       	add	r24, r24
    2a20:	99 1f       	adc	r25, r25
    2a22:	88 0f       	add	r24, r24
    2a24:	99 1f       	adc	r25, r25
    2a26:	82 0f       	add	r24, r18
    2a28:	93 1f       	adc	r25, r19
    2a2a:	88 5c       	subi	r24, 0xC8	; 200
    2a2c:	97 4f       	sbci	r25, 0xF7	; 247
    2a2e:	9b 83       	std	Y+3, r25	; 0x03
    2a30:	8a 83       	std	Y+2, r24	; 0x02
    2a32:	8a 81       	ldd	r24, Y+2	; 0x02
    2a34:	9b 81       	ldd	r25, Y+3	; 0x03
    2a36:	fc 01       	movw	r30, r24
    2a38:	81 81       	ldd	r24, Z+1	; 0x01
    2a3a:	92 81       	ldd	r25, Z+2	; 0x02
    2a3c:	fc 01       	movw	r30, r24
    2a3e:	22 81       	ldd	r18, Z+2	; 0x02
    2a40:	33 81       	ldd	r19, Z+3	; 0x03
    2a42:	8a 81       	ldd	r24, Y+2	; 0x02
    2a44:	9b 81       	ldd	r25, Y+3	; 0x03
    2a46:	fc 01       	movw	r30, r24
    2a48:	32 83       	std	Z+2, r19	; 0x02
    2a4a:	21 83       	std	Z+1, r18	; 0x01
    2a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a4e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a50:	fc 01       	movw	r30, r24
    2a52:	21 81       	ldd	r18, Z+1	; 0x01
    2a54:	32 81       	ldd	r19, Z+2	; 0x02
    2a56:	8a 81       	ldd	r24, Y+2	; 0x02
    2a58:	9b 81       	ldd	r25, Y+3	; 0x03
    2a5a:	03 96       	adiw	r24, 0x03	; 3
    2a5c:	28 17       	cp	r18, r24
    2a5e:	39 07       	cpc	r19, r25
    2a60:	69 f4       	brne	.+26     	; 0x2a7c <vTaskSwitchContext+0x10a>
    2a62:	8a 81       	ldd	r24, Y+2	; 0x02
    2a64:	9b 81       	ldd	r25, Y+3	; 0x03
    2a66:	fc 01       	movw	r30, r24
    2a68:	81 81       	ldd	r24, Z+1	; 0x01
    2a6a:	92 81       	ldd	r25, Z+2	; 0x02
    2a6c:	fc 01       	movw	r30, r24
    2a6e:	22 81       	ldd	r18, Z+2	; 0x02
    2a70:	33 81       	ldd	r19, Z+3	; 0x03
    2a72:	8a 81       	ldd	r24, Y+2	; 0x02
    2a74:	9b 81       	ldd	r25, Y+3	; 0x03
    2a76:	fc 01       	movw	r30, r24
    2a78:	32 83       	std	Z+2, r19	; 0x02
    2a7a:	21 83       	std	Z+1, r18	; 0x01
    2a7c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a7e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a80:	fc 01       	movw	r30, r24
    2a82:	81 81       	ldd	r24, Z+1	; 0x01
    2a84:	92 81       	ldd	r25, Z+2	; 0x02
    2a86:	fc 01       	movw	r30, r24
    2a88:	86 81       	ldd	r24, Z+6	; 0x06
    2a8a:	97 81       	ldd	r25, Z+7	; 0x07
    2a8c:	90 93 37 08 	sts	0x0837, r25	; 0x800837 <__data_end+0x1>
    2a90:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <__data_end>
    2a94:	89 81       	ldd	r24, Y+1	; 0x01
    2a96:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    2a9a:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2a9e:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2aa2:	fc 01       	movw	r30, r24
    2aa4:	85 a1       	ldd	r24, Z+37	; 0x25
    2aa6:	96 a1       	ldd	r25, Z+38	; 0x26
    2aa8:	0e 94 59 01 	call	0x2b2	; 0x2b2 <task_switch_in>
    2aac:	00 00       	nop
    2aae:	0f 90       	pop	r0
    2ab0:	0f 90       	pop	r0
    2ab2:	0f 90       	pop	r0
    2ab4:	df 91       	pop	r29
    2ab6:	cf 91       	pop	r28
    2ab8:	08 95       	ret

00002aba <vTaskPlaceOnEventList>:
    2aba:	cf 93       	push	r28
    2abc:	df 93       	push	r29
    2abe:	00 d0       	rcall	.+0      	; 0x2ac0 <vTaskPlaceOnEventList+0x6>
    2ac0:	1f 92       	push	r1
    2ac2:	cd b7       	in	r28, 0x3d	; 61
    2ac4:	de b7       	in	r29, 0x3e	; 62
    2ac6:	9a 83       	std	Y+2, r25	; 0x02
    2ac8:	89 83       	std	Y+1, r24	; 0x01
    2aca:	7c 83       	std	Y+4, r23	; 0x04
    2acc:	6b 83       	std	Y+3, r22	; 0x03
    2ace:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2ad2:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2ad6:	9c 01       	movw	r18, r24
    2ad8:	24 5f       	subi	r18, 0xF4	; 244
    2ada:	3f 4f       	sbci	r19, 0xFF	; 255
    2adc:	89 81       	ldd	r24, Y+1	; 0x01
    2ade:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae0:	b9 01       	movw	r22, r18
    2ae2:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    2ae6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ae8:	9c 81       	ldd	r25, Y+4	; 0x04
    2aea:	61 e0       	ldi	r22, 0x01	; 1
    2aec:	b9 d6       	rcall	.+3442   	; 0x3860 <prvAddCurrentTaskToDelayedList>
    2aee:	00 00       	nop
    2af0:	0f 90       	pop	r0
    2af2:	0f 90       	pop	r0
    2af4:	0f 90       	pop	r0
    2af6:	0f 90       	pop	r0
    2af8:	df 91       	pop	r29
    2afa:	cf 91       	pop	r28
    2afc:	08 95       	ret

00002afe <vTaskPlaceOnEventListRestricted>:
    2afe:	cf 93       	push	r28
    2b00:	df 93       	push	r29
    2b02:	00 d0       	rcall	.+0      	; 0x2b04 <vTaskPlaceOnEventListRestricted+0x6>
    2b04:	1f 92       	push	r1
    2b06:	1f 92       	push	r1
    2b08:	cd b7       	in	r28, 0x3d	; 61
    2b0a:	de b7       	in	r29, 0x3e	; 62
    2b0c:	9a 83       	std	Y+2, r25	; 0x02
    2b0e:	89 83       	std	Y+1, r24	; 0x01
    2b10:	7c 83       	std	Y+4, r23	; 0x04
    2b12:	6b 83       	std	Y+3, r22	; 0x03
    2b14:	4d 83       	std	Y+5, r20	; 0x05
    2b16:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2b1a:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2b1e:	9c 01       	movw	r18, r24
    2b20:	24 5f       	subi	r18, 0xF4	; 244
    2b22:	3f 4f       	sbci	r19, 0xFF	; 255
    2b24:	89 81       	ldd	r24, Y+1	; 0x01
    2b26:	9a 81       	ldd	r25, Y+2	; 0x02
    2b28:	b9 01       	movw	r22, r18
    2b2a:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    2b2e:	8d 81       	ldd	r24, Y+5	; 0x05
    2b30:	88 23       	and	r24, r24
    2b32:	21 f0       	breq	.+8      	; 0x2b3c <vTaskPlaceOnEventListRestricted+0x3e>
    2b34:	8f ef       	ldi	r24, 0xFF	; 255
    2b36:	9f ef       	ldi	r25, 0xFF	; 255
    2b38:	9c 83       	std	Y+4, r25	; 0x04
    2b3a:	8b 83       	std	Y+3, r24	; 0x03
    2b3c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b3e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b40:	6d 81       	ldd	r22, Y+5	; 0x05
    2b42:	8e d6       	rcall	.+3356   	; 0x3860 <prvAddCurrentTaskToDelayedList>
    2b44:	00 00       	nop
    2b46:	0f 90       	pop	r0
    2b48:	0f 90       	pop	r0
    2b4a:	0f 90       	pop	r0
    2b4c:	0f 90       	pop	r0
    2b4e:	0f 90       	pop	r0
    2b50:	df 91       	pop	r29
    2b52:	cf 91       	pop	r28
    2b54:	08 95       	ret

00002b56 <xTaskRemoveFromEventList>:
    2b56:	cf 93       	push	r28
    2b58:	df 93       	push	r29
    2b5a:	00 d0       	rcall	.+0      	; 0x2b5c <xTaskRemoveFromEventList+0x6>
    2b5c:	1f 92       	push	r1
    2b5e:	1f 92       	push	r1
    2b60:	cd b7       	in	r28, 0x3d	; 61
    2b62:	de b7       	in	r29, 0x3e	; 62
    2b64:	9d 83       	std	Y+5, r25	; 0x05
    2b66:	8c 83       	std	Y+4, r24	; 0x04
    2b68:	8c 81       	ldd	r24, Y+4	; 0x04
    2b6a:	9d 81       	ldd	r25, Y+5	; 0x05
    2b6c:	fc 01       	movw	r30, r24
    2b6e:	85 81       	ldd	r24, Z+5	; 0x05
    2b70:	96 81       	ldd	r25, Z+6	; 0x06
    2b72:	fc 01       	movw	r30, r24
    2b74:	86 81       	ldd	r24, Z+6	; 0x06
    2b76:	97 81       	ldd	r25, Z+7	; 0x07
    2b78:	9b 83       	std	Y+3, r25	; 0x03
    2b7a:	8a 83       	std	Y+2, r24	; 0x02
    2b7c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7e:	9b 81       	ldd	r25, Y+3	; 0x03
    2b80:	0c 96       	adiw	r24, 0x0c	; 12
    2b82:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    2b86:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    2b8a:	88 23       	and	r24, r24
    2b8c:	69 f5       	brne	.+90     	; 0x2be8 <xTaskRemoveFromEventList+0x92>
    2b8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b90:	9b 81       	ldd	r25, Y+3	; 0x03
    2b92:	02 96       	adiw	r24, 0x02	; 2
    2b94:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    2b98:	8a 81       	ldd	r24, Y+2	; 0x02
    2b9a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b9c:	fc 01       	movw	r30, r24
    2b9e:	96 89       	ldd	r25, Z+22	; 0x16
    2ba0:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    2ba4:	89 17       	cp	r24, r25
    2ba6:	30 f4       	brcc	.+12     	; 0x2bb4 <xTaskRemoveFromEventList+0x5e>
    2ba8:	8a 81       	ldd	r24, Y+2	; 0x02
    2baa:	9b 81       	ldd	r25, Y+3	; 0x03
    2bac:	fc 01       	movw	r30, r24
    2bae:	86 89       	ldd	r24, Z+22	; 0x16
    2bb0:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    2bb4:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb6:	9b 81       	ldd	r25, Y+3	; 0x03
    2bb8:	ac 01       	movw	r20, r24
    2bba:	4e 5f       	subi	r20, 0xFE	; 254
    2bbc:	5f 4f       	sbci	r21, 0xFF	; 255
    2bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc0:	9b 81       	ldd	r25, Y+3	; 0x03
    2bc2:	fc 01       	movw	r30, r24
    2bc4:	86 89       	ldd	r24, Z+22	; 0x16
    2bc6:	28 2f       	mov	r18, r24
    2bc8:	30 e0       	ldi	r19, 0x00	; 0
    2bca:	c9 01       	movw	r24, r18
    2bcc:	88 0f       	add	r24, r24
    2bce:	99 1f       	adc	r25, r25
    2bd0:	88 0f       	add	r24, r24
    2bd2:	99 1f       	adc	r25, r25
    2bd4:	88 0f       	add	r24, r24
    2bd6:	99 1f       	adc	r25, r25
    2bd8:	82 0f       	add	r24, r18
    2bda:	93 1f       	adc	r25, r19
    2bdc:	88 5c       	subi	r24, 0xC8	; 200
    2bde:	97 4f       	sbci	r25, 0xF7	; 247
    2be0:	ba 01       	movw	r22, r20
    2be2:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    2be6:	08 c0       	rjmp	.+16     	; 0x2bf8 <xTaskRemoveFromEventList+0xa2>
    2be8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bea:	9b 81       	ldd	r25, Y+3	; 0x03
    2bec:	0c 96       	adiw	r24, 0x0c	; 12
    2bee:	bc 01       	movw	r22, r24
    2bf0:	82 e7       	ldi	r24, 0x72	; 114
    2bf2:	98 e0       	ldi	r25, 0x08	; 8
    2bf4:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    2bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bfa:	9b 81       	ldd	r25, Y+3	; 0x03
    2bfc:	fc 01       	movw	r30, r24
    2bfe:	26 89       	ldd	r18, Z+22	; 0x16
    2c00:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2c04:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2c08:	fc 01       	movw	r30, r24
    2c0a:	86 89       	ldd	r24, Z+22	; 0x16
    2c0c:	82 17       	cp	r24, r18
    2c0e:	30 f4       	brcc	.+12     	; 0x2c1c <xTaskRemoveFromEventList+0xc6>
    2c10:	81 e0       	ldi	r24, 0x01	; 1
    2c12:	89 83       	std	Y+1, r24	; 0x01
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    2c1a:	01 c0       	rjmp	.+2      	; 0x2c1e <xTaskRemoveFromEventList+0xc8>
    2c1c:	19 82       	std	Y+1, r1	; 0x01
    2c1e:	89 81       	ldd	r24, Y+1	; 0x01
    2c20:	0f 90       	pop	r0
    2c22:	0f 90       	pop	r0
    2c24:	0f 90       	pop	r0
    2c26:	0f 90       	pop	r0
    2c28:	0f 90       	pop	r0
    2c2a:	df 91       	pop	r29
    2c2c:	cf 91       	pop	r28
    2c2e:	08 95       	ret

00002c30 <vTaskInternalSetTimeOutState>:
    2c30:	cf 93       	push	r28
    2c32:	df 93       	push	r29
    2c34:	1f 92       	push	r1
    2c36:	1f 92       	push	r1
    2c38:	cd b7       	in	r28, 0x3d	; 61
    2c3a:	de b7       	in	r29, 0x3e	; 62
    2c3c:	9a 83       	std	Y+2, r25	; 0x02
    2c3e:	89 83       	std	Y+1, r24	; 0x01
    2c40:	20 91 95 08 	lds	r18, 0x0895	; 0x800895 <xNumOfOverflows>
    2c44:	89 81       	ldd	r24, Y+1	; 0x01
    2c46:	9a 81       	ldd	r25, Y+2	; 0x02
    2c48:	fc 01       	movw	r30, r24
    2c4a:	20 83       	st	Z, r18
    2c4c:	20 91 8f 08 	lds	r18, 0x088F	; 0x80088f <xTickCount>
    2c50:	30 91 90 08 	lds	r19, 0x0890	; 0x800890 <xTickCount+0x1>
    2c54:	89 81       	ldd	r24, Y+1	; 0x01
    2c56:	9a 81       	ldd	r25, Y+2	; 0x02
    2c58:	fc 01       	movw	r30, r24
    2c5a:	32 83       	std	Z+2, r19	; 0x02
    2c5c:	21 83       	std	Z+1, r18	; 0x01
    2c5e:	00 00       	nop
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	df 91       	pop	r29
    2c66:	cf 91       	pop	r28
    2c68:	08 95       	ret

00002c6a <xTaskCheckForTimeOut>:
    2c6a:	cf 93       	push	r28
    2c6c:	df 93       	push	r29
    2c6e:	cd b7       	in	r28, 0x3d	; 61
    2c70:	de b7       	in	r29, 0x3e	; 62
    2c72:	29 97       	sbiw	r28, 0x09	; 9
    2c74:	0f b6       	in	r0, 0x3f	; 63
    2c76:	f8 94       	cli
    2c78:	de bf       	out	0x3e, r29	; 62
    2c7a:	0f be       	out	0x3f, r0	; 63
    2c7c:	cd bf       	out	0x3d, r28	; 61
    2c7e:	9f 83       	std	Y+7, r25	; 0x07
    2c80:	8e 83       	std	Y+6, r24	; 0x06
    2c82:	79 87       	std	Y+9, r23	; 0x09
    2c84:	68 87       	std	Y+8, r22	; 0x08
    2c86:	0f b6       	in	r0, 0x3f	; 63
    2c88:	f8 94       	cli
    2c8a:	0f 92       	push	r0
    2c8c:	80 91 8f 08 	lds	r24, 0x088F	; 0x80088f <xTickCount>
    2c90:	90 91 90 08 	lds	r25, 0x0890	; 0x800890 <xTickCount+0x1>
    2c94:	9b 83       	std	Y+3, r25	; 0x03
    2c96:	8a 83       	std	Y+2, r24	; 0x02
    2c98:	8e 81       	ldd	r24, Y+6	; 0x06
    2c9a:	9f 81       	ldd	r25, Y+7	; 0x07
    2c9c:	fc 01       	movw	r30, r24
    2c9e:	81 81       	ldd	r24, Z+1	; 0x01
    2ca0:	92 81       	ldd	r25, Z+2	; 0x02
    2ca2:	2a 81       	ldd	r18, Y+2	; 0x02
    2ca4:	3b 81       	ldd	r19, Y+3	; 0x03
    2ca6:	a9 01       	movw	r20, r18
    2ca8:	48 1b       	sub	r20, r24
    2caa:	59 0b       	sbc	r21, r25
    2cac:	ca 01       	movw	r24, r20
    2cae:	9d 83       	std	Y+5, r25	; 0x05
    2cb0:	8c 83       	std	Y+4, r24	; 0x04
    2cb2:	88 85       	ldd	r24, Y+8	; 0x08
    2cb4:	99 85       	ldd	r25, Y+9	; 0x09
    2cb6:	fc 01       	movw	r30, r24
    2cb8:	80 81       	ld	r24, Z
    2cba:	91 81       	ldd	r25, Z+1	; 0x01
    2cbc:	01 96       	adiw	r24, 0x01	; 1
    2cbe:	11 f4       	brne	.+4      	; 0x2cc4 <xTaskCheckForTimeOut+0x5a>
    2cc0:	19 82       	std	Y+1, r1	; 0x01
    2cc2:	39 c0       	rjmp	.+114    	; 0x2d36 <xTaskCheckForTimeOut+0xcc>
    2cc4:	8e 81       	ldd	r24, Y+6	; 0x06
    2cc6:	9f 81       	ldd	r25, Y+7	; 0x07
    2cc8:	fc 01       	movw	r30, r24
    2cca:	90 81       	ld	r25, Z
    2ccc:	80 91 95 08 	lds	r24, 0x0895	; 0x800895 <xNumOfOverflows>
    2cd0:	98 17       	cp	r25, r24
    2cd2:	69 f0       	breq	.+26     	; 0x2cee <xTaskCheckForTimeOut+0x84>
    2cd4:	8e 81       	ldd	r24, Y+6	; 0x06
    2cd6:	9f 81       	ldd	r25, Y+7	; 0x07
    2cd8:	fc 01       	movw	r30, r24
    2cda:	21 81       	ldd	r18, Z+1	; 0x01
    2cdc:	32 81       	ldd	r19, Z+2	; 0x02
    2cde:	8a 81       	ldd	r24, Y+2	; 0x02
    2ce0:	9b 81       	ldd	r25, Y+3	; 0x03
    2ce2:	82 17       	cp	r24, r18
    2ce4:	93 07       	cpc	r25, r19
    2ce6:	18 f0       	brcs	.+6      	; 0x2cee <xTaskCheckForTimeOut+0x84>
    2ce8:	81 e0       	ldi	r24, 0x01	; 1
    2cea:	89 83       	std	Y+1, r24	; 0x01
    2cec:	24 c0       	rjmp	.+72     	; 0x2d36 <xTaskCheckForTimeOut+0xcc>
    2cee:	88 85       	ldd	r24, Y+8	; 0x08
    2cf0:	99 85       	ldd	r25, Y+9	; 0x09
    2cf2:	fc 01       	movw	r30, r24
    2cf4:	20 81       	ld	r18, Z
    2cf6:	31 81       	ldd	r19, Z+1	; 0x01
    2cf8:	8c 81       	ldd	r24, Y+4	; 0x04
    2cfa:	9d 81       	ldd	r25, Y+5	; 0x05
    2cfc:	82 17       	cp	r24, r18
    2cfe:	93 07       	cpc	r25, r19
    2d00:	98 f4       	brcc	.+38     	; 0x2d28 <xTaskCheckForTimeOut+0xbe>
    2d02:	88 85       	ldd	r24, Y+8	; 0x08
    2d04:	99 85       	ldd	r25, Y+9	; 0x09
    2d06:	fc 01       	movw	r30, r24
    2d08:	20 81       	ld	r18, Z
    2d0a:	31 81       	ldd	r19, Z+1	; 0x01
    2d0c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d0e:	9d 81       	ldd	r25, Y+5	; 0x05
    2d10:	28 1b       	sub	r18, r24
    2d12:	39 0b       	sbc	r19, r25
    2d14:	88 85       	ldd	r24, Y+8	; 0x08
    2d16:	99 85       	ldd	r25, Y+9	; 0x09
    2d18:	fc 01       	movw	r30, r24
    2d1a:	31 83       	std	Z+1, r19	; 0x01
    2d1c:	20 83       	st	Z, r18
    2d1e:	8e 81       	ldd	r24, Y+6	; 0x06
    2d20:	9f 81       	ldd	r25, Y+7	; 0x07
    2d22:	86 df       	rcall	.-244    	; 0x2c30 <vTaskInternalSetTimeOutState>
    2d24:	19 82       	std	Y+1, r1	; 0x01
    2d26:	07 c0       	rjmp	.+14     	; 0x2d36 <xTaskCheckForTimeOut+0xcc>
    2d28:	88 85       	ldd	r24, Y+8	; 0x08
    2d2a:	99 85       	ldd	r25, Y+9	; 0x09
    2d2c:	fc 01       	movw	r30, r24
    2d2e:	11 82       	std	Z+1, r1	; 0x01
    2d30:	10 82       	st	Z, r1
    2d32:	81 e0       	ldi	r24, 0x01	; 1
    2d34:	89 83       	std	Y+1, r24	; 0x01
    2d36:	0f 90       	pop	r0
    2d38:	0f be       	out	0x3f, r0	; 63
    2d3a:	89 81       	ldd	r24, Y+1	; 0x01
    2d3c:	29 96       	adiw	r28, 0x09	; 9
    2d3e:	0f b6       	in	r0, 0x3f	; 63
    2d40:	f8 94       	cli
    2d42:	de bf       	out	0x3e, r29	; 62
    2d44:	0f be       	out	0x3f, r0	; 63
    2d46:	cd bf       	out	0x3d, r28	; 61
    2d48:	df 91       	pop	r29
    2d4a:	cf 91       	pop	r28
    2d4c:	08 95       	ret

00002d4e <vTaskMissedYield>:
    2d4e:	cf 93       	push	r28
    2d50:	df 93       	push	r29
    2d52:	cd b7       	in	r28, 0x3d	; 61
    2d54:	de b7       	in	r29, 0x3e	; 62
    2d56:	81 e0       	ldi	r24, 0x01	; 1
    2d58:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    2d5c:	00 00       	nop
    2d5e:	df 91       	pop	r29
    2d60:	cf 91       	pop	r28
    2d62:	08 95       	ret

00002d64 <prvInitialiseTaskLists>:
    2d64:	cf 93       	push	r28
    2d66:	df 93       	push	r29
    2d68:	1f 92       	push	r1
    2d6a:	cd b7       	in	r28, 0x3d	; 61
    2d6c:	de b7       	in	r29, 0x3e	; 62
    2d6e:	19 82       	std	Y+1, r1	; 0x01
    2d70:	13 c0       	rjmp	.+38     	; 0x2d98 <prvInitialiseTaskLists+0x34>
    2d72:	89 81       	ldd	r24, Y+1	; 0x01
    2d74:	28 2f       	mov	r18, r24
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	c9 01       	movw	r24, r18
    2d7a:	88 0f       	add	r24, r24
    2d7c:	99 1f       	adc	r25, r25
    2d7e:	88 0f       	add	r24, r24
    2d80:	99 1f       	adc	r25, r25
    2d82:	88 0f       	add	r24, r24
    2d84:	99 1f       	adc	r25, r25
    2d86:	82 0f       	add	r24, r18
    2d88:	93 1f       	adc	r25, r19
    2d8a:	88 5c       	subi	r24, 0xC8	; 200
    2d8c:	97 4f       	sbci	r25, 0xF7	; 247
    2d8e:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2d92:	89 81       	ldd	r24, Y+1	; 0x01
    2d94:	8f 5f       	subi	r24, 0xFF	; 255
    2d96:	89 83       	std	Y+1, r24	; 0x01
    2d98:	89 81       	ldd	r24, Y+1	; 0x01
    2d9a:	84 30       	cpi	r24, 0x04	; 4
    2d9c:	50 f3       	brcs	.-44     	; 0x2d72 <prvInitialiseTaskLists+0xe>
    2d9e:	8c e5       	ldi	r24, 0x5C	; 92
    2da0:	98 e0       	ldi	r25, 0x08	; 8
    2da2:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2da6:	85 e6       	ldi	r24, 0x65	; 101
    2da8:	98 e0       	ldi	r25, 0x08	; 8
    2daa:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2dae:	82 e7       	ldi	r24, 0x72	; 114
    2db0:	98 e0       	ldi	r25, 0x08	; 8
    2db2:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2db6:	8b e7       	ldi	r24, 0x7B	; 123
    2db8:	98 e0       	ldi	r25, 0x08	; 8
    2dba:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2dbe:	85 e8       	ldi	r24, 0x85	; 133
    2dc0:	98 e0       	ldi	r25, 0x08	; 8
    2dc2:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    2dc6:	8c e5       	ldi	r24, 0x5C	; 92
    2dc8:	98 e0       	ldi	r25, 0x08	; 8
    2dca:	90 93 6f 08 	sts	0x086F, r25	; 0x80086f <pxDelayedTaskList+0x1>
    2dce:	80 93 6e 08 	sts	0x086E, r24	; 0x80086e <pxDelayedTaskList>
    2dd2:	85 e6       	ldi	r24, 0x65	; 101
    2dd4:	98 e0       	ldi	r25, 0x08	; 8
    2dd6:	90 93 71 08 	sts	0x0871, r25	; 0x800871 <pxOverflowDelayedTaskList+0x1>
    2dda:	80 93 70 08 	sts	0x0870, r24	; 0x800870 <pxOverflowDelayedTaskList>
    2dde:	00 00       	nop
    2de0:	0f 90       	pop	r0
    2de2:	df 91       	pop	r29
    2de4:	cf 91       	pop	r28
    2de6:	08 95       	ret

00002de8 <prvCheckTasksWaitingTermination>:
    2de8:	cf 93       	push	r28
    2dea:	df 93       	push	r29
    2dec:	1f 92       	push	r1
    2dee:	1f 92       	push	r1
    2df0:	cd b7       	in	r28, 0x3d	; 61
    2df2:	de b7       	in	r29, 0x3e	; 62
    2df4:	20 c0       	rjmp	.+64     	; 0x2e36 <prvCheckTasksWaitingTermination+0x4e>
    2df6:	0f b6       	in	r0, 0x3f	; 63
    2df8:	f8 94       	cli
    2dfa:	0f 92       	push	r0
    2dfc:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <xTasksWaitingTermination+0x5>
    2e00:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <xTasksWaitingTermination+0x6>
    2e04:	fc 01       	movw	r30, r24
    2e06:	86 81       	ldd	r24, Z+6	; 0x06
    2e08:	97 81       	ldd	r25, Z+7	; 0x07
    2e0a:	9a 83       	std	Y+2, r25	; 0x02
    2e0c:	89 83       	std	Y+1, r24	; 0x01
    2e0e:	89 81       	ldd	r24, Y+1	; 0x01
    2e10:	9a 81       	ldd	r25, Y+2	; 0x02
    2e12:	02 96       	adiw	r24, 0x02	; 2
    2e14:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    2e18:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <uxCurrentNumberOfTasks>
    2e1c:	81 50       	subi	r24, 0x01	; 1
    2e1e:	80 93 8e 08 	sts	0x088E, r24	; 0x80088e <uxCurrentNumberOfTasks>
    2e22:	80 91 84 08 	lds	r24, 0x0884	; 0x800884 <uxDeletedTasksWaitingCleanUp>
    2e26:	81 50       	subi	r24, 0x01	; 1
    2e28:	80 93 84 08 	sts	0x0884, r24	; 0x800884 <uxDeletedTasksWaitingCleanUp>
    2e2c:	0f 90       	pop	r0
    2e2e:	0f be       	out	0x3f, r0	; 63
    2e30:	89 81       	ldd	r24, Y+1	; 0x01
    2e32:	9a 81       	ldd	r25, Y+2	; 0x02
    2e34:	0a d0       	rcall	.+20     	; 0x2e4a <prvDeleteTCB>
    2e36:	80 91 84 08 	lds	r24, 0x0884	; 0x800884 <uxDeletedTasksWaitingCleanUp>
    2e3a:	88 23       	and	r24, r24
    2e3c:	e1 f6       	brne	.-72     	; 0x2df6 <prvCheckTasksWaitingTermination+0xe>
    2e3e:	00 00       	nop
    2e40:	0f 90       	pop	r0
    2e42:	0f 90       	pop	r0
    2e44:	df 91       	pop	r29
    2e46:	cf 91       	pop	r28
    2e48:	08 95       	ret

00002e4a <prvDeleteTCB>:
    2e4a:	cf 93       	push	r28
    2e4c:	df 93       	push	r29
    2e4e:	1f 92       	push	r1
    2e50:	1f 92       	push	r1
    2e52:	cd b7       	in	r28, 0x3d	; 61
    2e54:	de b7       	in	r29, 0x3e	; 62
    2e56:	9a 83       	std	Y+2, r25	; 0x02
    2e58:	89 83       	std	Y+1, r24	; 0x01
    2e5a:	89 81       	ldd	r24, Y+1	; 0x01
    2e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e5e:	fc 01       	movw	r30, r24
    2e60:	87 89       	ldd	r24, Z+23	; 0x17
    2e62:	90 8d       	ldd	r25, Z+24	; 0x18
    2e64:	0e 94 ae 01 	call	0x35c	; 0x35c <vPortFree>
    2e68:	89 81       	ldd	r24, Y+1	; 0x01
    2e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e6c:	0e 94 ae 01 	call	0x35c	; 0x35c <vPortFree>
    2e70:	00 00       	nop
    2e72:	0f 90       	pop	r0
    2e74:	0f 90       	pop	r0
    2e76:	df 91       	pop	r29
    2e78:	cf 91       	pop	r28
    2e7a:	08 95       	ret

00002e7c <prvResetNextTaskUnblockTime>:
    2e7c:	cf 93       	push	r28
    2e7e:	df 93       	push	r29
    2e80:	1f 92       	push	r1
    2e82:	1f 92       	push	r1
    2e84:	cd b7       	in	r28, 0x3d	; 61
    2e86:	de b7       	in	r29, 0x3e	; 62
    2e88:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    2e8c:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    2e90:	fc 01       	movw	r30, r24
    2e92:	80 81       	ld	r24, Z
    2e94:	88 23       	and	r24, r24
    2e96:	39 f4       	brne	.+14     	; 0x2ea6 <prvResetNextTaskUnblockTime+0x2a>
    2e98:	8f ef       	ldi	r24, 0xFF	; 255
    2e9a:	9f ef       	ldi	r25, 0xFF	; 255
    2e9c:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    2ea0:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    2ea4:	15 c0       	rjmp	.+42     	; 0x2ed0 <prvResetNextTaskUnblockTime+0x54>
    2ea6:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    2eaa:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    2eae:	fc 01       	movw	r30, r24
    2eb0:	85 81       	ldd	r24, Z+5	; 0x05
    2eb2:	96 81       	ldd	r25, Z+6	; 0x06
    2eb4:	fc 01       	movw	r30, r24
    2eb6:	86 81       	ldd	r24, Z+6	; 0x06
    2eb8:	97 81       	ldd	r25, Z+7	; 0x07
    2eba:	9a 83       	std	Y+2, r25	; 0x02
    2ebc:	89 83       	std	Y+1, r24	; 0x01
    2ebe:	89 81       	ldd	r24, Y+1	; 0x01
    2ec0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ec2:	fc 01       	movw	r30, r24
    2ec4:	82 81       	ldd	r24, Z+2	; 0x02
    2ec6:	93 81       	ldd	r25, Z+3	; 0x03
    2ec8:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    2ecc:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    2ed0:	00 00       	nop
    2ed2:	0f 90       	pop	r0
    2ed4:	0f 90       	pop	r0
    2ed6:	df 91       	pop	r29
    2ed8:	cf 91       	pop	r28
    2eda:	08 95       	ret

00002edc <xTaskGetCurrentTaskHandle>:
    2edc:	cf 93       	push	r28
    2ede:	df 93       	push	r29
    2ee0:	1f 92       	push	r1
    2ee2:	1f 92       	push	r1
    2ee4:	cd b7       	in	r28, 0x3d	; 61
    2ee6:	de b7       	in	r29, 0x3e	; 62
    2ee8:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2eec:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2ef0:	9a 83       	std	Y+2, r25	; 0x02
    2ef2:	89 83       	std	Y+1, r24	; 0x01
    2ef4:	89 81       	ldd	r24, Y+1	; 0x01
    2ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef8:	0f 90       	pop	r0
    2efa:	0f 90       	pop	r0
    2efc:	df 91       	pop	r29
    2efe:	cf 91       	pop	r28
    2f00:	08 95       	ret

00002f02 <xTaskGetSchedulerState>:
    2f02:	cf 93       	push	r28
    2f04:	df 93       	push	r29
    2f06:	1f 92       	push	r1
    2f08:	cd b7       	in	r28, 0x3d	; 61
    2f0a:	de b7       	in	r29, 0x3e	; 62
    2f0c:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <xSchedulerRunning>
    2f10:	88 23       	and	r24, r24
    2f12:	19 f4       	brne	.+6      	; 0x2f1a <xTaskGetSchedulerState+0x18>
    2f14:	81 e0       	ldi	r24, 0x01	; 1
    2f16:	89 83       	std	Y+1, r24	; 0x01
    2f18:	08 c0       	rjmp	.+16     	; 0x2f2a <xTaskGetSchedulerState+0x28>
    2f1a:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    2f1e:	88 23       	and	r24, r24
    2f20:	19 f4       	brne	.+6      	; 0x2f28 <xTaskGetSchedulerState+0x26>
    2f22:	82 e0       	ldi	r24, 0x02	; 2
    2f24:	89 83       	std	Y+1, r24	; 0x01
    2f26:	01 c0       	rjmp	.+2      	; 0x2f2a <xTaskGetSchedulerState+0x28>
    2f28:	19 82       	std	Y+1, r1	; 0x01
    2f2a:	89 81       	ldd	r24, Y+1	; 0x01
    2f2c:	0f 90       	pop	r0
    2f2e:	df 91       	pop	r29
    2f30:	cf 91       	pop	r28
    2f32:	08 95       	ret

00002f34 <xTaskPriorityInherit>:
    2f34:	cf 93       	push	r28
    2f36:	df 93       	push	r29
    2f38:	00 d0       	rcall	.+0      	; 0x2f3a <xTaskPriorityInherit+0x6>
    2f3a:	1f 92       	push	r1
    2f3c:	1f 92       	push	r1
    2f3e:	cd b7       	in	r28, 0x3d	; 61
    2f40:	de b7       	in	r29, 0x3e	; 62
    2f42:	9d 83       	std	Y+5, r25	; 0x05
    2f44:	8c 83       	std	Y+4, r24	; 0x04
    2f46:	8c 81       	ldd	r24, Y+4	; 0x04
    2f48:	9d 81       	ldd	r25, Y+5	; 0x05
    2f4a:	9b 83       	std	Y+3, r25	; 0x03
    2f4c:	8a 83       	std	Y+2, r24	; 0x02
    2f4e:	19 82       	std	Y+1, r1	; 0x01
    2f50:	8c 81       	ldd	r24, Y+4	; 0x04
    2f52:	9d 81       	ldd	r25, Y+5	; 0x05
    2f54:	89 2b       	or	r24, r25
    2f56:	09 f4       	brne	.+2      	; 0x2f5a <xTaskPriorityInherit+0x26>
    2f58:	90 c0       	rjmp	.+288    	; 0x307a <xTaskPriorityInherit+0x146>
    2f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f5c:	9b 81       	ldd	r25, Y+3	; 0x03
    2f5e:	fc 01       	movw	r30, r24
    2f60:	26 89       	ldd	r18, Z+22	; 0x16
    2f62:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2f66:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2f6a:	fc 01       	movw	r30, r24
    2f6c:	86 89       	ldd	r24, Z+22	; 0x16
    2f6e:	28 17       	cp	r18, r24
    2f70:	08 f0       	brcs	.+2      	; 0x2f74 <xTaskPriorityInherit+0x40>
    2f72:	75 c0       	rjmp	.+234    	; 0x305e <xTaskPriorityInherit+0x12a>
    2f74:	8a 81       	ldd	r24, Y+2	; 0x02
    2f76:	9b 81       	ldd	r25, Y+3	; 0x03
    2f78:	fc 01       	movw	r30, r24
    2f7a:	84 85       	ldd	r24, Z+12	; 0x0c
    2f7c:	95 85       	ldd	r25, Z+13	; 0x0d
    2f7e:	99 23       	and	r25, r25
    2f80:	8c f0       	brlt	.+34     	; 0x2fa4 <xTaskPriorityInherit+0x70>
    2f82:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2f86:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2f8a:	fc 01       	movw	r30, r24
    2f8c:	86 89       	ldd	r24, Z+22	; 0x16
    2f8e:	88 2f       	mov	r24, r24
    2f90:	90 e0       	ldi	r25, 0x00	; 0
    2f92:	24 e0       	ldi	r18, 0x04	; 4
    2f94:	30 e0       	ldi	r19, 0x00	; 0
    2f96:	28 1b       	sub	r18, r24
    2f98:	39 0b       	sbc	r19, r25
    2f9a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f9c:	9b 81       	ldd	r25, Y+3	; 0x03
    2f9e:	fc 01       	movw	r30, r24
    2fa0:	35 87       	std	Z+13, r19	; 0x0d
    2fa2:	24 87       	std	Z+12, r18	; 0x0c
    2fa4:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa6:	9b 81       	ldd	r25, Y+3	; 0x03
    2fa8:	fc 01       	movw	r30, r24
    2faa:	42 85       	ldd	r20, Z+10	; 0x0a
    2fac:	53 85       	ldd	r21, Z+11	; 0x0b
    2fae:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb0:	9b 81       	ldd	r25, Y+3	; 0x03
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	86 89       	ldd	r24, Z+22	; 0x16
    2fb6:	28 2f       	mov	r18, r24
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	c9 01       	movw	r24, r18
    2fbc:	88 0f       	add	r24, r24
    2fbe:	99 1f       	adc	r25, r25
    2fc0:	88 0f       	add	r24, r24
    2fc2:	99 1f       	adc	r25, r25
    2fc4:	88 0f       	add	r24, r24
    2fc6:	99 1f       	adc	r25, r25
    2fc8:	82 0f       	add	r24, r18
    2fca:	93 1f       	adc	r25, r19
    2fcc:	88 5c       	subi	r24, 0xC8	; 200
    2fce:	97 4f       	sbci	r25, 0xF7	; 247
    2fd0:	48 17       	cp	r20, r24
    2fd2:	59 07       	cpc	r21, r25
    2fd4:	b9 f5       	brne	.+110    	; 0x3044 <xTaskPriorityInherit+0x110>
    2fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fd8:	9b 81       	ldd	r25, Y+3	; 0x03
    2fda:	02 96       	adiw	r24, 0x02	; 2
    2fdc:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    2fe0:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    2fe4:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    2fe8:	fc 01       	movw	r30, r24
    2fea:	26 89       	ldd	r18, Z+22	; 0x16
    2fec:	8a 81       	ldd	r24, Y+2	; 0x02
    2fee:	9b 81       	ldd	r25, Y+3	; 0x03
    2ff0:	fc 01       	movw	r30, r24
    2ff2:	26 8b       	std	Z+22, r18	; 0x16
    2ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ff8:	fc 01       	movw	r30, r24
    2ffa:	96 89       	ldd	r25, Z+22	; 0x16
    2ffc:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    3000:	89 17       	cp	r24, r25
    3002:	30 f4       	brcc	.+12     	; 0x3010 <xTaskPriorityInherit+0xdc>
    3004:	8a 81       	ldd	r24, Y+2	; 0x02
    3006:	9b 81       	ldd	r25, Y+3	; 0x03
    3008:	fc 01       	movw	r30, r24
    300a:	86 89       	ldd	r24, Z+22	; 0x16
    300c:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    3010:	8a 81       	ldd	r24, Y+2	; 0x02
    3012:	9b 81       	ldd	r25, Y+3	; 0x03
    3014:	ac 01       	movw	r20, r24
    3016:	4e 5f       	subi	r20, 0xFE	; 254
    3018:	5f 4f       	sbci	r21, 0xFF	; 255
    301a:	8a 81       	ldd	r24, Y+2	; 0x02
    301c:	9b 81       	ldd	r25, Y+3	; 0x03
    301e:	fc 01       	movw	r30, r24
    3020:	86 89       	ldd	r24, Z+22	; 0x16
    3022:	28 2f       	mov	r18, r24
    3024:	30 e0       	ldi	r19, 0x00	; 0
    3026:	c9 01       	movw	r24, r18
    3028:	88 0f       	add	r24, r24
    302a:	99 1f       	adc	r25, r25
    302c:	88 0f       	add	r24, r24
    302e:	99 1f       	adc	r25, r25
    3030:	88 0f       	add	r24, r24
    3032:	99 1f       	adc	r25, r25
    3034:	82 0f       	add	r24, r18
    3036:	93 1f       	adc	r25, r19
    3038:	88 5c       	subi	r24, 0xC8	; 200
    303a:	97 4f       	sbci	r25, 0xF7	; 247
    303c:	ba 01       	movw	r22, r20
    303e:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    3042:	0a c0       	rjmp	.+20     	; 0x3058 <xTaskPriorityInherit+0x124>
    3044:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    3048:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    304c:	fc 01       	movw	r30, r24
    304e:	26 89       	ldd	r18, Z+22	; 0x16
    3050:	8a 81       	ldd	r24, Y+2	; 0x02
    3052:	9b 81       	ldd	r25, Y+3	; 0x03
    3054:	fc 01       	movw	r30, r24
    3056:	26 8b       	std	Z+22, r18	; 0x16
    3058:	81 e0       	ldi	r24, 0x01	; 1
    305a:	89 83       	std	Y+1, r24	; 0x01
    305c:	0e c0       	rjmp	.+28     	; 0x307a <xTaskPriorityInherit+0x146>
    305e:	8a 81       	ldd	r24, Y+2	; 0x02
    3060:	9b 81       	ldd	r25, Y+3	; 0x03
    3062:	fc 01       	movw	r30, r24
    3064:	23 a1       	ldd	r18, Z+35	; 0x23
    3066:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    306a:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    306e:	fc 01       	movw	r30, r24
    3070:	86 89       	ldd	r24, Z+22	; 0x16
    3072:	28 17       	cp	r18, r24
    3074:	10 f4       	brcc	.+4      	; 0x307a <xTaskPriorityInherit+0x146>
    3076:	81 e0       	ldi	r24, 0x01	; 1
    3078:	89 83       	std	Y+1, r24	; 0x01
    307a:	89 81       	ldd	r24, Y+1	; 0x01
    307c:	0f 90       	pop	r0
    307e:	0f 90       	pop	r0
    3080:	0f 90       	pop	r0
    3082:	0f 90       	pop	r0
    3084:	0f 90       	pop	r0
    3086:	df 91       	pop	r29
    3088:	cf 91       	pop	r28
    308a:	08 95       	ret

0000308c <xTaskPriorityDisinherit>:
    308c:	cf 93       	push	r28
    308e:	df 93       	push	r29
    3090:	00 d0       	rcall	.+0      	; 0x3092 <xTaskPriorityDisinherit+0x6>
    3092:	1f 92       	push	r1
    3094:	1f 92       	push	r1
    3096:	cd b7       	in	r28, 0x3d	; 61
    3098:	de b7       	in	r29, 0x3e	; 62
    309a:	9d 83       	std	Y+5, r25	; 0x05
    309c:	8c 83       	std	Y+4, r24	; 0x04
    309e:	8c 81       	ldd	r24, Y+4	; 0x04
    30a0:	9d 81       	ldd	r25, Y+5	; 0x05
    30a2:	9b 83       	std	Y+3, r25	; 0x03
    30a4:	8a 83       	std	Y+2, r24	; 0x02
    30a6:	19 82       	std	Y+1, r1	; 0x01
    30a8:	8c 81       	ldd	r24, Y+4	; 0x04
    30aa:	9d 81       	ldd	r25, Y+5	; 0x05
    30ac:	89 2b       	or	r24, r25
    30ae:	09 f4       	brne	.+2      	; 0x30b2 <xTaskPriorityDisinherit+0x26>
    30b0:	61 c0       	rjmp	.+194    	; 0x3174 <xTaskPriorityDisinherit+0xe8>
    30b2:	8a 81       	ldd	r24, Y+2	; 0x02
    30b4:	9b 81       	ldd	r25, Y+3	; 0x03
    30b6:	fc 01       	movw	r30, r24
    30b8:	84 a1       	ldd	r24, Z+36	; 0x24
    30ba:	2f ef       	ldi	r18, 0xFF	; 255
    30bc:	28 0f       	add	r18, r24
    30be:	8a 81       	ldd	r24, Y+2	; 0x02
    30c0:	9b 81       	ldd	r25, Y+3	; 0x03
    30c2:	fc 01       	movw	r30, r24
    30c4:	24 a3       	std	Z+36, r18	; 0x24
    30c6:	8a 81       	ldd	r24, Y+2	; 0x02
    30c8:	9b 81       	ldd	r25, Y+3	; 0x03
    30ca:	fc 01       	movw	r30, r24
    30cc:	26 89       	ldd	r18, Z+22	; 0x16
    30ce:	8a 81       	ldd	r24, Y+2	; 0x02
    30d0:	9b 81       	ldd	r25, Y+3	; 0x03
    30d2:	fc 01       	movw	r30, r24
    30d4:	83 a1       	ldd	r24, Z+35	; 0x23
    30d6:	28 17       	cp	r18, r24
    30d8:	09 f4       	brne	.+2      	; 0x30dc <xTaskPriorityDisinherit+0x50>
    30da:	4c c0       	rjmp	.+152    	; 0x3174 <xTaskPriorityDisinherit+0xe8>
    30dc:	8a 81       	ldd	r24, Y+2	; 0x02
    30de:	9b 81       	ldd	r25, Y+3	; 0x03
    30e0:	fc 01       	movw	r30, r24
    30e2:	84 a1       	ldd	r24, Z+36	; 0x24
    30e4:	88 23       	and	r24, r24
    30e6:	09 f0       	breq	.+2      	; 0x30ea <xTaskPriorityDisinherit+0x5e>
    30e8:	45 c0       	rjmp	.+138    	; 0x3174 <xTaskPriorityDisinherit+0xe8>
    30ea:	8a 81       	ldd	r24, Y+2	; 0x02
    30ec:	9b 81       	ldd	r25, Y+3	; 0x03
    30ee:	02 96       	adiw	r24, 0x02	; 2
    30f0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    30f4:	8a 81       	ldd	r24, Y+2	; 0x02
    30f6:	9b 81       	ldd	r25, Y+3	; 0x03
    30f8:	fc 01       	movw	r30, r24
    30fa:	23 a1       	ldd	r18, Z+35	; 0x23
    30fc:	8a 81       	ldd	r24, Y+2	; 0x02
    30fe:	9b 81       	ldd	r25, Y+3	; 0x03
    3100:	fc 01       	movw	r30, r24
    3102:	26 8b       	std	Z+22, r18	; 0x16
    3104:	8a 81       	ldd	r24, Y+2	; 0x02
    3106:	9b 81       	ldd	r25, Y+3	; 0x03
    3108:	fc 01       	movw	r30, r24
    310a:	86 89       	ldd	r24, Z+22	; 0x16
    310c:	88 2f       	mov	r24, r24
    310e:	90 e0       	ldi	r25, 0x00	; 0
    3110:	24 e0       	ldi	r18, 0x04	; 4
    3112:	30 e0       	ldi	r19, 0x00	; 0
    3114:	28 1b       	sub	r18, r24
    3116:	39 0b       	sbc	r19, r25
    3118:	8a 81       	ldd	r24, Y+2	; 0x02
    311a:	9b 81       	ldd	r25, Y+3	; 0x03
    311c:	fc 01       	movw	r30, r24
    311e:	35 87       	std	Z+13, r19	; 0x0d
    3120:	24 87       	std	Z+12, r18	; 0x0c
    3122:	8a 81       	ldd	r24, Y+2	; 0x02
    3124:	9b 81       	ldd	r25, Y+3	; 0x03
    3126:	fc 01       	movw	r30, r24
    3128:	96 89       	ldd	r25, Z+22	; 0x16
    312a:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    312e:	89 17       	cp	r24, r25
    3130:	30 f4       	brcc	.+12     	; 0x313e <xTaskPriorityDisinherit+0xb2>
    3132:	8a 81       	ldd	r24, Y+2	; 0x02
    3134:	9b 81       	ldd	r25, Y+3	; 0x03
    3136:	fc 01       	movw	r30, r24
    3138:	86 89       	ldd	r24, Z+22	; 0x16
    313a:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    313e:	8a 81       	ldd	r24, Y+2	; 0x02
    3140:	9b 81       	ldd	r25, Y+3	; 0x03
    3142:	ac 01       	movw	r20, r24
    3144:	4e 5f       	subi	r20, 0xFE	; 254
    3146:	5f 4f       	sbci	r21, 0xFF	; 255
    3148:	8a 81       	ldd	r24, Y+2	; 0x02
    314a:	9b 81       	ldd	r25, Y+3	; 0x03
    314c:	fc 01       	movw	r30, r24
    314e:	86 89       	ldd	r24, Z+22	; 0x16
    3150:	28 2f       	mov	r18, r24
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	c9 01       	movw	r24, r18
    3156:	88 0f       	add	r24, r24
    3158:	99 1f       	adc	r25, r25
    315a:	88 0f       	add	r24, r24
    315c:	99 1f       	adc	r25, r25
    315e:	88 0f       	add	r24, r24
    3160:	99 1f       	adc	r25, r25
    3162:	82 0f       	add	r24, r18
    3164:	93 1f       	adc	r25, r19
    3166:	88 5c       	subi	r24, 0xC8	; 200
    3168:	97 4f       	sbci	r25, 0xF7	; 247
    316a:	ba 01       	movw	r22, r20
    316c:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    3170:	81 e0       	ldi	r24, 0x01	; 1
    3172:	89 83       	std	Y+1, r24	; 0x01
    3174:	89 81       	ldd	r24, Y+1	; 0x01
    3176:	0f 90       	pop	r0
    3178:	0f 90       	pop	r0
    317a:	0f 90       	pop	r0
    317c:	0f 90       	pop	r0
    317e:	0f 90       	pop	r0
    3180:	df 91       	pop	r29
    3182:	cf 91       	pop	r28
    3184:	08 95       	ret

00003186 <vTaskPriorityDisinheritAfterTimeout>:
    3186:	cf 93       	push	r28
    3188:	df 93       	push	r29
    318a:	cd b7       	in	r28, 0x3d	; 61
    318c:	de b7       	in	r29, 0x3e	; 62
    318e:	28 97       	sbiw	r28, 0x08	; 8
    3190:	0f b6       	in	r0, 0x3f	; 63
    3192:	f8 94       	cli
    3194:	de bf       	out	0x3e, r29	; 62
    3196:	0f be       	out	0x3f, r0	; 63
    3198:	cd bf       	out	0x3d, r28	; 61
    319a:	9f 83       	std	Y+7, r25	; 0x07
    319c:	8e 83       	std	Y+6, r24	; 0x06
    319e:	68 87       	std	Y+8, r22	; 0x08
    31a0:	8e 81       	ldd	r24, Y+6	; 0x06
    31a2:	9f 81       	ldd	r25, Y+7	; 0x07
    31a4:	9b 83       	std	Y+3, r25	; 0x03
    31a6:	8a 83       	std	Y+2, r24	; 0x02
    31a8:	81 e0       	ldi	r24, 0x01	; 1
    31aa:	8c 83       	std	Y+4, r24	; 0x04
    31ac:	8e 81       	ldd	r24, Y+6	; 0x06
    31ae:	9f 81       	ldd	r25, Y+7	; 0x07
    31b0:	89 2b       	or	r24, r25
    31b2:	09 f4       	brne	.+2      	; 0x31b6 <vTaskPriorityDisinheritAfterTimeout+0x30>
    31b4:	7e c0       	rjmp	.+252    	; 0x32b2 <vTaskPriorityDisinheritAfterTimeout+0x12c>
    31b6:	8a 81       	ldd	r24, Y+2	; 0x02
    31b8:	9b 81       	ldd	r25, Y+3	; 0x03
    31ba:	fc 01       	movw	r30, r24
    31bc:	93 a1       	ldd	r25, Z+35	; 0x23
    31be:	88 85       	ldd	r24, Y+8	; 0x08
    31c0:	98 17       	cp	r25, r24
    31c2:	18 f4       	brcc	.+6      	; 0x31ca <vTaskPriorityDisinheritAfterTimeout+0x44>
    31c4:	88 85       	ldd	r24, Y+8	; 0x08
    31c6:	89 83       	std	Y+1, r24	; 0x01
    31c8:	05 c0       	rjmp	.+10     	; 0x31d4 <vTaskPriorityDisinheritAfterTimeout+0x4e>
    31ca:	8a 81       	ldd	r24, Y+2	; 0x02
    31cc:	9b 81       	ldd	r25, Y+3	; 0x03
    31ce:	fc 01       	movw	r30, r24
    31d0:	83 a1       	ldd	r24, Z+35	; 0x23
    31d2:	89 83       	std	Y+1, r24	; 0x01
    31d4:	8a 81       	ldd	r24, Y+2	; 0x02
    31d6:	9b 81       	ldd	r25, Y+3	; 0x03
    31d8:	fc 01       	movw	r30, r24
    31da:	96 89       	ldd	r25, Z+22	; 0x16
    31dc:	89 81       	ldd	r24, Y+1	; 0x01
    31de:	98 17       	cp	r25, r24
    31e0:	09 f4       	brne	.+2      	; 0x31e4 <vTaskPriorityDisinheritAfterTimeout+0x5e>
    31e2:	67 c0       	rjmp	.+206    	; 0x32b2 <vTaskPriorityDisinheritAfterTimeout+0x12c>
    31e4:	8a 81       	ldd	r24, Y+2	; 0x02
    31e6:	9b 81       	ldd	r25, Y+3	; 0x03
    31e8:	fc 01       	movw	r30, r24
    31ea:	94 a1       	ldd	r25, Z+36	; 0x24
    31ec:	8c 81       	ldd	r24, Y+4	; 0x04
    31ee:	98 17       	cp	r25, r24
    31f0:	09 f0       	breq	.+2      	; 0x31f4 <vTaskPriorityDisinheritAfterTimeout+0x6e>
    31f2:	5f c0       	rjmp	.+190    	; 0x32b2 <vTaskPriorityDisinheritAfterTimeout+0x12c>
    31f4:	8a 81       	ldd	r24, Y+2	; 0x02
    31f6:	9b 81       	ldd	r25, Y+3	; 0x03
    31f8:	fc 01       	movw	r30, r24
    31fa:	86 89       	ldd	r24, Z+22	; 0x16
    31fc:	8d 83       	std	Y+5, r24	; 0x05
    31fe:	8a 81       	ldd	r24, Y+2	; 0x02
    3200:	9b 81       	ldd	r25, Y+3	; 0x03
    3202:	29 81       	ldd	r18, Y+1	; 0x01
    3204:	fc 01       	movw	r30, r24
    3206:	26 8b       	std	Z+22, r18	; 0x16
    3208:	8a 81       	ldd	r24, Y+2	; 0x02
    320a:	9b 81       	ldd	r25, Y+3	; 0x03
    320c:	fc 01       	movw	r30, r24
    320e:	84 85       	ldd	r24, Z+12	; 0x0c
    3210:	95 85       	ldd	r25, Z+13	; 0x0d
    3212:	99 23       	and	r25, r25
    3214:	64 f0       	brlt	.+24     	; 0x322e <vTaskPriorityDisinheritAfterTimeout+0xa8>
    3216:	89 81       	ldd	r24, Y+1	; 0x01
    3218:	88 2f       	mov	r24, r24
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	24 e0       	ldi	r18, 0x04	; 4
    321e:	30 e0       	ldi	r19, 0x00	; 0
    3220:	28 1b       	sub	r18, r24
    3222:	39 0b       	sbc	r19, r25
    3224:	8a 81       	ldd	r24, Y+2	; 0x02
    3226:	9b 81       	ldd	r25, Y+3	; 0x03
    3228:	fc 01       	movw	r30, r24
    322a:	35 87       	std	Z+13, r19	; 0x0d
    322c:	24 87       	std	Z+12, r18	; 0x0c
    322e:	8a 81       	ldd	r24, Y+2	; 0x02
    3230:	9b 81       	ldd	r25, Y+3	; 0x03
    3232:	fc 01       	movw	r30, r24
    3234:	42 85       	ldd	r20, Z+10	; 0x0a
    3236:	53 85       	ldd	r21, Z+11	; 0x0b
    3238:	8d 81       	ldd	r24, Y+5	; 0x05
    323a:	28 2f       	mov	r18, r24
    323c:	30 e0       	ldi	r19, 0x00	; 0
    323e:	c9 01       	movw	r24, r18
    3240:	88 0f       	add	r24, r24
    3242:	99 1f       	adc	r25, r25
    3244:	88 0f       	add	r24, r24
    3246:	99 1f       	adc	r25, r25
    3248:	88 0f       	add	r24, r24
    324a:	99 1f       	adc	r25, r25
    324c:	82 0f       	add	r24, r18
    324e:	93 1f       	adc	r25, r19
    3250:	88 5c       	subi	r24, 0xC8	; 200
    3252:	97 4f       	sbci	r25, 0xF7	; 247
    3254:	48 17       	cp	r20, r24
    3256:	59 07       	cpc	r21, r25
    3258:	61 f5       	brne	.+88     	; 0x32b2 <vTaskPriorityDisinheritAfterTimeout+0x12c>
    325a:	8a 81       	ldd	r24, Y+2	; 0x02
    325c:	9b 81       	ldd	r25, Y+3	; 0x03
    325e:	02 96       	adiw	r24, 0x02	; 2
    3260:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3264:	8a 81       	ldd	r24, Y+2	; 0x02
    3266:	9b 81       	ldd	r25, Y+3	; 0x03
    3268:	fc 01       	movw	r30, r24
    326a:	96 89       	ldd	r25, Z+22	; 0x16
    326c:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    3270:	89 17       	cp	r24, r25
    3272:	30 f4       	brcc	.+12     	; 0x3280 <vTaskPriorityDisinheritAfterTimeout+0xfa>
    3274:	8a 81       	ldd	r24, Y+2	; 0x02
    3276:	9b 81       	ldd	r25, Y+3	; 0x03
    3278:	fc 01       	movw	r30, r24
    327a:	86 89       	ldd	r24, Z+22	; 0x16
    327c:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    3280:	8a 81       	ldd	r24, Y+2	; 0x02
    3282:	9b 81       	ldd	r25, Y+3	; 0x03
    3284:	ac 01       	movw	r20, r24
    3286:	4e 5f       	subi	r20, 0xFE	; 254
    3288:	5f 4f       	sbci	r21, 0xFF	; 255
    328a:	8a 81       	ldd	r24, Y+2	; 0x02
    328c:	9b 81       	ldd	r25, Y+3	; 0x03
    328e:	fc 01       	movw	r30, r24
    3290:	86 89       	ldd	r24, Z+22	; 0x16
    3292:	28 2f       	mov	r18, r24
    3294:	30 e0       	ldi	r19, 0x00	; 0
    3296:	c9 01       	movw	r24, r18
    3298:	88 0f       	add	r24, r24
    329a:	99 1f       	adc	r25, r25
    329c:	88 0f       	add	r24, r24
    329e:	99 1f       	adc	r25, r25
    32a0:	88 0f       	add	r24, r24
    32a2:	99 1f       	adc	r25, r25
    32a4:	82 0f       	add	r24, r18
    32a6:	93 1f       	adc	r25, r19
    32a8:	88 5c       	subi	r24, 0xC8	; 200
    32aa:	97 4f       	sbci	r25, 0xF7	; 247
    32ac:	ba 01       	movw	r22, r20
    32ae:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    32b2:	00 00       	nop
    32b4:	28 96       	adiw	r28, 0x08	; 8
    32b6:	0f b6       	in	r0, 0x3f	; 63
    32b8:	f8 94       	cli
    32ba:	de bf       	out	0x3e, r29	; 62
    32bc:	0f be       	out	0x3f, r0	; 63
    32be:	cd bf       	out	0x3d, r28	; 61
    32c0:	df 91       	pop	r29
    32c2:	cf 91       	pop	r28
    32c4:	08 95       	ret

000032c6 <pvTaskIncrementMutexHeldCount>:
    32c6:	cf 93       	push	r28
    32c8:	df 93       	push	r29
    32ca:	cd b7       	in	r28, 0x3d	; 61
    32cc:	de b7       	in	r29, 0x3e	; 62
    32ce:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    32d2:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    32d6:	89 2b       	or	r24, r25
    32d8:	49 f0       	breq	.+18     	; 0x32ec <pvTaskIncrementMutexHeldCount+0x26>
    32da:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    32de:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    32e2:	fc 01       	movw	r30, r24
    32e4:	24 a1       	ldd	r18, Z+36	; 0x24
    32e6:	2f 5f       	subi	r18, 0xFF	; 255
    32e8:	fc 01       	movw	r30, r24
    32ea:	24 a3       	std	Z+36, r18	; 0x24
    32ec:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    32f0:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    32f4:	df 91       	pop	r29
    32f6:	cf 91       	pop	r28
    32f8:	08 95       	ret

000032fa <xTaskNotifyWait>:
    32fa:	ef 92       	push	r14
    32fc:	ff 92       	push	r15
    32fe:	0f 93       	push	r16
    3300:	1f 93       	push	r17
    3302:	cf 93       	push	r28
    3304:	df 93       	push	r29
    3306:	cd b7       	in	r28, 0x3d	; 61
    3308:	de b7       	in	r29, 0x3e	; 62
    330a:	2d 97       	sbiw	r28, 0x0d	; 13
    330c:	0f b6       	in	r0, 0x3f	; 63
    330e:	f8 94       	cli
    3310:	de bf       	out	0x3e, r29	; 62
    3312:	0f be       	out	0x3f, r0	; 63
    3314:	cd bf       	out	0x3d, r28	; 61
    3316:	6a 83       	std	Y+2, r22	; 0x02
    3318:	7b 83       	std	Y+3, r23	; 0x03
    331a:	8c 83       	std	Y+4, r24	; 0x04
    331c:	9d 83       	std	Y+5, r25	; 0x05
    331e:	2e 83       	std	Y+6, r18	; 0x06
    3320:	3f 83       	std	Y+7, r19	; 0x07
    3322:	48 87       	std	Y+8, r20	; 0x08
    3324:	59 87       	std	Y+9, r21	; 0x09
    3326:	1b 87       	std	Y+11, r17	; 0x0b
    3328:	0a 87       	std	Y+10, r16	; 0x0a
    332a:	fd 86       	std	Y+13, r15	; 0x0d
    332c:	ec 86       	std	Y+12, r14	; 0x0c
    332e:	0f b6       	in	r0, 0x3f	; 63
    3330:	f8 94       	cli
    3332:	0f 92       	push	r0
    3334:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    3338:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    333c:	fc 01       	movw	r30, r24
    333e:	83 a5       	ldd	r24, Z+43	; 0x2b
    3340:	82 30       	cpi	r24, 0x02	; 2
    3342:	59 f1       	breq	.+86     	; 0x339a <xTaskNotifyWait+0xa0>
    3344:	60 91 36 08 	lds	r22, 0x0836	; 0x800836 <__data_end>
    3348:	70 91 37 08 	lds	r23, 0x0837	; 0x800837 <__data_end+0x1>
    334c:	fb 01       	movw	r30, r22
    334e:	27 a1       	ldd	r18, Z+39	; 0x27
    3350:	30 a5       	ldd	r19, Z+40	; 0x28
    3352:	41 a5       	ldd	r20, Z+41	; 0x29
    3354:	52 a5       	ldd	r21, Z+42	; 0x2a
    3356:	8a 81       	ldd	r24, Y+2	; 0x02
    3358:	9b 81       	ldd	r25, Y+3	; 0x03
    335a:	ac 81       	ldd	r26, Y+4	; 0x04
    335c:	bd 81       	ldd	r27, Y+5	; 0x05
    335e:	80 95       	com	r24
    3360:	90 95       	com	r25
    3362:	a0 95       	com	r26
    3364:	b0 95       	com	r27
    3366:	82 23       	and	r24, r18
    3368:	93 23       	and	r25, r19
    336a:	a4 23       	and	r26, r20
    336c:	b5 23       	and	r27, r21
    336e:	fb 01       	movw	r30, r22
    3370:	87 a3       	std	Z+39, r24	; 0x27
    3372:	90 a7       	std	Z+40, r25	; 0x28
    3374:	a1 a7       	std	Z+41, r26	; 0x29
    3376:	b2 a7       	std	Z+42, r27	; 0x2a
    3378:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    337c:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    3380:	21 e0       	ldi	r18, 0x01	; 1
    3382:	fc 01       	movw	r30, r24
    3384:	23 a7       	std	Z+43, r18	; 0x2b
    3386:	8c 85       	ldd	r24, Y+12	; 0x0c
    3388:	9d 85       	ldd	r25, Y+13	; 0x0d
    338a:	89 2b       	or	r24, r25
    338c:	31 f0       	breq	.+12     	; 0x339a <xTaskNotifyWait+0xa0>
    338e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3390:	9d 85       	ldd	r25, Y+13	; 0x0d
    3392:	61 e0       	ldi	r22, 0x01	; 1
    3394:	65 d2       	rcall	.+1226   	; 0x3860 <prvAddCurrentTaskToDelayedList>
    3396:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    339a:	0f 90       	pop	r0
    339c:	0f be       	out	0x3f, r0	; 63
    339e:	0f b6       	in	r0, 0x3f	; 63
    33a0:	f8 94       	cli
    33a2:	0f 92       	push	r0
    33a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    33a6:	9b 85       	ldd	r25, Y+11	; 0x0b
    33a8:	89 2b       	or	r24, r25
    33aa:	81 f0       	breq	.+32     	; 0x33cc <xTaskNotifyWait+0xd2>
    33ac:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    33b0:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    33b4:	fc 01       	movw	r30, r24
    33b6:	87 a1       	ldd	r24, Z+39	; 0x27
    33b8:	90 a5       	ldd	r25, Z+40	; 0x28
    33ba:	a1 a5       	ldd	r26, Z+41	; 0x29
    33bc:	b2 a5       	ldd	r27, Z+42	; 0x2a
    33be:	2a 85       	ldd	r18, Y+10	; 0x0a
    33c0:	3b 85       	ldd	r19, Y+11	; 0x0b
    33c2:	f9 01       	movw	r30, r18
    33c4:	80 83       	st	Z, r24
    33c6:	91 83       	std	Z+1, r25	; 0x01
    33c8:	a2 83       	std	Z+2, r26	; 0x02
    33ca:	b3 83       	std	Z+3, r27	; 0x03
    33cc:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    33d0:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    33d4:	fc 01       	movw	r30, r24
    33d6:	83 a5       	ldd	r24, Z+43	; 0x2b
    33d8:	82 30       	cpi	r24, 0x02	; 2
    33da:	11 f0       	breq	.+4      	; 0x33e0 <xTaskNotifyWait+0xe6>
    33dc:	19 82       	std	Y+1, r1	; 0x01
    33de:	1c c0       	rjmp	.+56     	; 0x3418 <xTaskNotifyWait+0x11e>
    33e0:	60 91 36 08 	lds	r22, 0x0836	; 0x800836 <__data_end>
    33e4:	70 91 37 08 	lds	r23, 0x0837	; 0x800837 <__data_end+0x1>
    33e8:	fb 01       	movw	r30, r22
    33ea:	27 a1       	ldd	r18, Z+39	; 0x27
    33ec:	30 a5       	ldd	r19, Z+40	; 0x28
    33ee:	41 a5       	ldd	r20, Z+41	; 0x29
    33f0:	52 a5       	ldd	r21, Z+42	; 0x2a
    33f2:	8e 81       	ldd	r24, Y+6	; 0x06
    33f4:	9f 81       	ldd	r25, Y+7	; 0x07
    33f6:	a8 85       	ldd	r26, Y+8	; 0x08
    33f8:	b9 85       	ldd	r27, Y+9	; 0x09
    33fa:	80 95       	com	r24
    33fc:	90 95       	com	r25
    33fe:	a0 95       	com	r26
    3400:	b0 95       	com	r27
    3402:	82 23       	and	r24, r18
    3404:	93 23       	and	r25, r19
    3406:	a4 23       	and	r26, r20
    3408:	b5 23       	and	r27, r21
    340a:	fb 01       	movw	r30, r22
    340c:	87 a3       	std	Z+39, r24	; 0x27
    340e:	90 a7       	std	Z+40, r25	; 0x28
    3410:	a1 a7       	std	Z+41, r26	; 0x29
    3412:	b2 a7       	std	Z+42, r27	; 0x2a
    3414:	81 e0       	ldi	r24, 0x01	; 1
    3416:	89 83       	std	Y+1, r24	; 0x01
    3418:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    341c:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    3420:	fc 01       	movw	r30, r24
    3422:	13 a6       	std	Z+43, r1	; 0x2b
    3424:	0f 90       	pop	r0
    3426:	0f be       	out	0x3f, r0	; 63
    3428:	89 81       	ldd	r24, Y+1	; 0x01
    342a:	2d 96       	adiw	r28, 0x0d	; 13
    342c:	0f b6       	in	r0, 0x3f	; 63
    342e:	f8 94       	cli
    3430:	de bf       	out	0x3e, r29	; 62
    3432:	0f be       	out	0x3f, r0	; 63
    3434:	cd bf       	out	0x3d, r28	; 61
    3436:	df 91       	pop	r29
    3438:	cf 91       	pop	r28
    343a:	1f 91       	pop	r17
    343c:	0f 91       	pop	r16
    343e:	ff 90       	pop	r15
    3440:	ef 90       	pop	r14
    3442:	08 95       	ret

00003444 <xTaskGenericNotify>:
    3444:	0f 93       	push	r16
    3446:	1f 93       	push	r17
    3448:	cf 93       	push	r28
    344a:	df 93       	push	r29
    344c:	cd b7       	in	r28, 0x3d	; 61
    344e:	de b7       	in	r29, 0x3e	; 62
    3450:	2d 97       	sbiw	r28, 0x0d	; 13
    3452:	0f b6       	in	r0, 0x3f	; 63
    3454:	f8 94       	cli
    3456:	de bf       	out	0x3e, r29	; 62
    3458:	0f be       	out	0x3f, r0	; 63
    345a:	cd bf       	out	0x3d, r28	; 61
    345c:	9e 83       	std	Y+6, r25	; 0x06
    345e:	8d 83       	std	Y+5, r24	; 0x05
    3460:	4f 83       	std	Y+7, r20	; 0x07
    3462:	58 87       	std	Y+8, r21	; 0x08
    3464:	69 87       	std	Y+9, r22	; 0x09
    3466:	7a 87       	std	Y+10, r23	; 0x0a
    3468:	2b 87       	std	Y+11, r18	; 0x0b
    346a:	1d 87       	std	Y+13, r17	; 0x0d
    346c:	0c 87       	std	Y+12, r16	; 0x0c
    346e:	81 e0       	ldi	r24, 0x01	; 1
    3470:	89 83       	std	Y+1, r24	; 0x01
    3472:	8d 81       	ldd	r24, Y+5	; 0x05
    3474:	9e 81       	ldd	r25, Y+6	; 0x06
    3476:	9b 83       	std	Y+3, r25	; 0x03
    3478:	8a 83       	std	Y+2, r24	; 0x02
    347a:	0f b6       	in	r0, 0x3f	; 63
    347c:	f8 94       	cli
    347e:	0f 92       	push	r0
    3480:	8c 85       	ldd	r24, Y+12	; 0x0c
    3482:	9d 85       	ldd	r25, Y+13	; 0x0d
    3484:	89 2b       	or	r24, r25
    3486:	71 f0       	breq	.+28     	; 0x34a4 <xTaskGenericNotify+0x60>
    3488:	8a 81       	ldd	r24, Y+2	; 0x02
    348a:	9b 81       	ldd	r25, Y+3	; 0x03
    348c:	fc 01       	movw	r30, r24
    348e:	87 a1       	ldd	r24, Z+39	; 0x27
    3490:	90 a5       	ldd	r25, Z+40	; 0x28
    3492:	a1 a5       	ldd	r26, Z+41	; 0x29
    3494:	b2 a5       	ldd	r27, Z+42	; 0x2a
    3496:	2c 85       	ldd	r18, Y+12	; 0x0c
    3498:	3d 85       	ldd	r19, Y+13	; 0x0d
    349a:	f9 01       	movw	r30, r18
    349c:	80 83       	st	Z, r24
    349e:	91 83       	std	Z+1, r25	; 0x01
    34a0:	a2 83       	std	Z+2, r26	; 0x02
    34a2:	b3 83       	std	Z+3, r27	; 0x03
    34a4:	8a 81       	ldd	r24, Y+2	; 0x02
    34a6:	9b 81       	ldd	r25, Y+3	; 0x03
    34a8:	fc 01       	movw	r30, r24
    34aa:	83 a5       	ldd	r24, Z+43	; 0x2b
    34ac:	8c 83       	std	Y+4, r24	; 0x04
    34ae:	8a 81       	ldd	r24, Y+2	; 0x02
    34b0:	9b 81       	ldd	r25, Y+3	; 0x03
    34b2:	22 e0       	ldi	r18, 0x02	; 2
    34b4:	fc 01       	movw	r30, r24
    34b6:	23 a7       	std	Z+43, r18	; 0x2b
    34b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    34ba:	88 2f       	mov	r24, r24
    34bc:	90 e0       	ldi	r25, 0x00	; 0
    34be:	82 30       	cpi	r24, 0x02	; 2
    34c0:	91 05       	cpc	r25, r1
    34c2:	31 f1       	breq	.+76     	; 0x3510 <xTaskGenericNotify+0xcc>
    34c4:	83 30       	cpi	r24, 0x03	; 3
    34c6:	91 05       	cpc	r25, r1
    34c8:	34 f4       	brge	.+12     	; 0x34d6 <xTaskGenericNotify+0x92>
    34ca:	00 97       	sbiw	r24, 0x00	; 0
    34cc:	09 f4       	brne	.+2      	; 0x34d0 <xTaskGenericNotify+0x8c>
    34ce:	4f c0       	rjmp	.+158    	; 0x356e <xTaskGenericNotify+0x12a>
    34d0:	01 97       	sbiw	r24, 0x01	; 1
    34d2:	39 f0       	breq	.+14     	; 0x34e2 <xTaskGenericNotify+0x9e>
    34d4:	4d c0       	rjmp	.+154    	; 0x3570 <xTaskGenericNotify+0x12c>
    34d6:	83 30       	cpi	r24, 0x03	; 3
    34d8:	91 05       	cpc	r25, r1
    34da:	61 f1       	breq	.+88     	; 0x3534 <xTaskGenericNotify+0xf0>
    34dc:	04 97       	sbiw	r24, 0x04	; 4
    34de:	b1 f1       	breq	.+108    	; 0x354c <xTaskGenericNotify+0x108>
    34e0:	47 c0       	rjmp	.+142    	; 0x3570 <xTaskGenericNotify+0x12c>
    34e2:	8a 81       	ldd	r24, Y+2	; 0x02
    34e4:	9b 81       	ldd	r25, Y+3	; 0x03
    34e6:	fc 01       	movw	r30, r24
    34e8:	27 a1       	ldd	r18, Z+39	; 0x27
    34ea:	30 a5       	ldd	r19, Z+40	; 0x28
    34ec:	41 a5       	ldd	r20, Z+41	; 0x29
    34ee:	52 a5       	ldd	r21, Z+42	; 0x2a
    34f0:	8f 81       	ldd	r24, Y+7	; 0x07
    34f2:	98 85       	ldd	r25, Y+8	; 0x08
    34f4:	a9 85       	ldd	r26, Y+9	; 0x09
    34f6:	ba 85       	ldd	r27, Y+10	; 0x0a
    34f8:	82 2b       	or	r24, r18
    34fa:	93 2b       	or	r25, r19
    34fc:	a4 2b       	or	r26, r20
    34fe:	b5 2b       	or	r27, r21
    3500:	2a 81       	ldd	r18, Y+2	; 0x02
    3502:	3b 81       	ldd	r19, Y+3	; 0x03
    3504:	f9 01       	movw	r30, r18
    3506:	87 a3       	std	Z+39, r24	; 0x27
    3508:	90 a7       	std	Z+40, r25	; 0x28
    350a:	a1 a7       	std	Z+41, r26	; 0x29
    350c:	b2 a7       	std	Z+42, r27	; 0x2a
    350e:	30 c0       	rjmp	.+96     	; 0x3570 <xTaskGenericNotify+0x12c>
    3510:	8a 81       	ldd	r24, Y+2	; 0x02
    3512:	9b 81       	ldd	r25, Y+3	; 0x03
    3514:	fc 01       	movw	r30, r24
    3516:	87 a1       	ldd	r24, Z+39	; 0x27
    3518:	90 a5       	ldd	r25, Z+40	; 0x28
    351a:	a1 a5       	ldd	r26, Z+41	; 0x29
    351c:	b2 a5       	ldd	r27, Z+42	; 0x2a
    351e:	01 96       	adiw	r24, 0x01	; 1
    3520:	a1 1d       	adc	r26, r1
    3522:	b1 1d       	adc	r27, r1
    3524:	2a 81       	ldd	r18, Y+2	; 0x02
    3526:	3b 81       	ldd	r19, Y+3	; 0x03
    3528:	f9 01       	movw	r30, r18
    352a:	87 a3       	std	Z+39, r24	; 0x27
    352c:	90 a7       	std	Z+40, r25	; 0x28
    352e:	a1 a7       	std	Z+41, r26	; 0x29
    3530:	b2 a7       	std	Z+42, r27	; 0x2a
    3532:	1e c0       	rjmp	.+60     	; 0x3570 <xTaskGenericNotify+0x12c>
    3534:	2a 81       	ldd	r18, Y+2	; 0x02
    3536:	3b 81       	ldd	r19, Y+3	; 0x03
    3538:	8f 81       	ldd	r24, Y+7	; 0x07
    353a:	98 85       	ldd	r25, Y+8	; 0x08
    353c:	a9 85       	ldd	r26, Y+9	; 0x09
    353e:	ba 85       	ldd	r27, Y+10	; 0x0a
    3540:	f9 01       	movw	r30, r18
    3542:	87 a3       	std	Z+39, r24	; 0x27
    3544:	90 a7       	std	Z+40, r25	; 0x28
    3546:	a1 a7       	std	Z+41, r26	; 0x29
    3548:	b2 a7       	std	Z+42, r27	; 0x2a
    354a:	12 c0       	rjmp	.+36     	; 0x3570 <xTaskGenericNotify+0x12c>
    354c:	8c 81       	ldd	r24, Y+4	; 0x04
    354e:	82 30       	cpi	r24, 0x02	; 2
    3550:	61 f0       	breq	.+24     	; 0x356a <xTaskGenericNotify+0x126>
    3552:	2a 81       	ldd	r18, Y+2	; 0x02
    3554:	3b 81       	ldd	r19, Y+3	; 0x03
    3556:	8f 81       	ldd	r24, Y+7	; 0x07
    3558:	98 85       	ldd	r25, Y+8	; 0x08
    355a:	a9 85       	ldd	r26, Y+9	; 0x09
    355c:	ba 85       	ldd	r27, Y+10	; 0x0a
    355e:	f9 01       	movw	r30, r18
    3560:	87 a3       	std	Z+39, r24	; 0x27
    3562:	90 a7       	std	Z+40, r25	; 0x28
    3564:	a1 a7       	std	Z+41, r26	; 0x29
    3566:	b2 a7       	std	Z+42, r27	; 0x2a
    3568:	03 c0       	rjmp	.+6      	; 0x3570 <xTaskGenericNotify+0x12c>
    356a:	19 82       	std	Y+1, r1	; 0x01
    356c:	01 c0       	rjmp	.+2      	; 0x3570 <xTaskGenericNotify+0x12c>
    356e:	00 00       	nop
    3570:	8c 81       	ldd	r24, Y+4	; 0x04
    3572:	81 30       	cpi	r24, 0x01	; 1
    3574:	d1 f5       	brne	.+116    	; 0x35ea <xTaskGenericNotify+0x1a6>
    3576:	8a 81       	ldd	r24, Y+2	; 0x02
    3578:	9b 81       	ldd	r25, Y+3	; 0x03
    357a:	02 96       	adiw	r24, 0x02	; 2
    357c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3580:	8a 81       	ldd	r24, Y+2	; 0x02
    3582:	9b 81       	ldd	r25, Y+3	; 0x03
    3584:	fc 01       	movw	r30, r24
    3586:	96 89       	ldd	r25, Z+22	; 0x16
    3588:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    358c:	89 17       	cp	r24, r25
    358e:	30 f4       	brcc	.+12     	; 0x359c <xTaskGenericNotify+0x158>
    3590:	8a 81       	ldd	r24, Y+2	; 0x02
    3592:	9b 81       	ldd	r25, Y+3	; 0x03
    3594:	fc 01       	movw	r30, r24
    3596:	86 89       	ldd	r24, Z+22	; 0x16
    3598:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    359c:	8a 81       	ldd	r24, Y+2	; 0x02
    359e:	9b 81       	ldd	r25, Y+3	; 0x03
    35a0:	ac 01       	movw	r20, r24
    35a2:	4e 5f       	subi	r20, 0xFE	; 254
    35a4:	5f 4f       	sbci	r21, 0xFF	; 255
    35a6:	8a 81       	ldd	r24, Y+2	; 0x02
    35a8:	9b 81       	ldd	r25, Y+3	; 0x03
    35aa:	fc 01       	movw	r30, r24
    35ac:	86 89       	ldd	r24, Z+22	; 0x16
    35ae:	28 2f       	mov	r18, r24
    35b0:	30 e0       	ldi	r19, 0x00	; 0
    35b2:	c9 01       	movw	r24, r18
    35b4:	88 0f       	add	r24, r24
    35b6:	99 1f       	adc	r25, r25
    35b8:	88 0f       	add	r24, r24
    35ba:	99 1f       	adc	r25, r25
    35bc:	88 0f       	add	r24, r24
    35be:	99 1f       	adc	r25, r25
    35c0:	82 0f       	add	r24, r18
    35c2:	93 1f       	adc	r25, r19
    35c4:	88 5c       	subi	r24, 0xC8	; 200
    35c6:	97 4f       	sbci	r25, 0xF7	; 247
    35c8:	ba 01       	movw	r22, r20
    35ca:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    35ce:	8a 81       	ldd	r24, Y+2	; 0x02
    35d0:	9b 81       	ldd	r25, Y+3	; 0x03
    35d2:	fc 01       	movw	r30, r24
    35d4:	26 89       	ldd	r18, Z+22	; 0x16
    35d6:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    35da:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    35de:	fc 01       	movw	r30, r24
    35e0:	86 89       	ldd	r24, Z+22	; 0x16
    35e2:	82 17       	cp	r24, r18
    35e4:	10 f4       	brcc	.+4      	; 0x35ea <xTaskGenericNotify+0x1a6>
    35e6:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    35ea:	0f 90       	pop	r0
    35ec:	0f be       	out	0x3f, r0	; 63
    35ee:	89 81       	ldd	r24, Y+1	; 0x01
    35f0:	2d 96       	adiw	r28, 0x0d	; 13
    35f2:	0f b6       	in	r0, 0x3f	; 63
    35f4:	f8 94       	cli
    35f6:	de bf       	out	0x3e, r29	; 62
    35f8:	0f be       	out	0x3f, r0	; 63
    35fa:	cd bf       	out	0x3d, r28	; 61
    35fc:	df 91       	pop	r29
    35fe:	cf 91       	pop	r28
    3600:	1f 91       	pop	r17
    3602:	0f 91       	pop	r16
    3604:	08 95       	ret

00003606 <xTaskGenericNotifyFromISR>:
    3606:	ef 92       	push	r14
    3608:	ff 92       	push	r15
    360a:	0f 93       	push	r16
    360c:	1f 93       	push	r17
    360e:	cf 93       	push	r28
    3610:	df 93       	push	r29
    3612:	cd b7       	in	r28, 0x3d	; 61
    3614:	de b7       	in	r29, 0x3e	; 62
    3616:	60 97       	sbiw	r28, 0x10	; 16
    3618:	0f b6       	in	r0, 0x3f	; 63
    361a:	f8 94       	cli
    361c:	de bf       	out	0x3e, r29	; 62
    361e:	0f be       	out	0x3f, r0	; 63
    3620:	cd bf       	out	0x3d, r28	; 61
    3622:	9f 83       	std	Y+7, r25	; 0x07
    3624:	8e 83       	std	Y+6, r24	; 0x06
    3626:	48 87       	std	Y+8, r20	; 0x08
    3628:	59 87       	std	Y+9, r21	; 0x09
    362a:	6a 87       	std	Y+10, r22	; 0x0a
    362c:	7b 87       	std	Y+11, r23	; 0x0b
    362e:	2c 87       	std	Y+12, r18	; 0x0c
    3630:	1e 87       	std	Y+14, r17	; 0x0e
    3632:	0d 87       	std	Y+13, r16	; 0x0d
    3634:	f8 8a       	std	Y+16, r15	; 0x10
    3636:	ef 86       	std	Y+15, r14	; 0x0f
    3638:	81 e0       	ldi	r24, 0x01	; 1
    363a:	89 83       	std	Y+1, r24	; 0x01
    363c:	8e 81       	ldd	r24, Y+6	; 0x06
    363e:	9f 81       	ldd	r25, Y+7	; 0x07
    3640:	9b 83       	std	Y+3, r25	; 0x03
    3642:	8a 83       	std	Y+2, r24	; 0x02
    3644:	1c 82       	std	Y+4, r1	; 0x04
    3646:	8d 85       	ldd	r24, Y+13	; 0x0d
    3648:	9e 85       	ldd	r25, Y+14	; 0x0e
    364a:	89 2b       	or	r24, r25
    364c:	71 f0       	breq	.+28     	; 0x366a <xTaskGenericNotifyFromISR+0x64>
    364e:	8a 81       	ldd	r24, Y+2	; 0x02
    3650:	9b 81       	ldd	r25, Y+3	; 0x03
    3652:	fc 01       	movw	r30, r24
    3654:	87 a1       	ldd	r24, Z+39	; 0x27
    3656:	90 a5       	ldd	r25, Z+40	; 0x28
    3658:	a1 a5       	ldd	r26, Z+41	; 0x29
    365a:	b2 a5       	ldd	r27, Z+42	; 0x2a
    365c:	2d 85       	ldd	r18, Y+13	; 0x0d
    365e:	3e 85       	ldd	r19, Y+14	; 0x0e
    3660:	f9 01       	movw	r30, r18
    3662:	80 83       	st	Z, r24
    3664:	91 83       	std	Z+1, r25	; 0x01
    3666:	a2 83       	std	Z+2, r26	; 0x02
    3668:	b3 83       	std	Z+3, r27	; 0x03
    366a:	8a 81       	ldd	r24, Y+2	; 0x02
    366c:	9b 81       	ldd	r25, Y+3	; 0x03
    366e:	fc 01       	movw	r30, r24
    3670:	83 a5       	ldd	r24, Z+43	; 0x2b
    3672:	8d 83       	std	Y+5, r24	; 0x05
    3674:	8a 81       	ldd	r24, Y+2	; 0x02
    3676:	9b 81       	ldd	r25, Y+3	; 0x03
    3678:	22 e0       	ldi	r18, 0x02	; 2
    367a:	fc 01       	movw	r30, r24
    367c:	23 a7       	std	Z+43, r18	; 0x2b
    367e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3680:	88 2f       	mov	r24, r24
    3682:	90 e0       	ldi	r25, 0x00	; 0
    3684:	82 30       	cpi	r24, 0x02	; 2
    3686:	91 05       	cpc	r25, r1
    3688:	31 f1       	breq	.+76     	; 0x36d6 <xTaskGenericNotifyFromISR+0xd0>
    368a:	83 30       	cpi	r24, 0x03	; 3
    368c:	91 05       	cpc	r25, r1
    368e:	34 f4       	brge	.+12     	; 0x369c <xTaskGenericNotifyFromISR+0x96>
    3690:	00 97       	sbiw	r24, 0x00	; 0
    3692:	09 f4       	brne	.+2      	; 0x3696 <xTaskGenericNotifyFromISR+0x90>
    3694:	4f c0       	rjmp	.+158    	; 0x3734 <xTaskGenericNotifyFromISR+0x12e>
    3696:	01 97       	sbiw	r24, 0x01	; 1
    3698:	39 f0       	breq	.+14     	; 0x36a8 <xTaskGenericNotifyFromISR+0xa2>
    369a:	4d c0       	rjmp	.+154    	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    369c:	83 30       	cpi	r24, 0x03	; 3
    369e:	91 05       	cpc	r25, r1
    36a0:	61 f1       	breq	.+88     	; 0x36fa <xTaskGenericNotifyFromISR+0xf4>
    36a2:	04 97       	sbiw	r24, 0x04	; 4
    36a4:	b1 f1       	breq	.+108    	; 0x3712 <xTaskGenericNotifyFromISR+0x10c>
    36a6:	47 c0       	rjmp	.+142    	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    36a8:	8a 81       	ldd	r24, Y+2	; 0x02
    36aa:	9b 81       	ldd	r25, Y+3	; 0x03
    36ac:	fc 01       	movw	r30, r24
    36ae:	27 a1       	ldd	r18, Z+39	; 0x27
    36b0:	30 a5       	ldd	r19, Z+40	; 0x28
    36b2:	41 a5       	ldd	r20, Z+41	; 0x29
    36b4:	52 a5       	ldd	r21, Z+42	; 0x2a
    36b6:	88 85       	ldd	r24, Y+8	; 0x08
    36b8:	99 85       	ldd	r25, Y+9	; 0x09
    36ba:	aa 85       	ldd	r26, Y+10	; 0x0a
    36bc:	bb 85       	ldd	r27, Y+11	; 0x0b
    36be:	82 2b       	or	r24, r18
    36c0:	93 2b       	or	r25, r19
    36c2:	a4 2b       	or	r26, r20
    36c4:	b5 2b       	or	r27, r21
    36c6:	2a 81       	ldd	r18, Y+2	; 0x02
    36c8:	3b 81       	ldd	r19, Y+3	; 0x03
    36ca:	f9 01       	movw	r30, r18
    36cc:	87 a3       	std	Z+39, r24	; 0x27
    36ce:	90 a7       	std	Z+40, r25	; 0x28
    36d0:	a1 a7       	std	Z+41, r26	; 0x29
    36d2:	b2 a7       	std	Z+42, r27	; 0x2a
    36d4:	30 c0       	rjmp	.+96     	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    36d6:	8a 81       	ldd	r24, Y+2	; 0x02
    36d8:	9b 81       	ldd	r25, Y+3	; 0x03
    36da:	fc 01       	movw	r30, r24
    36dc:	87 a1       	ldd	r24, Z+39	; 0x27
    36de:	90 a5       	ldd	r25, Z+40	; 0x28
    36e0:	a1 a5       	ldd	r26, Z+41	; 0x29
    36e2:	b2 a5       	ldd	r27, Z+42	; 0x2a
    36e4:	01 96       	adiw	r24, 0x01	; 1
    36e6:	a1 1d       	adc	r26, r1
    36e8:	b1 1d       	adc	r27, r1
    36ea:	2a 81       	ldd	r18, Y+2	; 0x02
    36ec:	3b 81       	ldd	r19, Y+3	; 0x03
    36ee:	f9 01       	movw	r30, r18
    36f0:	87 a3       	std	Z+39, r24	; 0x27
    36f2:	90 a7       	std	Z+40, r25	; 0x28
    36f4:	a1 a7       	std	Z+41, r26	; 0x29
    36f6:	b2 a7       	std	Z+42, r27	; 0x2a
    36f8:	1e c0       	rjmp	.+60     	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    36fa:	2a 81       	ldd	r18, Y+2	; 0x02
    36fc:	3b 81       	ldd	r19, Y+3	; 0x03
    36fe:	88 85       	ldd	r24, Y+8	; 0x08
    3700:	99 85       	ldd	r25, Y+9	; 0x09
    3702:	aa 85       	ldd	r26, Y+10	; 0x0a
    3704:	bb 85       	ldd	r27, Y+11	; 0x0b
    3706:	f9 01       	movw	r30, r18
    3708:	87 a3       	std	Z+39, r24	; 0x27
    370a:	90 a7       	std	Z+40, r25	; 0x28
    370c:	a1 a7       	std	Z+41, r26	; 0x29
    370e:	b2 a7       	std	Z+42, r27	; 0x2a
    3710:	12 c0       	rjmp	.+36     	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    3712:	8d 81       	ldd	r24, Y+5	; 0x05
    3714:	82 30       	cpi	r24, 0x02	; 2
    3716:	61 f0       	breq	.+24     	; 0x3730 <xTaskGenericNotifyFromISR+0x12a>
    3718:	2a 81       	ldd	r18, Y+2	; 0x02
    371a:	3b 81       	ldd	r19, Y+3	; 0x03
    371c:	88 85       	ldd	r24, Y+8	; 0x08
    371e:	99 85       	ldd	r25, Y+9	; 0x09
    3720:	aa 85       	ldd	r26, Y+10	; 0x0a
    3722:	bb 85       	ldd	r27, Y+11	; 0x0b
    3724:	f9 01       	movw	r30, r18
    3726:	87 a3       	std	Z+39, r24	; 0x27
    3728:	90 a7       	std	Z+40, r25	; 0x28
    372a:	a1 a7       	std	Z+41, r26	; 0x29
    372c:	b2 a7       	std	Z+42, r27	; 0x2a
    372e:	03 c0       	rjmp	.+6      	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    3730:	19 82       	std	Y+1, r1	; 0x01
    3732:	01 c0       	rjmp	.+2      	; 0x3736 <xTaskGenericNotifyFromISR+0x130>
    3734:	00 00       	nop
    3736:	8d 81       	ldd	r24, Y+5	; 0x05
    3738:	81 30       	cpi	r24, 0x01	; 1
    373a:	09 f0       	breq	.+2      	; 0x373e <xTaskGenericNotifyFromISR+0x138>
    373c:	51 c0       	rjmp	.+162    	; 0x37e0 <xTaskGenericNotifyFromISR+0x1da>
    373e:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <uxSchedulerSuspended>
    3742:	88 23       	and	r24, r24
    3744:	69 f5       	brne	.+90     	; 0x37a0 <xTaskGenericNotifyFromISR+0x19a>
    3746:	8a 81       	ldd	r24, Y+2	; 0x02
    3748:	9b 81       	ldd	r25, Y+3	; 0x03
    374a:	02 96       	adiw	r24, 0x02	; 2
    374c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3750:	8a 81       	ldd	r24, Y+2	; 0x02
    3752:	9b 81       	ldd	r25, Y+3	; 0x03
    3754:	fc 01       	movw	r30, r24
    3756:	96 89       	ldd	r25, Z+22	; 0x16
    3758:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <uxTopReadyPriority>
    375c:	89 17       	cp	r24, r25
    375e:	30 f4       	brcc	.+12     	; 0x376c <xTaskGenericNotifyFromISR+0x166>
    3760:	8a 81       	ldd	r24, Y+2	; 0x02
    3762:	9b 81       	ldd	r25, Y+3	; 0x03
    3764:	fc 01       	movw	r30, r24
    3766:	86 89       	ldd	r24, Z+22	; 0x16
    3768:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <uxTopReadyPriority>
    376c:	8a 81       	ldd	r24, Y+2	; 0x02
    376e:	9b 81       	ldd	r25, Y+3	; 0x03
    3770:	ac 01       	movw	r20, r24
    3772:	4e 5f       	subi	r20, 0xFE	; 254
    3774:	5f 4f       	sbci	r21, 0xFF	; 255
    3776:	8a 81       	ldd	r24, Y+2	; 0x02
    3778:	9b 81       	ldd	r25, Y+3	; 0x03
    377a:	fc 01       	movw	r30, r24
    377c:	86 89       	ldd	r24, Z+22	; 0x16
    377e:	28 2f       	mov	r18, r24
    3780:	30 e0       	ldi	r19, 0x00	; 0
    3782:	c9 01       	movw	r24, r18
    3784:	88 0f       	add	r24, r24
    3786:	99 1f       	adc	r25, r25
    3788:	88 0f       	add	r24, r24
    378a:	99 1f       	adc	r25, r25
    378c:	88 0f       	add	r24, r24
    378e:	99 1f       	adc	r25, r25
    3790:	82 0f       	add	r24, r18
    3792:	93 1f       	adc	r25, r19
    3794:	88 5c       	subi	r24, 0xC8	; 200
    3796:	97 4f       	sbci	r25, 0xF7	; 247
    3798:	ba 01       	movw	r22, r20
    379a:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    379e:	08 c0       	rjmp	.+16     	; 0x37b0 <xTaskGenericNotifyFromISR+0x1aa>
    37a0:	8a 81       	ldd	r24, Y+2	; 0x02
    37a2:	9b 81       	ldd	r25, Y+3	; 0x03
    37a4:	0c 96       	adiw	r24, 0x0c	; 12
    37a6:	bc 01       	movw	r22, r24
    37a8:	82 e7       	ldi	r24, 0x72	; 114
    37aa:	98 e0       	ldi	r25, 0x08	; 8
    37ac:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    37b0:	8a 81       	ldd	r24, Y+2	; 0x02
    37b2:	9b 81       	ldd	r25, Y+3	; 0x03
    37b4:	fc 01       	movw	r30, r24
    37b6:	26 89       	ldd	r18, Z+22	; 0x16
    37b8:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    37bc:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    37c0:	fc 01       	movw	r30, r24
    37c2:	86 89       	ldd	r24, Z+22	; 0x16
    37c4:	82 17       	cp	r24, r18
    37c6:	60 f4       	brcc	.+24     	; 0x37e0 <xTaskGenericNotifyFromISR+0x1da>
    37c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    37ca:	98 89       	ldd	r25, Y+16	; 0x10
    37cc:	89 2b       	or	r24, r25
    37ce:	29 f0       	breq	.+10     	; 0x37da <xTaskGenericNotifyFromISR+0x1d4>
    37d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    37d2:	98 89       	ldd	r25, Y+16	; 0x10
    37d4:	21 e0       	ldi	r18, 0x01	; 1
    37d6:	fc 01       	movw	r30, r24
    37d8:	20 83       	st	Z, r18
    37da:	81 e0       	ldi	r24, 0x01	; 1
    37dc:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <xYieldPending>
    37e0:	89 81       	ldd	r24, Y+1	; 0x01
    37e2:	60 96       	adiw	r28, 0x10	; 16
    37e4:	0f b6       	in	r0, 0x3f	; 63
    37e6:	f8 94       	cli
    37e8:	de bf       	out	0x3e, r29	; 62
    37ea:	0f be       	out	0x3f, r0	; 63
    37ec:	cd bf       	out	0x3d, r28	; 61
    37ee:	df 91       	pop	r29
    37f0:	cf 91       	pop	r28
    37f2:	1f 91       	pop	r17
    37f4:	0f 91       	pop	r16
    37f6:	ff 90       	pop	r15
    37f8:	ef 90       	pop	r14
    37fa:	08 95       	ret

000037fc <xTaskNotifyStateClear>:
    37fc:	cf 93       	push	r28
    37fe:	df 93       	push	r29
    3800:	00 d0       	rcall	.+0      	; 0x3802 <xTaskNotifyStateClear+0x6>
    3802:	1f 92       	push	r1
    3804:	1f 92       	push	r1
    3806:	cd b7       	in	r28, 0x3d	; 61
    3808:	de b7       	in	r29, 0x3e	; 62
    380a:	9d 83       	std	Y+5, r25	; 0x05
    380c:	8c 83       	std	Y+4, r24	; 0x04
    380e:	8c 81       	ldd	r24, Y+4	; 0x04
    3810:	9d 81       	ldd	r25, Y+5	; 0x05
    3812:	89 2b       	or	r24, r25
    3814:	29 f4       	brne	.+10     	; 0x3820 <xTaskNotifyStateClear+0x24>
    3816:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    381a:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    381e:	02 c0       	rjmp	.+4      	; 0x3824 <xTaskNotifyStateClear+0x28>
    3820:	8c 81       	ldd	r24, Y+4	; 0x04
    3822:	9d 81       	ldd	r25, Y+5	; 0x05
    3824:	9b 83       	std	Y+3, r25	; 0x03
    3826:	8a 83       	std	Y+2, r24	; 0x02
    3828:	0f b6       	in	r0, 0x3f	; 63
    382a:	f8 94       	cli
    382c:	0f 92       	push	r0
    382e:	8a 81       	ldd	r24, Y+2	; 0x02
    3830:	9b 81       	ldd	r25, Y+3	; 0x03
    3832:	fc 01       	movw	r30, r24
    3834:	83 a5       	ldd	r24, Z+43	; 0x2b
    3836:	82 30       	cpi	r24, 0x02	; 2
    3838:	39 f4       	brne	.+14     	; 0x3848 <xTaskNotifyStateClear+0x4c>
    383a:	8a 81       	ldd	r24, Y+2	; 0x02
    383c:	9b 81       	ldd	r25, Y+3	; 0x03
    383e:	fc 01       	movw	r30, r24
    3840:	13 a6       	std	Z+43, r1	; 0x2b
    3842:	81 e0       	ldi	r24, 0x01	; 1
    3844:	89 83       	std	Y+1, r24	; 0x01
    3846:	01 c0       	rjmp	.+2      	; 0x384a <xTaskNotifyStateClear+0x4e>
    3848:	19 82       	std	Y+1, r1	; 0x01
    384a:	0f 90       	pop	r0
    384c:	0f be       	out	0x3f, r0	; 63
    384e:	89 81       	ldd	r24, Y+1	; 0x01
    3850:	0f 90       	pop	r0
    3852:	0f 90       	pop	r0
    3854:	0f 90       	pop	r0
    3856:	0f 90       	pop	r0
    3858:	0f 90       	pop	r0
    385a:	df 91       	pop	r29
    385c:	cf 91       	pop	r28
    385e:	08 95       	ret

00003860 <prvAddCurrentTaskToDelayedList>:
    3860:	cf 93       	push	r28
    3862:	df 93       	push	r29
    3864:	cd b7       	in	r28, 0x3d	; 61
    3866:	de b7       	in	r29, 0x3e	; 62
    3868:	27 97       	sbiw	r28, 0x07	; 7
    386a:	0f b6       	in	r0, 0x3f	; 63
    386c:	f8 94       	cli
    386e:	de bf       	out	0x3e, r29	; 62
    3870:	0f be       	out	0x3f, r0	; 63
    3872:	cd bf       	out	0x3d, r28	; 61
    3874:	9e 83       	std	Y+6, r25	; 0x06
    3876:	8d 83       	std	Y+5, r24	; 0x05
    3878:	6f 83       	std	Y+7, r22	; 0x07
    387a:	80 91 8f 08 	lds	r24, 0x088F	; 0x80088f <xTickCount>
    387e:	90 91 90 08 	lds	r25, 0x0890	; 0x800890 <xTickCount+0x1>
    3882:	9a 83       	std	Y+2, r25	; 0x02
    3884:	89 83       	std	Y+1, r24	; 0x01
    3886:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    388a:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    388e:	02 96       	adiw	r24, 0x02	; 2
    3890:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3894:	8d 81       	ldd	r24, Y+5	; 0x05
    3896:	9e 81       	ldd	r25, Y+6	; 0x06
    3898:	01 96       	adiw	r24, 0x01	; 1
    389a:	71 f4       	brne	.+28     	; 0x38b8 <prvAddCurrentTaskToDelayedList+0x58>
    389c:	8f 81       	ldd	r24, Y+7	; 0x07
    389e:	88 23       	and	r24, r24
    38a0:	59 f0       	breq	.+22     	; 0x38b8 <prvAddCurrentTaskToDelayedList+0x58>
    38a2:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    38a6:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    38aa:	02 96       	adiw	r24, 0x02	; 2
    38ac:	bc 01       	movw	r22, r24
    38ae:	85 e8       	ldi	r24, 0x85	; 133
    38b0:	98 e0       	ldi	r25, 0x08	; 8
    38b2:	0e 94 12 02 	call	0x424	; 0x424 <vListInsertEnd>
    38b6:	44 c0       	rjmp	.+136    	; 0x3940 <prvAddCurrentTaskToDelayedList+0xe0>
    38b8:	29 81       	ldd	r18, Y+1	; 0x01
    38ba:	3a 81       	ldd	r19, Y+2	; 0x02
    38bc:	8d 81       	ldd	r24, Y+5	; 0x05
    38be:	9e 81       	ldd	r25, Y+6	; 0x06
    38c0:	82 0f       	add	r24, r18
    38c2:	93 1f       	adc	r25, r19
    38c4:	9c 83       	std	Y+4, r25	; 0x04
    38c6:	8b 83       	std	Y+3, r24	; 0x03
    38c8:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    38cc:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    38d0:	2b 81       	ldd	r18, Y+3	; 0x03
    38d2:	3c 81       	ldd	r19, Y+4	; 0x04
    38d4:	fc 01       	movw	r30, r24
    38d6:	33 83       	std	Z+3, r19	; 0x03
    38d8:	22 83       	std	Z+2, r18	; 0x02
    38da:	2b 81       	ldd	r18, Y+3	; 0x03
    38dc:	3c 81       	ldd	r19, Y+4	; 0x04
    38de:	89 81       	ldd	r24, Y+1	; 0x01
    38e0:	9a 81       	ldd	r25, Y+2	; 0x02
    38e2:	28 17       	cp	r18, r24
    38e4:	39 07       	cpc	r19, r25
    38e6:	78 f4       	brcc	.+30     	; 0x3906 <prvAddCurrentTaskToDelayedList+0xa6>
    38e8:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    38ec:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    38f0:	9c 01       	movw	r18, r24
    38f2:	2e 5f       	subi	r18, 0xFE	; 254
    38f4:	3f 4f       	sbci	r19, 0xFF	; 255
    38f6:	80 91 70 08 	lds	r24, 0x0870	; 0x800870 <pxOverflowDelayedTaskList>
    38fa:	90 91 71 08 	lds	r25, 0x0871	; 0x800871 <pxOverflowDelayedTaskList+0x1>
    38fe:	b9 01       	movw	r22, r18
    3900:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    3904:	1d c0       	rjmp	.+58     	; 0x3940 <prvAddCurrentTaskToDelayedList+0xe0>
    3906:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <__data_end>
    390a:	90 91 37 08 	lds	r25, 0x0837	; 0x800837 <__data_end+0x1>
    390e:	9c 01       	movw	r18, r24
    3910:	2e 5f       	subi	r18, 0xFE	; 254
    3912:	3f 4f       	sbci	r19, 0xFF	; 255
    3914:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <pxDelayedTaskList>
    3918:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <pxDelayedTaskList+0x1>
    391c:	b9 01       	movw	r22, r18
    391e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    3922:	80 91 97 08 	lds	r24, 0x0897	; 0x800897 <xNextTaskUnblockTime>
    3926:	90 91 98 08 	lds	r25, 0x0898	; 0x800898 <xNextTaskUnblockTime+0x1>
    392a:	2b 81       	ldd	r18, Y+3	; 0x03
    392c:	3c 81       	ldd	r19, Y+4	; 0x04
    392e:	28 17       	cp	r18, r24
    3930:	39 07       	cpc	r19, r25
    3932:	30 f4       	brcc	.+12     	; 0x3940 <prvAddCurrentTaskToDelayedList+0xe0>
    3934:	8b 81       	ldd	r24, Y+3	; 0x03
    3936:	9c 81       	ldd	r25, Y+4	; 0x04
    3938:	90 93 98 08 	sts	0x0898, r25	; 0x800898 <xNextTaskUnblockTime+0x1>
    393c:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <xNextTaskUnblockTime>
    3940:	00 00       	nop
    3942:	27 96       	adiw	r28, 0x07	; 7
    3944:	0f b6       	in	r0, 0x3f	; 63
    3946:	f8 94       	cli
    3948:	de bf       	out	0x3e, r29	; 62
    394a:	0f be       	out	0x3f, r0	; 63
    394c:	cd bf       	out	0x3d, r28	; 61
    394e:	df 91       	pop	r29
    3950:	cf 91       	pop	r28
    3952:	08 95       	ret

00003954 <xTimerCreateTimerTask>:
    3954:	ef 92       	push	r14
    3956:	ff 92       	push	r15
    3958:	0f 93       	push	r16
    395a:	cf 93       	push	r28
    395c:	df 93       	push	r29
    395e:	1f 92       	push	r1
    3960:	cd b7       	in	r28, 0x3d	; 61
    3962:	de b7       	in	r29, 0x3e	; 62
    3964:	19 82       	std	Y+1, r1	; 0x01
    3966:	40 d4       	rcall	.+2176   	; 0x41e8 <prvCheckForValidListAndQueue>
    3968:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    396c:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3970:	89 2b       	or	r24, r25
    3972:	91 f0       	breq	.+36     	; 0x3998 <xTimerCreateTimerTask+0x44>
    3974:	0f 2e       	mov	r0, r31
    3976:	f4 eb       	ldi	r31, 0xB4	; 180
    3978:	ef 2e       	mov	r14, r31
    397a:	f8 e0       	ldi	r31, 0x08	; 8
    397c:	ff 2e       	mov	r15, r31
    397e:	f0 2d       	mov	r31, r0
    3980:	03 e0       	ldi	r16, 0x03	; 3
    3982:	20 e0       	ldi	r18, 0x00	; 0
    3984:	30 e0       	ldi	r19, 0x00	; 0
    3986:	45 e5       	ldi	r20, 0x55	; 85
    3988:	50 e0       	ldi	r21, 0x00	; 0
    398a:	66 e2       	ldi	r22, 0x26	; 38
    398c:	72 e0       	ldi	r23, 0x02	; 2
    398e:	8f ed       	ldi	r24, 0xDF	; 223
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	0e 94 df 10 	call	0x21be	; 0x21be <xTaskCreate>
    3996:	89 83       	std	Y+1, r24	; 0x01
    3998:	89 81       	ldd	r24, Y+1	; 0x01
    399a:	0f 90       	pop	r0
    399c:	df 91       	pop	r29
    399e:	cf 91       	pop	r28
    39a0:	0f 91       	pop	r16
    39a2:	ff 90       	pop	r15
    39a4:	ef 90       	pop	r14
    39a6:	08 95       	ret

000039a8 <xTimerCreate>:
    39a8:	ef 92       	push	r14
    39aa:	ff 92       	push	r15
    39ac:	0f 93       	push	r16
    39ae:	1f 93       	push	r17
    39b0:	cf 93       	push	r28
    39b2:	df 93       	push	r29
    39b4:	cd b7       	in	r28, 0x3d	; 61
    39b6:	de b7       	in	r29, 0x3e	; 62
    39b8:	2b 97       	sbiw	r28, 0x0b	; 11
    39ba:	0f b6       	in	r0, 0x3f	; 63
    39bc:	f8 94       	cli
    39be:	de bf       	out	0x3e, r29	; 62
    39c0:	0f be       	out	0x3f, r0	; 63
    39c2:	cd bf       	out	0x3d, r28	; 61
    39c4:	9c 83       	std	Y+4, r25	; 0x04
    39c6:	8b 83       	std	Y+3, r24	; 0x03
    39c8:	7e 83       	std	Y+6, r23	; 0x06
    39ca:	6d 83       	std	Y+5, r22	; 0x05
    39cc:	4f 83       	std	Y+7, r20	; 0x07
    39ce:	39 87       	std	Y+9, r19	; 0x09
    39d0:	28 87       	std	Y+8, r18	; 0x08
    39d2:	1b 87       	std	Y+11, r17	; 0x0b
    39d4:	0a 87       	std	Y+10, r16	; 0x0a
    39d6:	84 e1       	ldi	r24, 0x14	; 20
    39d8:	90 e0       	ldi	r25, 0x00	; 0
    39da:	0e 94 8d 01 	call	0x31a	; 0x31a <pvPortMalloc>
    39de:	9a 83       	std	Y+2, r25	; 0x02
    39e0:	89 83       	std	Y+1, r24	; 0x01
    39e2:	89 81       	ldd	r24, Y+1	; 0x01
    39e4:	9a 81       	ldd	r25, Y+2	; 0x02
    39e6:	89 2b       	or	r24, r25
    39e8:	91 f0       	breq	.+36     	; 0x3a0e <xTimerCreate+0x66>
    39ea:	89 81       	ldd	r24, Y+1	; 0x01
    39ec:	9a 81       	ldd	r25, Y+2	; 0x02
    39ee:	fc 01       	movw	r30, r24
    39f0:	13 8a       	std	Z+19, r1	; 0x13
    39f2:	e9 81       	ldd	r30, Y+1	; 0x01
    39f4:	fa 81       	ldd	r31, Y+2	; 0x02
    39f6:	4a 85       	ldd	r20, Y+10	; 0x0a
    39f8:	5b 85       	ldd	r21, Y+11	; 0x0b
    39fa:	28 85       	ldd	r18, Y+8	; 0x08
    39fc:	39 85       	ldd	r19, Y+9	; 0x09
    39fe:	6d 81       	ldd	r22, Y+5	; 0x05
    3a00:	7e 81       	ldd	r23, Y+6	; 0x06
    3a02:	8b 81       	ldd	r24, Y+3	; 0x03
    3a04:	9c 81       	ldd	r25, Y+4	; 0x04
    3a06:	7f 01       	movw	r14, r30
    3a08:	8a 01       	movw	r16, r20
    3a0a:	4f 81       	ldd	r20, Y+7	; 0x07
    3a0c:	0f d0       	rcall	.+30     	; 0x3a2c <prvInitialiseNewTimer>
    3a0e:	89 81       	ldd	r24, Y+1	; 0x01
    3a10:	9a 81       	ldd	r25, Y+2	; 0x02
    3a12:	2b 96       	adiw	r28, 0x0b	; 11
    3a14:	0f b6       	in	r0, 0x3f	; 63
    3a16:	f8 94       	cli
    3a18:	de bf       	out	0x3e, r29	; 62
    3a1a:	0f be       	out	0x3f, r0	; 63
    3a1c:	cd bf       	out	0x3d, r28	; 61
    3a1e:	df 91       	pop	r29
    3a20:	cf 91       	pop	r28
    3a22:	1f 91       	pop	r17
    3a24:	0f 91       	pop	r16
    3a26:	ff 90       	pop	r15
    3a28:	ef 90       	pop	r14
    3a2a:	08 95       	ret

00003a2c <prvInitialiseNewTimer>:
    3a2c:	ef 92       	push	r14
    3a2e:	ff 92       	push	r15
    3a30:	0f 93       	push	r16
    3a32:	1f 93       	push	r17
    3a34:	cf 93       	push	r28
    3a36:	df 93       	push	r29
    3a38:	cd b7       	in	r28, 0x3d	; 61
    3a3a:	de b7       	in	r29, 0x3e	; 62
    3a3c:	2b 97       	sbiw	r28, 0x0b	; 11
    3a3e:	0f b6       	in	r0, 0x3f	; 63
    3a40:	f8 94       	cli
    3a42:	de bf       	out	0x3e, r29	; 62
    3a44:	0f be       	out	0x3f, r0	; 63
    3a46:	cd bf       	out	0x3d, r28	; 61
    3a48:	9a 83       	std	Y+2, r25	; 0x02
    3a4a:	89 83       	std	Y+1, r24	; 0x01
    3a4c:	7c 83       	std	Y+4, r23	; 0x04
    3a4e:	6b 83       	std	Y+3, r22	; 0x03
    3a50:	4d 83       	std	Y+5, r20	; 0x05
    3a52:	3f 83       	std	Y+7, r19	; 0x07
    3a54:	2e 83       	std	Y+6, r18	; 0x06
    3a56:	19 87       	std	Y+9, r17	; 0x09
    3a58:	08 87       	std	Y+8, r16	; 0x08
    3a5a:	fb 86       	std	Y+11, r15	; 0x0b
    3a5c:	ea 86       	std	Y+10, r14	; 0x0a
    3a5e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a60:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a62:	89 2b       	or	r24, r25
    3a64:	79 f1       	breq	.+94     	; 0x3ac4 <prvInitialiseNewTimer+0x98>
    3a66:	c0 d3       	rcall	.+1920   	; 0x41e8 <prvCheckForValidListAndQueue>
    3a68:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a6a:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a6c:	29 81       	ldd	r18, Y+1	; 0x01
    3a6e:	3a 81       	ldd	r19, Y+2	; 0x02
    3a70:	fc 01       	movw	r30, r24
    3a72:	31 83       	std	Z+1, r19	; 0x01
    3a74:	20 83       	st	Z, r18
    3a76:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a78:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a7a:	2b 81       	ldd	r18, Y+3	; 0x03
    3a7c:	3c 81       	ldd	r19, Y+4	; 0x04
    3a7e:	fc 01       	movw	r30, r24
    3a80:	35 87       	std	Z+13, r19	; 0x0d
    3a82:	24 87       	std	Z+12, r18	; 0x0c
    3a84:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a86:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a88:	2e 81       	ldd	r18, Y+6	; 0x06
    3a8a:	3f 81       	ldd	r19, Y+7	; 0x07
    3a8c:	fc 01       	movw	r30, r24
    3a8e:	37 87       	std	Z+15, r19	; 0x0f
    3a90:	26 87       	std	Z+14, r18	; 0x0e
    3a92:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a94:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a96:	28 85       	ldd	r18, Y+8	; 0x08
    3a98:	39 85       	ldd	r19, Y+9	; 0x09
    3a9a:	fc 01       	movw	r30, r24
    3a9c:	31 8b       	std	Z+17, r19	; 0x11
    3a9e:	20 8b       	std	Z+16, r18	; 0x10
    3aa0:	8a 85       	ldd	r24, Y+10	; 0x0a
    3aa2:	9b 85       	ldd	r25, Y+11	; 0x0b
    3aa4:	02 96       	adiw	r24, 0x02	; 2
    3aa6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <vListInitialiseItem>
    3aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    3aac:	88 23       	and	r24, r24
    3aae:	51 f0       	breq	.+20     	; 0x3ac4 <prvInitialiseNewTimer+0x98>
    3ab0:	8a 85       	ldd	r24, Y+10	; 0x0a
    3ab2:	9b 85       	ldd	r25, Y+11	; 0x0b
    3ab4:	fc 01       	movw	r30, r24
    3ab6:	83 89       	ldd	r24, Z+19	; 0x13
    3ab8:	28 2f       	mov	r18, r24
    3aba:	24 60       	ori	r18, 0x04	; 4
    3abc:	8a 85       	ldd	r24, Y+10	; 0x0a
    3abe:	9b 85       	ldd	r25, Y+11	; 0x0b
    3ac0:	fc 01       	movw	r30, r24
    3ac2:	23 8b       	std	Z+19, r18	; 0x13
    3ac4:	00 00       	nop
    3ac6:	2b 96       	adiw	r28, 0x0b	; 11
    3ac8:	0f b6       	in	r0, 0x3f	; 63
    3aca:	f8 94       	cli
    3acc:	de bf       	out	0x3e, r29	; 62
    3ace:	0f be       	out	0x3f, r0	; 63
    3ad0:	cd bf       	out	0x3d, r28	; 61
    3ad2:	df 91       	pop	r29
    3ad4:	cf 91       	pop	r28
    3ad6:	1f 91       	pop	r17
    3ad8:	0f 91       	pop	r16
    3ada:	ff 90       	pop	r15
    3adc:	ef 90       	pop	r14
    3ade:	08 95       	ret

00003ae0 <xTimerGenericCommand>:
    3ae0:	0f 93       	push	r16
    3ae2:	1f 93       	push	r17
    3ae4:	cf 93       	push	r28
    3ae6:	df 93       	push	r29
    3ae8:	cd b7       	in	r28, 0x3d	; 61
    3aea:	de b7       	in	r29, 0x3e	; 62
    3aec:	2f 97       	sbiw	r28, 0x0f	; 15
    3aee:	0f b6       	in	r0, 0x3f	; 63
    3af0:	f8 94       	cli
    3af2:	de bf       	out	0x3e, r29	; 62
    3af4:	0f be       	out	0x3f, r0	; 63
    3af6:	cd bf       	out	0x3d, r28	; 61
    3af8:	98 87       	std	Y+8, r25	; 0x08
    3afa:	8f 83       	std	Y+7, r24	; 0x07
    3afc:	69 87       	std	Y+9, r22	; 0x09
    3afe:	5b 87       	std	Y+11, r21	; 0x0b
    3b00:	4a 87       	std	Y+10, r20	; 0x0a
    3b02:	3d 87       	std	Y+13, r19	; 0x0d
    3b04:	2c 87       	std	Y+12, r18	; 0x0c
    3b06:	1f 87       	std	Y+15, r17	; 0x0f
    3b08:	0e 87       	std	Y+14, r16	; 0x0e
    3b0a:	19 82       	std	Y+1, r1	; 0x01
    3b0c:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    3b10:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3b14:	89 2b       	or	r24, r25
    3b16:	c9 f1       	breq	.+114    	; 0x3b8a <xTimerGenericCommand+0xaa>
    3b18:	89 85       	ldd	r24, Y+9	; 0x09
    3b1a:	8a 83       	std	Y+2, r24	; 0x02
    3b1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3b1e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3b20:	9c 83       	std	Y+4, r25	; 0x04
    3b22:	8b 83       	std	Y+3, r24	; 0x03
    3b24:	8f 81       	ldd	r24, Y+7	; 0x07
    3b26:	98 85       	ldd	r25, Y+8	; 0x08
    3b28:	9e 83       	std	Y+6, r25	; 0x06
    3b2a:	8d 83       	std	Y+5, r24	; 0x05
    3b2c:	89 85       	ldd	r24, Y+9	; 0x09
    3b2e:	86 30       	cpi	r24, 0x06	; 6
    3b30:	fc f4       	brge	.+62     	; 0x3b70 <xTimerGenericCommand+0x90>
    3b32:	e7 d9       	rcall	.-3122   	; 0x2f02 <xTaskGetSchedulerState>
    3b34:	82 30       	cpi	r24, 0x02	; 2
    3b36:	71 f4       	brne	.+28     	; 0x3b54 <xTimerGenericCommand+0x74>
    3b38:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    3b3c:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3b40:	4e 85       	ldd	r20, Y+14	; 0x0e
    3b42:	5f 85       	ldd	r21, Y+15	; 0x0f
    3b44:	be 01       	movw	r22, r28
    3b46:	6e 5f       	subi	r22, 0xFE	; 254
    3b48:	7f 4f       	sbci	r23, 0xFF	; 255
    3b4a:	20 e0       	ldi	r18, 0x00	; 0
    3b4c:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
    3b50:	89 83       	std	Y+1, r24	; 0x01
    3b52:	1b c0       	rjmp	.+54     	; 0x3b8a <xTimerGenericCommand+0xaa>
    3b54:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    3b58:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3b5c:	be 01       	movw	r22, r28
    3b5e:	6e 5f       	subi	r22, 0xFE	; 254
    3b60:	7f 4f       	sbci	r23, 0xFF	; 255
    3b62:	20 e0       	ldi	r18, 0x00	; 0
    3b64:	40 e0       	ldi	r20, 0x00	; 0
    3b66:	50 e0       	ldi	r21, 0x00	; 0
    3b68:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
    3b6c:	89 83       	std	Y+1, r24	; 0x01
    3b6e:	0d c0       	rjmp	.+26     	; 0x3b8a <xTimerGenericCommand+0xaa>
    3b70:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    3b74:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3b78:	4c 85       	ldd	r20, Y+12	; 0x0c
    3b7a:	5d 85       	ldd	r21, Y+13	; 0x0d
    3b7c:	be 01       	movw	r22, r28
    3b7e:	6e 5f       	subi	r22, 0xFE	; 254
    3b80:	7f 4f       	sbci	r23, 0xFF	; 255
    3b82:	20 e0       	ldi	r18, 0x00	; 0
    3b84:	0e 94 2a 08 	call	0x1054	; 0x1054 <xQueueGenericSendFromISR>
    3b88:	89 83       	std	Y+1, r24	; 0x01
    3b8a:	89 81       	ldd	r24, Y+1	; 0x01
    3b8c:	2f 96       	adiw	r28, 0x0f	; 15
    3b8e:	0f b6       	in	r0, 0x3f	; 63
    3b90:	f8 94       	cli
    3b92:	de bf       	out	0x3e, r29	; 62
    3b94:	0f be       	out	0x3f, r0	; 63
    3b96:	cd bf       	out	0x3d, r28	; 61
    3b98:	df 91       	pop	r29
    3b9a:	cf 91       	pop	r28
    3b9c:	1f 91       	pop	r17
    3b9e:	0f 91       	pop	r16
    3ba0:	08 95       	ret

00003ba2 <prvProcessExpiredTimer>:
    3ba2:	0f 93       	push	r16
    3ba4:	1f 93       	push	r17
    3ba6:	cf 93       	push	r28
    3ba8:	df 93       	push	r29
    3baa:	cd b7       	in	r28, 0x3d	; 61
    3bac:	de b7       	in	r29, 0x3e	; 62
    3bae:	27 97       	sbiw	r28, 0x07	; 7
    3bb0:	0f b6       	in	r0, 0x3f	; 63
    3bb2:	f8 94       	cli
    3bb4:	de bf       	out	0x3e, r29	; 62
    3bb6:	0f be       	out	0x3f, r0	; 63
    3bb8:	cd bf       	out	0x3d, r28	; 61
    3bba:	9d 83       	std	Y+5, r25	; 0x05
    3bbc:	8c 83       	std	Y+4, r24	; 0x04
    3bbe:	7f 83       	std	Y+7, r23	; 0x07
    3bc0:	6e 83       	std	Y+6, r22	; 0x06
    3bc2:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    3bc6:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    3bca:	fc 01       	movw	r30, r24
    3bcc:	85 81       	ldd	r24, Z+5	; 0x05
    3bce:	96 81       	ldd	r25, Z+6	; 0x06
    3bd0:	fc 01       	movw	r30, r24
    3bd2:	86 81       	ldd	r24, Z+6	; 0x06
    3bd4:	97 81       	ldd	r25, Z+7	; 0x07
    3bd6:	9a 83       	std	Y+2, r25	; 0x02
    3bd8:	89 83       	std	Y+1, r24	; 0x01
    3bda:	89 81       	ldd	r24, Y+1	; 0x01
    3bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    3bde:	02 96       	adiw	r24, 0x02	; 2
    3be0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3be4:	89 81       	ldd	r24, Y+1	; 0x01
    3be6:	9a 81       	ldd	r25, Y+2	; 0x02
    3be8:	fc 01       	movw	r30, r24
    3bea:	83 89       	ldd	r24, Z+19	; 0x13
    3bec:	88 2f       	mov	r24, r24
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	84 70       	andi	r24, 0x04	; 4
    3bf2:	99 27       	eor	r25, r25
    3bf4:	89 2b       	or	r24, r25
    3bf6:	f9 f0       	breq	.+62     	; 0x3c36 <prvProcessExpiredTimer+0x94>
    3bf8:	89 81       	ldd	r24, Y+1	; 0x01
    3bfa:	9a 81       	ldd	r25, Y+2	; 0x02
    3bfc:	fc 01       	movw	r30, r24
    3bfe:	24 85       	ldd	r18, Z+12	; 0x0c
    3c00:	35 85       	ldd	r19, Z+13	; 0x0d
    3c02:	8c 81       	ldd	r24, Y+4	; 0x04
    3c04:	9d 81       	ldd	r25, Y+5	; 0x05
    3c06:	b9 01       	movw	r22, r18
    3c08:	68 0f       	add	r22, r24
    3c0a:	79 1f       	adc	r23, r25
    3c0c:	2c 81       	ldd	r18, Y+4	; 0x04
    3c0e:	3d 81       	ldd	r19, Y+5	; 0x05
    3c10:	4e 81       	ldd	r20, Y+6	; 0x06
    3c12:	5f 81       	ldd	r21, Y+7	; 0x07
    3c14:	89 81       	ldd	r24, Y+1	; 0x01
    3c16:	9a 81       	ldd	r25, Y+2	; 0x02
    3c18:	e6 d0       	rcall	.+460    	; 0x3de6 <prvInsertTimerInActiveList>
    3c1a:	88 23       	and	r24, r24
    3c1c:	b1 f0       	breq	.+44     	; 0x3c4a <prvProcessExpiredTimer+0xa8>
    3c1e:	4c 81       	ldd	r20, Y+4	; 0x04
    3c20:	5d 81       	ldd	r21, Y+5	; 0x05
    3c22:	89 81       	ldd	r24, Y+1	; 0x01
    3c24:	9a 81       	ldd	r25, Y+2	; 0x02
    3c26:	00 e0       	ldi	r16, 0x00	; 0
    3c28:	10 e0       	ldi	r17, 0x00	; 0
    3c2a:	20 e0       	ldi	r18, 0x00	; 0
    3c2c:	30 e0       	ldi	r19, 0x00	; 0
    3c2e:	60 e0       	ldi	r22, 0x00	; 0
    3c30:	57 df       	rcall	.-338    	; 0x3ae0 <xTimerGenericCommand>
    3c32:	8b 83       	std	Y+3, r24	; 0x03
    3c34:	0a c0       	rjmp	.+20     	; 0x3c4a <prvProcessExpiredTimer+0xa8>
    3c36:	89 81       	ldd	r24, Y+1	; 0x01
    3c38:	9a 81       	ldd	r25, Y+2	; 0x02
    3c3a:	fc 01       	movw	r30, r24
    3c3c:	83 89       	ldd	r24, Z+19	; 0x13
    3c3e:	28 2f       	mov	r18, r24
    3c40:	2e 7f       	andi	r18, 0xFE	; 254
    3c42:	89 81       	ldd	r24, Y+1	; 0x01
    3c44:	9a 81       	ldd	r25, Y+2	; 0x02
    3c46:	fc 01       	movw	r30, r24
    3c48:	23 8b       	std	Z+19, r18	; 0x13
    3c4a:	89 81       	ldd	r24, Y+1	; 0x01
    3c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c4e:	fc 01       	movw	r30, r24
    3c50:	20 89       	ldd	r18, Z+16	; 0x10
    3c52:	31 89       	ldd	r19, Z+17	; 0x11
    3c54:	89 81       	ldd	r24, Y+1	; 0x01
    3c56:	9a 81       	ldd	r25, Y+2	; 0x02
    3c58:	f9 01       	movw	r30, r18
    3c5a:	19 95       	eicall
    3c5c:	00 00       	nop
    3c5e:	27 96       	adiw	r28, 0x07	; 7
    3c60:	0f b6       	in	r0, 0x3f	; 63
    3c62:	f8 94       	cli
    3c64:	de bf       	out	0x3e, r29	; 62
    3c66:	0f be       	out	0x3f, r0	; 63
    3c68:	cd bf       	out	0x3d, r28	; 61
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	1f 91       	pop	r17
    3c70:	0f 91       	pop	r16
    3c72:	08 95       	ret

00003c74 <prvProcessTimerOrBlockTask>:
    3c74:	cf 93       	push	r28
    3c76:	df 93       	push	r29
    3c78:	00 d0       	rcall	.+0      	; 0x3c7a <prvProcessTimerOrBlockTask+0x6>
    3c7a:	00 d0       	rcall	.+0      	; 0x3c7c <prvProcessTimerOrBlockTask+0x8>
    3c7c:	cd b7       	in	r28, 0x3d	; 61
    3c7e:	de b7       	in	r29, 0x3e	; 62
    3c80:	9d 83       	std	Y+5, r25	; 0x05
    3c82:	8c 83       	std	Y+4, r24	; 0x04
    3c84:	6e 83       	std	Y+6, r22	; 0x06
    3c86:	0e 94 13 13 	call	0x2626	; 0x2626 <vTaskSuspendAll>
    3c8a:	ce 01       	movw	r24, r28
    3c8c:	03 96       	adiw	r24, 0x03	; 3
    3c8e:	7c d0       	rcall	.+248    	; 0x3d88 <prvSampleTimeNow>
    3c90:	9a 83       	std	Y+2, r25	; 0x02
    3c92:	89 83       	std	Y+1, r24	; 0x01
    3c94:	8b 81       	ldd	r24, Y+3	; 0x03
    3c96:	88 23       	and	r24, r24
    3c98:	b1 f5       	brne	.+108    	; 0x3d06 <prvProcessTimerOrBlockTask+0x92>
    3c9a:	8e 81       	ldd	r24, Y+6	; 0x06
    3c9c:	88 23       	and	r24, r24
    3c9e:	81 f4       	brne	.+32     	; 0x3cc0 <prvProcessTimerOrBlockTask+0x4c>
    3ca0:	2c 81       	ldd	r18, Y+4	; 0x04
    3ca2:	3d 81       	ldd	r19, Y+5	; 0x05
    3ca4:	89 81       	ldd	r24, Y+1	; 0x01
    3ca6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ca8:	82 17       	cp	r24, r18
    3caa:	93 07       	cpc	r25, r19
    3cac:	48 f0       	brcs	.+18     	; 0x3cc0 <prvProcessTimerOrBlockTask+0x4c>
    3cae:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    3cb2:	29 81       	ldd	r18, Y+1	; 0x01
    3cb4:	3a 81       	ldd	r19, Y+2	; 0x02
    3cb6:	8c 81       	ldd	r24, Y+4	; 0x04
    3cb8:	9d 81       	ldd	r25, Y+5	; 0x05
    3cba:	b9 01       	movw	r22, r18
    3cbc:	72 df       	rcall	.-284    	; 0x3ba2 <prvProcessExpiredTimer>
    3cbe:	25 c0       	rjmp	.+74     	; 0x3d0a <prvProcessTimerOrBlockTask+0x96>
    3cc0:	8e 81       	ldd	r24, Y+6	; 0x06
    3cc2:	88 23       	and	r24, r24
    3cc4:	59 f0       	breq	.+22     	; 0x3cdc <prvProcessTimerOrBlockTask+0x68>
    3cc6:	80 91 b0 08 	lds	r24, 0x08B0	; 0x8008b0 <pxOverflowTimerList>
    3cca:	90 91 b1 08 	lds	r25, 0x08B1	; 0x8008b1 <pxOverflowTimerList+0x1>
    3cce:	fc 01       	movw	r30, r24
    3cd0:	90 81       	ld	r25, Z
    3cd2:	81 e0       	ldi	r24, 0x01	; 1
    3cd4:	99 23       	and	r25, r25
    3cd6:	09 f0       	breq	.+2      	; 0x3cda <prvProcessTimerOrBlockTask+0x66>
    3cd8:	80 e0       	ldi	r24, 0x00	; 0
    3cda:	8e 83       	std	Y+6, r24	; 0x06
    3cdc:	2c 81       	ldd	r18, Y+4	; 0x04
    3cde:	3d 81       	ldd	r19, Y+5	; 0x05
    3ce0:	89 81       	ldd	r24, Y+1	; 0x01
    3ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ce4:	28 1b       	sub	r18, r24
    3ce6:	39 0b       	sbc	r19, r25
    3ce8:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    3cec:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    3cf0:	4e 81       	ldd	r20, Y+6	; 0x06
    3cf2:	b9 01       	movw	r22, r18
    3cf4:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <vQueueWaitForMessageRestricted>
    3cf8:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    3cfc:	88 23       	and	r24, r24
    3cfe:	29 f4       	brne	.+10     	; 0x3d0a <prvProcessTimerOrBlockTask+0x96>
    3d00:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    3d04:	02 c0       	rjmp	.+4      	; 0x3d0a <prvProcessTimerOrBlockTask+0x96>
    3d06:	0e 94 20 13 	call	0x2640	; 0x2640 <xTaskResumeAll>
    3d0a:	00 00       	nop
    3d0c:	26 96       	adiw	r28, 0x06	; 6
    3d0e:	0f b6       	in	r0, 0x3f	; 63
    3d10:	f8 94       	cli
    3d12:	de bf       	out	0x3e, r29	; 62
    3d14:	0f be       	out	0x3f, r0	; 63
    3d16:	cd bf       	out	0x3d, r28	; 61
    3d18:	df 91       	pop	r29
    3d1a:	cf 91       	pop	r28
    3d1c:	08 95       	ret

00003d1e <prvGetNextExpireTime>:
    3d1e:	cf 93       	push	r28
    3d20:	df 93       	push	r29
    3d22:	00 d0       	rcall	.+0      	; 0x3d24 <prvGetNextExpireTime+0x6>
    3d24:	1f 92       	push	r1
    3d26:	cd b7       	in	r28, 0x3d	; 61
    3d28:	de b7       	in	r29, 0x3e	; 62
    3d2a:	9c 83       	std	Y+4, r25	; 0x04
    3d2c:	8b 83       	std	Y+3, r24	; 0x03
    3d2e:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    3d32:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    3d36:	fc 01       	movw	r30, r24
    3d38:	90 81       	ld	r25, Z
    3d3a:	81 e0       	ldi	r24, 0x01	; 1
    3d3c:	99 23       	and	r25, r25
    3d3e:	09 f0       	breq	.+2      	; 0x3d42 <prvGetNextExpireTime+0x24>
    3d40:	80 e0       	ldi	r24, 0x00	; 0
    3d42:	28 2f       	mov	r18, r24
    3d44:	8b 81       	ldd	r24, Y+3	; 0x03
    3d46:	9c 81       	ldd	r25, Y+4	; 0x04
    3d48:	fc 01       	movw	r30, r24
    3d4a:	20 83       	st	Z, r18
    3d4c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d4e:	9c 81       	ldd	r25, Y+4	; 0x04
    3d50:	fc 01       	movw	r30, r24
    3d52:	80 81       	ld	r24, Z
    3d54:	88 23       	and	r24, r24
    3d56:	69 f4       	brne	.+26     	; 0x3d72 <prvGetNextExpireTime+0x54>
    3d58:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    3d5c:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    3d60:	fc 01       	movw	r30, r24
    3d62:	85 81       	ldd	r24, Z+5	; 0x05
    3d64:	96 81       	ldd	r25, Z+6	; 0x06
    3d66:	fc 01       	movw	r30, r24
    3d68:	80 81       	ld	r24, Z
    3d6a:	91 81       	ldd	r25, Z+1	; 0x01
    3d6c:	9a 83       	std	Y+2, r25	; 0x02
    3d6e:	89 83       	std	Y+1, r24	; 0x01
    3d70:	02 c0       	rjmp	.+4      	; 0x3d76 <prvGetNextExpireTime+0x58>
    3d72:	1a 82       	std	Y+2, r1	; 0x02
    3d74:	19 82       	std	Y+1, r1	; 0x01
    3d76:	89 81       	ldd	r24, Y+1	; 0x01
    3d78:	9a 81       	ldd	r25, Y+2	; 0x02
    3d7a:	0f 90       	pop	r0
    3d7c:	0f 90       	pop	r0
    3d7e:	0f 90       	pop	r0
    3d80:	0f 90       	pop	r0
    3d82:	df 91       	pop	r29
    3d84:	cf 91       	pop	r28
    3d86:	08 95       	ret

00003d88 <prvSampleTimeNow>:
    3d88:	cf 93       	push	r28
    3d8a:	df 93       	push	r29
    3d8c:	00 d0       	rcall	.+0      	; 0x3d8e <prvSampleTimeNow+0x6>
    3d8e:	1f 92       	push	r1
    3d90:	cd b7       	in	r28, 0x3d	; 61
    3d92:	de b7       	in	r29, 0x3e	; 62
    3d94:	9c 83       	std	Y+4, r25	; 0x04
    3d96:	8b 83       	std	Y+3, r24	; 0x03
    3d98:	0e 94 b5 13 	call	0x276a	; 0x276a <xTaskGetTickCount>
    3d9c:	9a 83       	std	Y+2, r25	; 0x02
    3d9e:	89 83       	std	Y+1, r24	; 0x01
    3da0:	80 91 b6 08 	lds	r24, 0x08B6	; 0x8008b6 <xLastTime.2432>
    3da4:	90 91 b7 08 	lds	r25, 0x08B7	; 0x8008b7 <xLastTime.2432+0x1>
    3da8:	29 81       	ldd	r18, Y+1	; 0x01
    3daa:	3a 81       	ldd	r19, Y+2	; 0x02
    3dac:	28 17       	cp	r18, r24
    3dae:	39 07       	cpc	r19, r25
    3db0:	38 f4       	brcc	.+14     	; 0x3dc0 <prvSampleTimeNow+0x38>
    3db2:	7c d1       	rcall	.+760    	; 0x40ac <prvSwitchTimerLists>
    3db4:	8b 81       	ldd	r24, Y+3	; 0x03
    3db6:	9c 81       	ldd	r25, Y+4	; 0x04
    3db8:	21 e0       	ldi	r18, 0x01	; 1
    3dba:	fc 01       	movw	r30, r24
    3dbc:	20 83       	st	Z, r18
    3dbe:	04 c0       	rjmp	.+8      	; 0x3dc8 <prvSampleTimeNow+0x40>
    3dc0:	8b 81       	ldd	r24, Y+3	; 0x03
    3dc2:	9c 81       	ldd	r25, Y+4	; 0x04
    3dc4:	fc 01       	movw	r30, r24
    3dc6:	10 82       	st	Z, r1
    3dc8:	89 81       	ldd	r24, Y+1	; 0x01
    3dca:	9a 81       	ldd	r25, Y+2	; 0x02
    3dcc:	90 93 b7 08 	sts	0x08B7, r25	; 0x8008b7 <xLastTime.2432+0x1>
    3dd0:	80 93 b6 08 	sts	0x08B6, r24	; 0x8008b6 <xLastTime.2432>
    3dd4:	89 81       	ldd	r24, Y+1	; 0x01
    3dd6:	9a 81       	ldd	r25, Y+2	; 0x02
    3dd8:	0f 90       	pop	r0
    3dda:	0f 90       	pop	r0
    3ddc:	0f 90       	pop	r0
    3dde:	0f 90       	pop	r0
    3de0:	df 91       	pop	r29
    3de2:	cf 91       	pop	r28
    3de4:	08 95       	ret

00003de6 <prvInsertTimerInActiveList>:
    3de6:	cf 93       	push	r28
    3de8:	df 93       	push	r29
    3dea:	cd b7       	in	r28, 0x3d	; 61
    3dec:	de b7       	in	r29, 0x3e	; 62
    3dee:	29 97       	sbiw	r28, 0x09	; 9
    3df0:	0f b6       	in	r0, 0x3f	; 63
    3df2:	f8 94       	cli
    3df4:	de bf       	out	0x3e, r29	; 62
    3df6:	0f be       	out	0x3f, r0	; 63
    3df8:	cd bf       	out	0x3d, r28	; 61
    3dfa:	9b 83       	std	Y+3, r25	; 0x03
    3dfc:	8a 83       	std	Y+2, r24	; 0x02
    3dfe:	7d 83       	std	Y+5, r23	; 0x05
    3e00:	6c 83       	std	Y+4, r22	; 0x04
    3e02:	5f 83       	std	Y+7, r21	; 0x07
    3e04:	4e 83       	std	Y+6, r20	; 0x06
    3e06:	39 87       	std	Y+9, r19	; 0x09
    3e08:	28 87       	std	Y+8, r18	; 0x08
    3e0a:	19 82       	std	Y+1, r1	; 0x01
    3e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    3e0e:	9b 81       	ldd	r25, Y+3	; 0x03
    3e10:	2c 81       	ldd	r18, Y+4	; 0x04
    3e12:	3d 81       	ldd	r19, Y+5	; 0x05
    3e14:	fc 01       	movw	r30, r24
    3e16:	33 83       	std	Z+3, r19	; 0x03
    3e18:	22 83       	std	Z+2, r18	; 0x02
    3e1a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e1c:	9b 81       	ldd	r25, Y+3	; 0x03
    3e1e:	2a 81       	ldd	r18, Y+2	; 0x02
    3e20:	3b 81       	ldd	r19, Y+3	; 0x03
    3e22:	fc 01       	movw	r30, r24
    3e24:	31 87       	std	Z+9, r19	; 0x09
    3e26:	20 87       	std	Z+8, r18	; 0x08
    3e28:	2c 81       	ldd	r18, Y+4	; 0x04
    3e2a:	3d 81       	ldd	r19, Y+5	; 0x05
    3e2c:	8e 81       	ldd	r24, Y+6	; 0x06
    3e2e:	9f 81       	ldd	r25, Y+7	; 0x07
    3e30:	82 17       	cp	r24, r18
    3e32:	93 07       	cpc	r25, r19
    3e34:	f0 f0       	brcs	.+60     	; 0x3e72 <prvInsertTimerInActiveList+0x8c>
    3e36:	2e 81       	ldd	r18, Y+6	; 0x06
    3e38:	3f 81       	ldd	r19, Y+7	; 0x07
    3e3a:	88 85       	ldd	r24, Y+8	; 0x08
    3e3c:	99 85       	ldd	r25, Y+9	; 0x09
    3e3e:	28 1b       	sub	r18, r24
    3e40:	39 0b       	sbc	r19, r25
    3e42:	8a 81       	ldd	r24, Y+2	; 0x02
    3e44:	9b 81       	ldd	r25, Y+3	; 0x03
    3e46:	fc 01       	movw	r30, r24
    3e48:	84 85       	ldd	r24, Z+12	; 0x0c
    3e4a:	95 85       	ldd	r25, Z+13	; 0x0d
    3e4c:	28 17       	cp	r18, r24
    3e4e:	39 07       	cpc	r19, r25
    3e50:	18 f0       	brcs	.+6      	; 0x3e58 <prvInsertTimerInActiveList+0x72>
    3e52:	81 e0       	ldi	r24, 0x01	; 1
    3e54:	89 83       	std	Y+1, r24	; 0x01
    3e56:	2a c0       	rjmp	.+84     	; 0x3eac <prvInsertTimerInActiveList+0xc6>
    3e58:	8a 81       	ldd	r24, Y+2	; 0x02
    3e5a:	9b 81       	ldd	r25, Y+3	; 0x03
    3e5c:	9c 01       	movw	r18, r24
    3e5e:	2e 5f       	subi	r18, 0xFE	; 254
    3e60:	3f 4f       	sbci	r19, 0xFF	; 255
    3e62:	80 91 b0 08 	lds	r24, 0x08B0	; 0x8008b0 <pxOverflowTimerList>
    3e66:	90 91 b1 08 	lds	r25, 0x08B1	; 0x8008b1 <pxOverflowTimerList+0x1>
    3e6a:	b9 01       	movw	r22, r18
    3e6c:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    3e70:	1d c0       	rjmp	.+58     	; 0x3eac <prvInsertTimerInActiveList+0xc6>
    3e72:	2e 81       	ldd	r18, Y+6	; 0x06
    3e74:	3f 81       	ldd	r19, Y+7	; 0x07
    3e76:	88 85       	ldd	r24, Y+8	; 0x08
    3e78:	99 85       	ldd	r25, Y+9	; 0x09
    3e7a:	28 17       	cp	r18, r24
    3e7c:	39 07       	cpc	r19, r25
    3e7e:	50 f4       	brcc	.+20     	; 0x3e94 <prvInsertTimerInActiveList+0xae>
    3e80:	2c 81       	ldd	r18, Y+4	; 0x04
    3e82:	3d 81       	ldd	r19, Y+5	; 0x05
    3e84:	88 85       	ldd	r24, Y+8	; 0x08
    3e86:	99 85       	ldd	r25, Y+9	; 0x09
    3e88:	28 17       	cp	r18, r24
    3e8a:	39 07       	cpc	r19, r25
    3e8c:	18 f0       	brcs	.+6      	; 0x3e94 <prvInsertTimerInActiveList+0xae>
    3e8e:	81 e0       	ldi	r24, 0x01	; 1
    3e90:	89 83       	std	Y+1, r24	; 0x01
    3e92:	0c c0       	rjmp	.+24     	; 0x3eac <prvInsertTimerInActiveList+0xc6>
    3e94:	8a 81       	ldd	r24, Y+2	; 0x02
    3e96:	9b 81       	ldd	r25, Y+3	; 0x03
    3e98:	9c 01       	movw	r18, r24
    3e9a:	2e 5f       	subi	r18, 0xFE	; 254
    3e9c:	3f 4f       	sbci	r19, 0xFF	; 255
    3e9e:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    3ea2:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    3ea6:	b9 01       	movw	r22, r18
    3ea8:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    3eac:	89 81       	ldd	r24, Y+1	; 0x01
    3eae:	29 96       	adiw	r28, 0x09	; 9
    3eb0:	0f b6       	in	r0, 0x3f	; 63
    3eb2:	f8 94       	cli
    3eb4:	de bf       	out	0x3e, r29	; 62
    3eb6:	0f be       	out	0x3f, r0	; 63
    3eb8:	cd bf       	out	0x3d, r28	; 61
    3eba:	df 91       	pop	r29
    3ebc:	cf 91       	pop	r28
    3ebe:	08 95       	ret

00003ec0 <prvProcessReceivedCommands>:
    3ec0:	0f 93       	push	r16
    3ec2:	1f 93       	push	r17
    3ec4:	cf 93       	push	r28
    3ec6:	df 93       	push	r29
    3ec8:	cd b7       	in	r28, 0x3d	; 61
    3eca:	de b7       	in	r29, 0x3e	; 62
    3ecc:	2b 97       	sbiw	r28, 0x0b	; 11
    3ece:	0f b6       	in	r0, 0x3f	; 63
    3ed0:	f8 94       	cli
    3ed2:	de bf       	out	0x3e, r29	; 62
    3ed4:	0f be       	out	0x3f, r0	; 63
    3ed6:	cd bf       	out	0x3d, r28	; 61
    3ed8:	ce c0       	rjmp	.+412    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3eda:	8e 81       	ldd	r24, Y+6	; 0x06
    3edc:	88 23       	and	r24, r24
    3ede:	0c f4       	brge	.+2      	; 0x3ee2 <prvProcessReceivedCommands+0x22>
    3ee0:	ca c0       	rjmp	.+404    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3ee2:	89 85       	ldd	r24, Y+9	; 0x09
    3ee4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ee6:	9a 83       	std	Y+2, r25	; 0x02
    3ee8:	89 83       	std	Y+1, r24	; 0x01
    3eea:	89 81       	ldd	r24, Y+1	; 0x01
    3eec:	9a 81       	ldd	r25, Y+2	; 0x02
    3eee:	dc 01       	movw	r26, r24
    3ef0:	1a 96       	adiw	r26, 0x0a	; 10
    3ef2:	8d 91       	ld	r24, X+
    3ef4:	9c 91       	ld	r25, X
    3ef6:	1b 97       	sbiw	r26, 0x0b	; 11
    3ef8:	89 2b       	or	r24, r25
    3efa:	29 f0       	breq	.+10     	; 0x3f06 <prvProcessReceivedCommands+0x46>
    3efc:	89 81       	ldd	r24, Y+1	; 0x01
    3efe:	9a 81       	ldd	r25, Y+2	; 0x02
    3f00:	02 96       	adiw	r24, 0x02	; 2
    3f02:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    3f06:	ce 01       	movw	r24, r28
    3f08:	0b 96       	adiw	r24, 0x0b	; 11
    3f0a:	3e df       	rcall	.-388    	; 0x3d88 <prvSampleTimeNow>
    3f0c:	9c 83       	std	Y+4, r25	; 0x04
    3f0e:	8b 83       	std	Y+3, r24	; 0x03
    3f10:	8e 81       	ldd	r24, Y+6	; 0x06
    3f12:	08 2e       	mov	r0, r24
    3f14:	00 0c       	add	r0, r0
    3f16:	99 0b       	sbc	r25, r25
    3f18:	09 2e       	mov	r0, r25
    3f1a:	00 0c       	add	r0, r0
    3f1c:	aa 0b       	sbc	r26, r26
    3f1e:	bb 0b       	sbc	r27, r27
    3f20:	40 e0       	ldi	r20, 0x00	; 0
    3f22:	50 e0       	ldi	r21, 0x00	; 0
    3f24:	29 e0       	ldi	r18, 0x09	; 9
    3f26:	30 e0       	ldi	r19, 0x00	; 0
    3f28:	84 1b       	sub	r24, r20
    3f2a:	95 0b       	sbc	r25, r21
    3f2c:	28 17       	cp	r18, r24
    3f2e:	39 07       	cpc	r19, r25
    3f30:	08 f4       	brcc	.+2      	; 0x3f34 <prvProcessReceivedCommands+0x74>
    3f32:	a0 c0       	rjmp	.+320    	; 0x4074 <prvProcessReceivedCommands+0x1b4>
    3f34:	fc 01       	movw	r30, r24
    3f36:	88 27       	eor	r24, r24
    3f38:	ee 58       	subi	r30, 0x8E	; 142
    3f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f3c:	8f 4f       	sbci	r24, 0xFF	; 255
    3f3e:	0c 94 8a 33 	jmp	0x6714	; 0x6714 <__tablejump2__>
    3f42:	89 81       	ldd	r24, Y+1	; 0x01
    3f44:	9a 81       	ldd	r25, Y+2	; 0x02
    3f46:	fc 01       	movw	r30, r24
    3f48:	83 89       	ldd	r24, Z+19	; 0x13
    3f4a:	28 2f       	mov	r18, r24
    3f4c:	21 60       	ori	r18, 0x01	; 1
    3f4e:	89 81       	ldd	r24, Y+1	; 0x01
    3f50:	9a 81       	ldd	r25, Y+2	; 0x02
    3f52:	dc 01       	movw	r26, r24
    3f54:	53 96       	adiw	r26, 0x13	; 19
    3f56:	2c 93       	st	X, r18
    3f58:	ef 81       	ldd	r30, Y+7	; 0x07
    3f5a:	f8 85       	ldd	r31, Y+8	; 0x08
    3f5c:	2f 81       	ldd	r18, Y+7	; 0x07
    3f5e:	38 85       	ldd	r19, Y+8	; 0x08
    3f60:	89 81       	ldd	r24, Y+1	; 0x01
    3f62:	9a 81       	ldd	r25, Y+2	; 0x02
    3f64:	dc 01       	movw	r26, r24
    3f66:	1c 96       	adiw	r26, 0x0c	; 12
    3f68:	8d 91       	ld	r24, X+
    3f6a:	9c 91       	ld	r25, X
    3f6c:	1d 97       	sbiw	r26, 0x0d	; 13
    3f6e:	b9 01       	movw	r22, r18
    3f70:	68 0f       	add	r22, r24
    3f72:	79 1f       	adc	r23, r25
    3f74:	4b 81       	ldd	r20, Y+3	; 0x03
    3f76:	5c 81       	ldd	r21, Y+4	; 0x04
    3f78:	89 81       	ldd	r24, Y+1	; 0x01
    3f7a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f7c:	9f 01       	movw	r18, r30
    3f7e:	33 df       	rcall	.-410    	; 0x3de6 <prvInsertTimerInActiveList>
    3f80:	88 23       	and	r24, r24
    3f82:	09 f4       	brne	.+2      	; 0x3f86 <prvProcessReceivedCommands+0xc6>
    3f84:	78 c0       	rjmp	.+240    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3f86:	89 81       	ldd	r24, Y+1	; 0x01
    3f88:	9a 81       	ldd	r25, Y+2	; 0x02
    3f8a:	fc 01       	movw	r30, r24
    3f8c:	20 89       	ldd	r18, Z+16	; 0x10
    3f8e:	31 89       	ldd	r19, Z+17	; 0x11
    3f90:	89 81       	ldd	r24, Y+1	; 0x01
    3f92:	9a 81       	ldd	r25, Y+2	; 0x02
    3f94:	f9 01       	movw	r30, r18
    3f96:	19 95       	eicall
    3f98:	89 81       	ldd	r24, Y+1	; 0x01
    3f9a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f9c:	dc 01       	movw	r26, r24
    3f9e:	53 96       	adiw	r26, 0x13	; 19
    3fa0:	8c 91       	ld	r24, X
    3fa2:	88 2f       	mov	r24, r24
    3fa4:	90 e0       	ldi	r25, 0x00	; 0
    3fa6:	84 70       	andi	r24, 0x04	; 4
    3fa8:	99 27       	eor	r25, r25
    3faa:	89 2b       	or	r24, r25
    3fac:	09 f4       	brne	.+2      	; 0x3fb0 <prvProcessReceivedCommands+0xf0>
    3fae:	63 c0       	rjmp	.+198    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3fb0:	2f 81       	ldd	r18, Y+7	; 0x07
    3fb2:	38 85       	ldd	r19, Y+8	; 0x08
    3fb4:	89 81       	ldd	r24, Y+1	; 0x01
    3fb6:	9a 81       	ldd	r25, Y+2	; 0x02
    3fb8:	fc 01       	movw	r30, r24
    3fba:	84 85       	ldd	r24, Z+12	; 0x0c
    3fbc:	95 85       	ldd	r25, Z+13	; 0x0d
    3fbe:	a9 01       	movw	r20, r18
    3fc0:	48 0f       	add	r20, r24
    3fc2:	59 1f       	adc	r21, r25
    3fc4:	89 81       	ldd	r24, Y+1	; 0x01
    3fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    3fc8:	00 e0       	ldi	r16, 0x00	; 0
    3fca:	10 e0       	ldi	r17, 0x00	; 0
    3fcc:	20 e0       	ldi	r18, 0x00	; 0
    3fce:	30 e0       	ldi	r19, 0x00	; 0
    3fd0:	60 e0       	ldi	r22, 0x00	; 0
    3fd2:	86 dd       	rcall	.-1268   	; 0x3ae0 <xTimerGenericCommand>
    3fd4:	8d 83       	std	Y+5, r24	; 0x05
    3fd6:	4f c0       	rjmp	.+158    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3fd8:	89 81       	ldd	r24, Y+1	; 0x01
    3fda:	9a 81       	ldd	r25, Y+2	; 0x02
    3fdc:	dc 01       	movw	r26, r24
    3fde:	53 96       	adiw	r26, 0x13	; 19
    3fe0:	8c 91       	ld	r24, X
    3fe2:	28 2f       	mov	r18, r24
    3fe4:	2e 7f       	andi	r18, 0xFE	; 254
    3fe6:	89 81       	ldd	r24, Y+1	; 0x01
    3fe8:	9a 81       	ldd	r25, Y+2	; 0x02
    3fea:	fc 01       	movw	r30, r24
    3fec:	23 8b       	std	Z+19, r18	; 0x13
    3fee:	43 c0       	rjmp	.+134    	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    3ff0:	89 81       	ldd	r24, Y+1	; 0x01
    3ff2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ff4:	dc 01       	movw	r26, r24
    3ff6:	53 96       	adiw	r26, 0x13	; 19
    3ff8:	8c 91       	ld	r24, X
    3ffa:	28 2f       	mov	r18, r24
    3ffc:	21 60       	ori	r18, 0x01	; 1
    3ffe:	89 81       	ldd	r24, Y+1	; 0x01
    4000:	9a 81       	ldd	r25, Y+2	; 0x02
    4002:	fc 01       	movw	r30, r24
    4004:	23 8b       	std	Z+19, r18	; 0x13
    4006:	2f 81       	ldd	r18, Y+7	; 0x07
    4008:	38 85       	ldd	r19, Y+8	; 0x08
    400a:	89 81       	ldd	r24, Y+1	; 0x01
    400c:	9a 81       	ldd	r25, Y+2	; 0x02
    400e:	dc 01       	movw	r26, r24
    4010:	1d 96       	adiw	r26, 0x0d	; 13
    4012:	3c 93       	st	X, r19
    4014:	2e 93       	st	-X, r18
    4016:	1c 97       	sbiw	r26, 0x0c	; 12
    4018:	89 81       	ldd	r24, Y+1	; 0x01
    401a:	9a 81       	ldd	r25, Y+2	; 0x02
    401c:	fc 01       	movw	r30, r24
    401e:	24 85       	ldd	r18, Z+12	; 0x0c
    4020:	35 85       	ldd	r19, Z+13	; 0x0d
    4022:	8b 81       	ldd	r24, Y+3	; 0x03
    4024:	9c 81       	ldd	r25, Y+4	; 0x04
    4026:	b9 01       	movw	r22, r18
    4028:	68 0f       	add	r22, r24
    402a:	79 1f       	adc	r23, r25
    402c:	2b 81       	ldd	r18, Y+3	; 0x03
    402e:	3c 81       	ldd	r19, Y+4	; 0x04
    4030:	4b 81       	ldd	r20, Y+3	; 0x03
    4032:	5c 81       	ldd	r21, Y+4	; 0x04
    4034:	89 81       	ldd	r24, Y+1	; 0x01
    4036:	9a 81       	ldd	r25, Y+2	; 0x02
    4038:	d6 de       	rcall	.-596    	; 0x3de6 <prvInsertTimerInActiveList>
    403a:	1d c0       	rjmp	.+58     	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    403c:	89 81       	ldd	r24, Y+1	; 0x01
    403e:	9a 81       	ldd	r25, Y+2	; 0x02
    4040:	dc 01       	movw	r26, r24
    4042:	53 96       	adiw	r26, 0x13	; 19
    4044:	8c 91       	ld	r24, X
    4046:	88 2f       	mov	r24, r24
    4048:	90 e0       	ldi	r25, 0x00	; 0
    404a:	82 70       	andi	r24, 0x02	; 2
    404c:	99 27       	eor	r25, r25
    404e:	89 2b       	or	r24, r25
    4050:	29 f4       	brne	.+10     	; 0x405c <prvProcessReceivedCommands+0x19c>
    4052:	89 81       	ldd	r24, Y+1	; 0x01
    4054:	9a 81       	ldd	r25, Y+2	; 0x02
    4056:	0e 94 ae 01 	call	0x35c	; 0x35c <vPortFree>
    405a:	0d c0       	rjmp	.+26     	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    405c:	89 81       	ldd	r24, Y+1	; 0x01
    405e:	9a 81       	ldd	r25, Y+2	; 0x02
    4060:	fc 01       	movw	r30, r24
    4062:	83 89       	ldd	r24, Z+19	; 0x13
    4064:	28 2f       	mov	r18, r24
    4066:	2e 7f       	andi	r18, 0xFE	; 254
    4068:	89 81       	ldd	r24, Y+1	; 0x01
    406a:	9a 81       	ldd	r25, Y+2	; 0x02
    406c:	dc 01       	movw	r26, r24
    406e:	53 96       	adiw	r26, 0x13	; 19
    4070:	2c 93       	st	X, r18
    4072:	01 c0       	rjmp	.+2      	; 0x4076 <prvProcessReceivedCommands+0x1b6>
    4074:	00 00       	nop
    4076:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    407a:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    407e:	9e 01       	movw	r18, r28
    4080:	2a 5f       	subi	r18, 0xFA	; 250
    4082:	3f 4f       	sbci	r19, 0xFF	; 255
    4084:	40 e0       	ldi	r20, 0x00	; 0
    4086:	50 e0       	ldi	r21, 0x00	; 0
    4088:	b9 01       	movw	r22, r18
    408a:	0e 94 88 08 	call	0x1110	; 0x1110 <xQueueReceive>
    408e:	88 23       	and	r24, r24
    4090:	09 f0       	breq	.+2      	; 0x4094 <prvProcessReceivedCommands+0x1d4>
    4092:	23 cf       	rjmp	.-442    	; 0x3eda <prvProcessReceivedCommands+0x1a>
    4094:	00 00       	nop
    4096:	2b 96       	adiw	r28, 0x0b	; 11
    4098:	0f b6       	in	r0, 0x3f	; 63
    409a:	f8 94       	cli
    409c:	de bf       	out	0x3e, r29	; 62
    409e:	0f be       	out	0x3f, r0	; 63
    40a0:	cd bf       	out	0x3d, r28	; 61
    40a2:	df 91       	pop	r29
    40a4:	cf 91       	pop	r28
    40a6:	1f 91       	pop	r17
    40a8:	0f 91       	pop	r16
    40aa:	08 95       	ret

000040ac <prvSwitchTimerLists>:
    40ac:	0f 93       	push	r16
    40ae:	1f 93       	push	r17
    40b0:	cf 93       	push	r28
    40b2:	df 93       	push	r29
    40b4:	cd b7       	in	r28, 0x3d	; 61
    40b6:	de b7       	in	r29, 0x3e	; 62
    40b8:	29 97       	sbiw	r28, 0x09	; 9
    40ba:	0f b6       	in	r0, 0x3f	; 63
    40bc:	f8 94       	cli
    40be:	de bf       	out	0x3e, r29	; 62
    40c0:	0f be       	out	0x3f, r0	; 63
    40c2:	cd bf       	out	0x3d, r28	; 61
    40c4:	68 c0       	rjmp	.+208    	; 0x4196 <prvSwitchTimerLists+0xea>
    40c6:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    40ca:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    40ce:	fc 01       	movw	r30, r24
    40d0:	85 81       	ldd	r24, Z+5	; 0x05
    40d2:	96 81       	ldd	r25, Z+6	; 0x06
    40d4:	fc 01       	movw	r30, r24
    40d6:	80 81       	ld	r24, Z
    40d8:	91 81       	ldd	r25, Z+1	; 0x01
    40da:	9a 83       	std	Y+2, r25	; 0x02
    40dc:	89 83       	std	Y+1, r24	; 0x01
    40de:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    40e2:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    40e6:	fc 01       	movw	r30, r24
    40e8:	85 81       	ldd	r24, Z+5	; 0x05
    40ea:	96 81       	ldd	r25, Z+6	; 0x06
    40ec:	fc 01       	movw	r30, r24
    40ee:	86 81       	ldd	r24, Z+6	; 0x06
    40f0:	97 81       	ldd	r25, Z+7	; 0x07
    40f2:	9c 83       	std	Y+4, r25	; 0x04
    40f4:	8b 83       	std	Y+3, r24	; 0x03
    40f6:	8b 81       	ldd	r24, Y+3	; 0x03
    40f8:	9c 81       	ldd	r25, Y+4	; 0x04
    40fa:	02 96       	adiw	r24, 0x02	; 2
    40fc:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <uxListRemove>
    4100:	8b 81       	ldd	r24, Y+3	; 0x03
    4102:	9c 81       	ldd	r25, Y+4	; 0x04
    4104:	fc 01       	movw	r30, r24
    4106:	20 89       	ldd	r18, Z+16	; 0x10
    4108:	31 89       	ldd	r19, Z+17	; 0x11
    410a:	8b 81       	ldd	r24, Y+3	; 0x03
    410c:	9c 81       	ldd	r25, Y+4	; 0x04
    410e:	f9 01       	movw	r30, r18
    4110:	19 95       	eicall
    4112:	8b 81       	ldd	r24, Y+3	; 0x03
    4114:	9c 81       	ldd	r25, Y+4	; 0x04
    4116:	fc 01       	movw	r30, r24
    4118:	83 89       	ldd	r24, Z+19	; 0x13
    411a:	88 2f       	mov	r24, r24
    411c:	90 e0       	ldi	r25, 0x00	; 0
    411e:	84 70       	andi	r24, 0x04	; 4
    4120:	99 27       	eor	r25, r25
    4122:	89 2b       	or	r24, r25
    4124:	c1 f1       	breq	.+112    	; 0x4196 <prvSwitchTimerLists+0xea>
    4126:	8b 81       	ldd	r24, Y+3	; 0x03
    4128:	9c 81       	ldd	r25, Y+4	; 0x04
    412a:	fc 01       	movw	r30, r24
    412c:	24 85       	ldd	r18, Z+12	; 0x0c
    412e:	35 85       	ldd	r19, Z+13	; 0x0d
    4130:	89 81       	ldd	r24, Y+1	; 0x01
    4132:	9a 81       	ldd	r25, Y+2	; 0x02
    4134:	82 0f       	add	r24, r18
    4136:	93 1f       	adc	r25, r19
    4138:	9e 83       	std	Y+6, r25	; 0x06
    413a:	8d 83       	std	Y+5, r24	; 0x05
    413c:	2d 81       	ldd	r18, Y+5	; 0x05
    413e:	3e 81       	ldd	r19, Y+6	; 0x06
    4140:	89 81       	ldd	r24, Y+1	; 0x01
    4142:	9a 81       	ldd	r25, Y+2	; 0x02
    4144:	82 17       	cp	r24, r18
    4146:	93 07       	cpc	r25, r19
    4148:	d8 f4       	brcc	.+54     	; 0x4180 <prvSwitchTimerLists+0xd4>
    414a:	8b 81       	ldd	r24, Y+3	; 0x03
    414c:	9c 81       	ldd	r25, Y+4	; 0x04
    414e:	2d 81       	ldd	r18, Y+5	; 0x05
    4150:	3e 81       	ldd	r19, Y+6	; 0x06
    4152:	fc 01       	movw	r30, r24
    4154:	33 83       	std	Z+3, r19	; 0x03
    4156:	22 83       	std	Z+2, r18	; 0x02
    4158:	8b 81       	ldd	r24, Y+3	; 0x03
    415a:	9c 81       	ldd	r25, Y+4	; 0x04
    415c:	2b 81       	ldd	r18, Y+3	; 0x03
    415e:	3c 81       	ldd	r19, Y+4	; 0x04
    4160:	fc 01       	movw	r30, r24
    4162:	31 87       	std	Z+9, r19	; 0x09
    4164:	20 87       	std	Z+8, r18	; 0x08
    4166:	8b 81       	ldd	r24, Y+3	; 0x03
    4168:	9c 81       	ldd	r25, Y+4	; 0x04
    416a:	9c 01       	movw	r18, r24
    416c:	2e 5f       	subi	r18, 0xFE	; 254
    416e:	3f 4f       	sbci	r19, 0xFF	; 255
    4170:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    4174:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    4178:	b9 01       	movw	r22, r18
    417a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <vListInsert>
    417e:	0b c0       	rjmp	.+22     	; 0x4196 <prvSwitchTimerLists+0xea>
    4180:	49 81       	ldd	r20, Y+1	; 0x01
    4182:	5a 81       	ldd	r21, Y+2	; 0x02
    4184:	8b 81       	ldd	r24, Y+3	; 0x03
    4186:	9c 81       	ldd	r25, Y+4	; 0x04
    4188:	00 e0       	ldi	r16, 0x00	; 0
    418a:	10 e0       	ldi	r17, 0x00	; 0
    418c:	20 e0       	ldi	r18, 0x00	; 0
    418e:	30 e0       	ldi	r19, 0x00	; 0
    4190:	60 e0       	ldi	r22, 0x00	; 0
    4192:	a6 dc       	rcall	.-1716   	; 0x3ae0 <xTimerGenericCommand>
    4194:	8f 83       	std	Y+7, r24	; 0x07
    4196:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    419a:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    419e:	fc 01       	movw	r30, r24
    41a0:	80 81       	ld	r24, Z
    41a2:	88 23       	and	r24, r24
    41a4:	09 f0       	breq	.+2      	; 0x41a8 <prvSwitchTimerLists+0xfc>
    41a6:	8f cf       	rjmp	.-226    	; 0x40c6 <prvSwitchTimerLists+0x1a>
    41a8:	80 91 ae 08 	lds	r24, 0x08AE	; 0x8008ae <pxCurrentTimerList>
    41ac:	90 91 af 08 	lds	r25, 0x08AF	; 0x8008af <pxCurrentTimerList+0x1>
    41b0:	99 87       	std	Y+9, r25	; 0x09
    41b2:	88 87       	std	Y+8, r24	; 0x08
    41b4:	80 91 b0 08 	lds	r24, 0x08B0	; 0x8008b0 <pxOverflowTimerList>
    41b8:	90 91 b1 08 	lds	r25, 0x08B1	; 0x8008b1 <pxOverflowTimerList+0x1>
    41bc:	90 93 af 08 	sts	0x08AF, r25	; 0x8008af <pxCurrentTimerList+0x1>
    41c0:	80 93 ae 08 	sts	0x08AE, r24	; 0x8008ae <pxCurrentTimerList>
    41c4:	88 85       	ldd	r24, Y+8	; 0x08
    41c6:	99 85       	ldd	r25, Y+9	; 0x09
    41c8:	90 93 b1 08 	sts	0x08B1, r25	; 0x8008b1 <pxOverflowTimerList+0x1>
    41cc:	80 93 b0 08 	sts	0x08B0, r24	; 0x8008b0 <pxOverflowTimerList>
    41d0:	00 00       	nop
    41d2:	29 96       	adiw	r28, 0x09	; 9
    41d4:	0f b6       	in	r0, 0x3f	; 63
    41d6:	f8 94       	cli
    41d8:	de bf       	out	0x3e, r29	; 62
    41da:	0f be       	out	0x3f, r0	; 63
    41dc:	cd bf       	out	0x3d, r28	; 61
    41de:	df 91       	pop	r29
    41e0:	cf 91       	pop	r28
    41e2:	1f 91       	pop	r17
    41e4:	0f 91       	pop	r16
    41e6:	08 95       	ret

000041e8 <prvCheckForValidListAndQueue>:
    41e8:	cf 93       	push	r28
    41ea:	df 93       	push	r29
    41ec:	cd b7       	in	r28, 0x3d	; 61
    41ee:	de b7       	in	r29, 0x3e	; 62
    41f0:	0f b6       	in	r0, 0x3f	; 63
    41f2:	f8 94       	cli
    41f4:	0f 92       	push	r0
    41f6:	80 91 b2 08 	lds	r24, 0x08B2	; 0x8008b2 <xTimerQueue>
    41fa:	90 91 b3 08 	lds	r25, 0x08B3	; 0x8008b3 <xTimerQueue+0x1>
    41fe:	89 2b       	or	r24, r25
    4200:	e9 f4       	brne	.+58     	; 0x423c <prvCheckForValidListAndQueue+0x54>
    4202:	8c e9       	ldi	r24, 0x9C	; 156
    4204:	98 e0       	ldi	r25, 0x08	; 8
    4206:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    420a:	85 ea       	ldi	r24, 0xA5	; 165
    420c:	98 e0       	ldi	r25, 0x08	; 8
    420e:	0e 94 c8 01 	call	0x390	; 0x390 <vListInitialise>
    4212:	8c e9       	ldi	r24, 0x9C	; 156
    4214:	98 e0       	ldi	r25, 0x08	; 8
    4216:	90 93 af 08 	sts	0x08AF, r25	; 0x8008af <pxCurrentTimerList+0x1>
    421a:	80 93 ae 08 	sts	0x08AE, r24	; 0x8008ae <pxCurrentTimerList>
    421e:	85 ea       	ldi	r24, 0xA5	; 165
    4220:	98 e0       	ldi	r25, 0x08	; 8
    4222:	90 93 b1 08 	sts	0x08B1, r25	; 0x8008b1 <pxOverflowTimerList+0x1>
    4226:	80 93 b0 08 	sts	0x08B0, r24	; 0x8008b0 <pxOverflowTimerList>
    422a:	40 e0       	ldi	r20, 0x00	; 0
    422c:	65 e0       	ldi	r22, 0x05	; 5
    422e:	8a e0       	ldi	r24, 0x0A	; 10
    4230:	0e 94 a9 06 	call	0xd52	; 0xd52 <xQueueGenericCreate>
    4234:	90 93 b3 08 	sts	0x08B3, r25	; 0x8008b3 <xTimerQueue+0x1>
    4238:	80 93 b2 08 	sts	0x08B2, r24	; 0x8008b2 <xTimerQueue>
    423c:	0f 90       	pop	r0
    423e:	0f be       	out	0x3f, r0	; 63
    4240:	00 00       	nop
    4242:	df 91       	pop	r29
    4244:	cf 91       	pop	r28
    4246:	08 95       	ret

00004248 <vApplicationIdleHook>:
    4248:	cf 93       	push	r28
    424a:	df 93       	push	r29
    424c:	cd b7       	in	r28, 0x3d	; 61
    424e:	de b7       	in	r29, 0x3e	; 62
    4250:	00 00       	nop
    4252:	df 91       	pop	r29
    4254:	cf 91       	pop	r28
    4256:	08 95       	ret

00004258 <vApplicationMallocFailedHook>:
    4258:	cf 93       	push	r28
    425a:	df 93       	push	r29
    425c:	cd b7       	in	r28, 0x3d	; 61
    425e:	de b7       	in	r29, 0x3e	; 62
    4260:	2e 97       	sbiw	r28, 0x0e	; 14
    4262:	0f b6       	in	r0, 0x3f	; 63
    4264:	f8 94       	cli
    4266:	de bf       	out	0x3e, r29	; 62
    4268:	0f be       	out	0x3f, r0	; 63
    426a:	cd bf       	out	0x3d, r28	; 61
    426c:	84 e2       	ldi	r24, 0x24	; 36
    426e:	90 e0       	ldi	r25, 0x00	; 0
    4270:	24 e2       	ldi	r18, 0x24	; 36
    4272:	30 e0       	ldi	r19, 0x00	; 0
    4274:	f9 01       	movw	r30, r18
    4276:	20 81       	ld	r18, Z
    4278:	20 68       	ori	r18, 0x80	; 128
    427a:	fc 01       	movw	r30, r24
    427c:	20 83       	st	Z, r18
    427e:	85 e2       	ldi	r24, 0x25	; 37
    4280:	90 e0       	ldi	r25, 0x00	; 0
    4282:	25 e2       	ldi	r18, 0x25	; 37
    4284:	30 e0       	ldi	r19, 0x00	; 0
    4286:	f9 01       	movw	r30, r18
    4288:	20 81       	ld	r18, Z
    428a:	20 68       	ori	r18, 0x80	; 128
    428c:	fc 01       	movw	r30, r24
    428e:	20 83       	st	Z, r18
    4290:	80 e0       	ldi	r24, 0x00	; 0
    4292:	90 e0       	ldi	r25, 0x00	; 0
    4294:	a8 e4       	ldi	r26, 0x48	; 72
    4296:	b2 e4       	ldi	r27, 0x42	; 66
    4298:	89 83       	std	Y+1, r24	; 0x01
    429a:	9a 83       	std	Y+2, r25	; 0x02
    429c:	ab 83       	std	Y+3, r26	; 0x03
    429e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    42a0:	20 e0       	ldi	r18, 0x00	; 0
    42a2:	30 e0       	ldi	r19, 0x00	; 0
    42a4:	4a e7       	ldi	r20, 0x7A	; 122
    42a6:	55 e4       	ldi	r21, 0x45	; 69
    42a8:	69 81       	ldd	r22, Y+1	; 0x01
    42aa:	7a 81       	ldd	r23, Y+2	; 0x02
    42ac:	8b 81       	ldd	r24, Y+3	; 0x03
    42ae:	9c 81       	ldd	r25, Y+4	; 0x04
    42b0:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    42b4:	dc 01       	movw	r26, r24
    42b6:	cb 01       	movw	r24, r22
    42b8:	8d 83       	std	Y+5, r24	; 0x05
    42ba:	9e 83       	std	Y+6, r25	; 0x06
    42bc:	af 83       	std	Y+7, r26	; 0x07
    42be:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    42c0:	20 e0       	ldi	r18, 0x00	; 0
    42c2:	30 e0       	ldi	r19, 0x00	; 0
    42c4:	40 e8       	ldi	r20, 0x80	; 128
    42c6:	5f e3       	ldi	r21, 0x3F	; 63
    42c8:	6d 81       	ldd	r22, Y+5	; 0x05
    42ca:	7e 81       	ldd	r23, Y+6	; 0x06
    42cc:	8f 81       	ldd	r24, Y+7	; 0x07
    42ce:	98 85       	ldd	r25, Y+8	; 0x08
    42d0:	0e 94 f7 33 	call	0x67ee	; 0x67ee <__cmpsf2>
    42d4:	88 23       	and	r24, r24
    42d6:	2c f4       	brge	.+10     	; 0x42e2 <vApplicationMallocFailedHook+0x8a>
		__ticks = 1;
    42d8:	81 e0       	ldi	r24, 0x01	; 1
    42da:	90 e0       	ldi	r25, 0x00	; 0
    42dc:	9a 87       	std	Y+10, r25	; 0x0a
    42de:	89 87       	std	Y+9, r24	; 0x09
    42e0:	3f c0       	rjmp	.+126    	; 0x4360 <vApplicationMallocFailedHook+0x108>
	else if (__tmp > 65535)
    42e2:	20 e0       	ldi	r18, 0x00	; 0
    42e4:	3f ef       	ldi	r19, 0xFF	; 255
    42e6:	4f e7       	ldi	r20, 0x7F	; 127
    42e8:	57 e4       	ldi	r21, 0x47	; 71
    42ea:	6d 81       	ldd	r22, Y+5	; 0x05
    42ec:	7e 81       	ldd	r23, Y+6	; 0x06
    42ee:	8f 81       	ldd	r24, Y+7	; 0x07
    42f0:	98 85       	ldd	r25, Y+8	; 0x08
    42f2:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <__gesf2>
    42f6:	18 16       	cp	r1, r24
    42f8:	4c f5       	brge	.+82     	; 0x434c <vApplicationMallocFailedHook+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42fa:	20 e0       	ldi	r18, 0x00	; 0
    42fc:	30 e0       	ldi	r19, 0x00	; 0
    42fe:	40 e2       	ldi	r20, 0x20	; 32
    4300:	51 e4       	ldi	r21, 0x41	; 65
    4302:	69 81       	ldd	r22, Y+1	; 0x01
    4304:	7a 81       	ldd	r23, Y+2	; 0x02
    4306:	8b 81       	ldd	r24, Y+3	; 0x03
    4308:	9c 81       	ldd	r25, Y+4	; 0x04
    430a:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    430e:	dc 01       	movw	r26, r24
    4310:	cb 01       	movw	r24, r22
    4312:	bc 01       	movw	r22, r24
    4314:	cd 01       	movw	r24, r26
    4316:	0e 94 68 34 	call	0x68d0	; 0x68d0 <__fixunssfsi>
    431a:	dc 01       	movw	r26, r24
    431c:	cb 01       	movw	r24, r22
    431e:	9a 87       	std	Y+10, r25	; 0x0a
    4320:	89 87       	std	Y+9, r24	; 0x09
    4322:	0f c0       	rjmp	.+30     	; 0x4342 <vApplicationMallocFailedHook+0xea>
    4324:	80 e9       	ldi	r24, 0x90	; 144
    4326:	91 e0       	ldi	r25, 0x01	; 1
    4328:	9c 87       	std	Y+12, r25	; 0x0c
    432a:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    432c:	8b 85       	ldd	r24, Y+11	; 0x0b
    432e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4330:	01 97       	sbiw	r24, 0x01	; 1
    4332:	f1 f7       	brne	.-4      	; 0x4330 <vApplicationMallocFailedHook+0xd8>
    4334:	9c 87       	std	Y+12, r25	; 0x0c
    4336:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4338:	89 85       	ldd	r24, Y+9	; 0x09
    433a:	9a 85       	ldd	r25, Y+10	; 0x0a
    433c:	01 97       	sbiw	r24, 0x01	; 1
    433e:	9a 87       	std	Y+10, r25	; 0x0a
    4340:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4342:	89 85       	ldd	r24, Y+9	; 0x09
    4344:	9a 85       	ldd	r25, Y+10	; 0x0a
    4346:	89 2b       	or	r24, r25
    4348:	69 f7       	brne	.-38     	; 0x4324 <vApplicationMallocFailedHook+0xcc>
    434a:	14 c0       	rjmp	.+40     	; 0x4374 <vApplicationMallocFailedHook+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    434c:	6d 81       	ldd	r22, Y+5	; 0x05
    434e:	7e 81       	ldd	r23, Y+6	; 0x06
    4350:	8f 81       	ldd	r24, Y+7	; 0x07
    4352:	98 85       	ldd	r25, Y+8	; 0x08
    4354:	0e 94 68 34 	call	0x68d0	; 0x68d0 <__fixunssfsi>
    4358:	dc 01       	movw	r26, r24
    435a:	cb 01       	movw	r24, r22
    435c:	9a 87       	std	Y+10, r25	; 0x0a
    435e:	89 87       	std	Y+9, r24	; 0x09
    4360:	89 85       	ldd	r24, Y+9	; 0x09
    4362:	9a 85       	ldd	r25, Y+10	; 0x0a
    4364:	9e 87       	std	Y+14, r25	; 0x0e
    4366:	8d 87       	std	Y+13, r24	; 0x0d
    4368:	8d 85       	ldd	r24, Y+13	; 0x0d
    436a:	9e 85       	ldd	r25, Y+14	; 0x0e
    436c:	01 97       	sbiw	r24, 0x01	; 1
    436e:	f1 f7       	brne	.-4      	; 0x436c <vApplicationMallocFailedHook+0x114>
    4370:	9e 87       	std	Y+14, r25	; 0x0e
    4372:	8d 87       	std	Y+13, r24	; 0x0d
    4374:	83 e2       	ldi	r24, 0x23	; 35
    4376:	90 e0       	ldi	r25, 0x00	; 0
    4378:	23 e2       	ldi	r18, 0x23	; 35
    437a:	30 e0       	ldi	r19, 0x00	; 0
    437c:	f9 01       	movw	r30, r18
    437e:	20 81       	ld	r18, Z
    4380:	20 68       	ori	r18, 0x80	; 128
    4382:	fc 01       	movw	r30, r24
    4384:	20 83       	st	Z, r18
    4386:	84 cf       	rjmp	.-248    	; 0x4290 <vApplicationMallocFailedHook+0x38>

00004388 <vApplicationStackOverflowHook>:
    4388:	cf 93       	push	r28
    438a:	df 93       	push	r29
    438c:	cd b7       	in	r28, 0x3d	; 61
    438e:	de b7       	in	r29, 0x3e	; 62
    4390:	62 97       	sbiw	r28, 0x12	; 18
    4392:	0f b6       	in	r0, 0x3f	; 63
    4394:	f8 94       	cli
    4396:	de bf       	out	0x3e, r29	; 62
    4398:	0f be       	out	0x3f, r0	; 63
    439a:	cd bf       	out	0x3d, r28	; 61
    439c:	98 8b       	std	Y+16, r25	; 0x10
    439e:	8f 87       	std	Y+15, r24	; 0x0f
    43a0:	7a 8b       	std	Y+18, r23	; 0x12
    43a2:	69 8b       	std	Y+17, r22	; 0x11
    43a4:	84 e2       	ldi	r24, 0x24	; 36
    43a6:	90 e0       	ldi	r25, 0x00	; 0
    43a8:	24 e2       	ldi	r18, 0x24	; 36
    43aa:	30 e0       	ldi	r19, 0x00	; 0
    43ac:	f9 01       	movw	r30, r18
    43ae:	20 81       	ld	r18, Z
    43b0:	20 68       	ori	r18, 0x80	; 128
    43b2:	fc 01       	movw	r30, r24
    43b4:	20 83       	st	Z, r18
    43b6:	85 e2       	ldi	r24, 0x25	; 37
    43b8:	90 e0       	ldi	r25, 0x00	; 0
    43ba:	25 e2       	ldi	r18, 0x25	; 37
    43bc:	30 e0       	ldi	r19, 0x00	; 0
    43be:	f9 01       	movw	r30, r18
    43c0:	20 81       	ld	r18, Z
    43c2:	20 68       	ori	r18, 0x80	; 128
    43c4:	fc 01       	movw	r30, r24
    43c6:	20 83       	st	Z, r18
    43c8:	80 e0       	ldi	r24, 0x00	; 0
    43ca:	90 e0       	ldi	r25, 0x00	; 0
    43cc:	aa ef       	ldi	r26, 0xFA	; 250
    43ce:	b4 e4       	ldi	r27, 0x44	; 68
    43d0:	89 83       	std	Y+1, r24	; 0x01
    43d2:	9a 83       	std	Y+2, r25	; 0x02
    43d4:	ab 83       	std	Y+3, r26	; 0x03
    43d6:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    43d8:	20 e0       	ldi	r18, 0x00	; 0
    43da:	30 e0       	ldi	r19, 0x00	; 0
    43dc:	4a e7       	ldi	r20, 0x7A	; 122
    43de:	55 e4       	ldi	r21, 0x45	; 69
    43e0:	69 81       	ldd	r22, Y+1	; 0x01
    43e2:	7a 81       	ldd	r23, Y+2	; 0x02
    43e4:	8b 81       	ldd	r24, Y+3	; 0x03
    43e6:	9c 81       	ldd	r25, Y+4	; 0x04
    43e8:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    43ec:	dc 01       	movw	r26, r24
    43ee:	cb 01       	movw	r24, r22
    43f0:	8d 83       	std	Y+5, r24	; 0x05
    43f2:	9e 83       	std	Y+6, r25	; 0x06
    43f4:	af 83       	std	Y+7, r26	; 0x07
    43f6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    43f8:	20 e0       	ldi	r18, 0x00	; 0
    43fa:	30 e0       	ldi	r19, 0x00	; 0
    43fc:	40 e8       	ldi	r20, 0x80	; 128
    43fe:	5f e3       	ldi	r21, 0x3F	; 63
    4400:	6d 81       	ldd	r22, Y+5	; 0x05
    4402:	7e 81       	ldd	r23, Y+6	; 0x06
    4404:	8f 81       	ldd	r24, Y+7	; 0x07
    4406:	98 85       	ldd	r25, Y+8	; 0x08
    4408:	0e 94 f7 33 	call	0x67ee	; 0x67ee <__cmpsf2>
    440c:	88 23       	and	r24, r24
    440e:	2c f4       	brge	.+10     	; 0x441a <vApplicationStackOverflowHook+0x92>
		__ticks = 1;
    4410:	81 e0       	ldi	r24, 0x01	; 1
    4412:	90 e0       	ldi	r25, 0x00	; 0
    4414:	9a 87       	std	Y+10, r25	; 0x0a
    4416:	89 87       	std	Y+9, r24	; 0x09
    4418:	3f c0       	rjmp	.+126    	; 0x4498 <vApplicationStackOverflowHook+0x110>
	else if (__tmp > 65535)
    441a:	20 e0       	ldi	r18, 0x00	; 0
    441c:	3f ef       	ldi	r19, 0xFF	; 255
    441e:	4f e7       	ldi	r20, 0x7F	; 127
    4420:	57 e4       	ldi	r21, 0x47	; 71
    4422:	6d 81       	ldd	r22, Y+5	; 0x05
    4424:	7e 81       	ldd	r23, Y+6	; 0x06
    4426:	8f 81       	ldd	r24, Y+7	; 0x07
    4428:	98 85       	ldd	r25, Y+8	; 0x08
    442a:	0e 94 46 35 	call	0x6a8c	; 0x6a8c <__gesf2>
    442e:	18 16       	cp	r1, r24
    4430:	4c f5       	brge	.+82     	; 0x4484 <vApplicationStackOverflowHook+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4432:	20 e0       	ldi	r18, 0x00	; 0
    4434:	30 e0       	ldi	r19, 0x00	; 0
    4436:	40 e2       	ldi	r20, 0x20	; 32
    4438:	51 e4       	ldi	r21, 0x41	; 65
    443a:	69 81       	ldd	r22, Y+1	; 0x01
    443c:	7a 81       	ldd	r23, Y+2	; 0x02
    443e:	8b 81       	ldd	r24, Y+3	; 0x03
    4440:	9c 81       	ldd	r25, Y+4	; 0x04
    4442:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    4446:	dc 01       	movw	r26, r24
    4448:	cb 01       	movw	r24, r22
    444a:	bc 01       	movw	r22, r24
    444c:	cd 01       	movw	r24, r26
    444e:	0e 94 68 34 	call	0x68d0	; 0x68d0 <__fixunssfsi>
    4452:	dc 01       	movw	r26, r24
    4454:	cb 01       	movw	r24, r22
    4456:	9a 87       	std	Y+10, r25	; 0x0a
    4458:	89 87       	std	Y+9, r24	; 0x09
    445a:	0f c0       	rjmp	.+30     	; 0x447a <vApplicationStackOverflowHook+0xf2>
    445c:	80 e9       	ldi	r24, 0x90	; 144
    445e:	91 e0       	ldi	r25, 0x01	; 1
    4460:	9c 87       	std	Y+12, r25	; 0x0c
    4462:	8b 87       	std	Y+11, r24	; 0x0b
    4464:	8b 85       	ldd	r24, Y+11	; 0x0b
    4466:	9c 85       	ldd	r25, Y+12	; 0x0c
    4468:	01 97       	sbiw	r24, 0x01	; 1
    446a:	f1 f7       	brne	.-4      	; 0x4468 <vApplicationStackOverflowHook+0xe0>
    446c:	9c 87       	std	Y+12, r25	; 0x0c
    446e:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4470:	89 85       	ldd	r24, Y+9	; 0x09
    4472:	9a 85       	ldd	r25, Y+10	; 0x0a
    4474:	01 97       	sbiw	r24, 0x01	; 1
    4476:	9a 87       	std	Y+10, r25	; 0x0a
    4478:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    447a:	89 85       	ldd	r24, Y+9	; 0x09
    447c:	9a 85       	ldd	r25, Y+10	; 0x0a
    447e:	89 2b       	or	r24, r25
    4480:	69 f7       	brne	.-38     	; 0x445c <vApplicationStackOverflowHook+0xd4>
    4482:	14 c0       	rjmp	.+40     	; 0x44ac <vApplicationStackOverflowHook+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4484:	6d 81       	ldd	r22, Y+5	; 0x05
    4486:	7e 81       	ldd	r23, Y+6	; 0x06
    4488:	8f 81       	ldd	r24, Y+7	; 0x07
    448a:	98 85       	ldd	r25, Y+8	; 0x08
    448c:	0e 94 68 34 	call	0x68d0	; 0x68d0 <__fixunssfsi>
    4490:	dc 01       	movw	r26, r24
    4492:	cb 01       	movw	r24, r22
    4494:	9a 87       	std	Y+10, r25	; 0x0a
    4496:	89 87       	std	Y+9, r24	; 0x09
    4498:	89 85       	ldd	r24, Y+9	; 0x09
    449a:	9a 85       	ldd	r25, Y+10	; 0x0a
    449c:	9e 87       	std	Y+14, r25	; 0x0e
    449e:	8d 87       	std	Y+13, r24	; 0x0d
    44a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    44a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    44a4:	01 97       	sbiw	r24, 0x01	; 1
    44a6:	f1 f7       	brne	.-4      	; 0x44a4 <vApplicationStackOverflowHook+0x11c>
    44a8:	9e 87       	std	Y+14, r25	; 0x0e
    44aa:	8d 87       	std	Y+13, r24	; 0x0d
    44ac:	83 e2       	ldi	r24, 0x23	; 35
    44ae:	90 e0       	ldi	r25, 0x00	; 0
    44b0:	23 e2       	ldi	r18, 0x23	; 35
    44b2:	30 e0       	ldi	r19, 0x00	; 0
    44b4:	f9 01       	movw	r30, r18
    44b6:	20 81       	ld	r18, Z
    44b8:	20 68       	ori	r18, 0x80	; 128
    44ba:	fc 01       	movw	r30, r24
    44bc:	20 83       	st	Z, r18
    44be:	84 cf       	rjmp	.-248    	; 0x43c8 <vApplicationStackOverflowHook+0x40>

000044c0 <m_print>:
 *  Author: drags
 */ 
#include "Headers/m_lora_includes.h"

void m_print(char message[], SemaphoreHandle_t pxSemaphore)
{
    44c0:	cf 93       	push	r28
    44c2:	df 93       	push	r29
    44c4:	00 d0       	rcall	.+0      	; 0x44c6 <m_print+0x6>
    44c6:	1f 92       	push	r1
    44c8:	cd b7       	in	r28, 0x3d	; 61
    44ca:	de b7       	in	r29, 0x3e	; 62
    44cc:	9a 83       	std	Y+2, r25	; 0x02
    44ce:	89 83       	std	Y+1, r24	; 0x01
    44d0:	7c 83       	std	Y+4, r23	; 0x04
    44d2:	6b 83       	std	Y+3, r22	; 0x03
	xSemaphoreTake(pxSemaphore, portMAX_DELAY);
    44d4:	8b 81       	ldd	r24, Y+3	; 0x03
    44d6:	9c 81       	ldd	r25, Y+4	; 0x04
    44d8:	6f ef       	ldi	r22, 0xFF	; 255
    44da:	7f ef       	ldi	r23, 0xFF	; 255
    44dc:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("%s\n",message);
    44e0:	89 81       	ldd	r24, Y+1	; 0x01
    44e2:	9a 81       	ldd	r25, Y+2	; 0x02
    44e4:	0e 94 39 37 	call	0x6e72	; 0x6e72 <puts>
	xSemaphoreGive(pxSemaphore);
    44e8:	8b 81       	ldd	r24, Y+3	; 0x03
    44ea:	9c 81       	ldd	r25, Y+4	; 0x04
    44ec:	20 e0       	ldi	r18, 0x00	; 0
    44ee:	40 e0       	ldi	r20, 0x00	; 0
    44f0:	50 e0       	ldi	r21, 0x00	; 0
    44f2:	60 e0       	ldi	r22, 0x00	; 0
    44f4:	70 e0       	ldi	r23, 0x00	; 0
    44f6:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
    44fa:	00 00       	nop
    44fc:	0f 90       	pop	r0
    44fe:	0f 90       	pop	r0
    4500:	0f 90       	pop	r0
    4502:	0f 90       	pop	r0
    4504:	df 91       	pop	r29
    4506:	cf 91       	pop	r28
    4508:	08 95       	ret

0000450a <create_all_tasks>:
/*
	This method creates all the tasks
*/

void create_all_tasks(UBaseType_t lora_reset_task_priority)
{
    450a:	ef 92       	push	r14
    450c:	ff 92       	push	r15
    450e:	0f 93       	push	r16
    4510:	cf 93       	push	r28
    4512:	df 93       	push	r29
    4514:	1f 92       	push	r1
    4516:	cd b7       	in	r28, 0x3d	; 61
    4518:	de b7       	in	r29, 0x3e	; 62
    451a:	89 83       	std	Y+1, r24	; 0x01
	xTaskCreate(
    451c:	e1 2c       	mov	r14, r1
    451e:	f1 2c       	mov	r15, r1
    4520:	09 81       	ldd	r16, Y+1	; 0x01
    4522:	20 e0       	ldi	r18, 0x00	; 0
    4524:	30 e0       	ldi	r19, 0x00	; 0
    4526:	48 e8       	ldi	r20, 0x88	; 136
    4528:	51 e0       	ldi	r21, 0x01	; 1
    452a:	6e e2       	ldi	r22, 0x2E	; 46
    452c:	72 e0       	ldi	r23, 0x02	; 2
    452e:	85 ef       	ldi	r24, 0xF5	; 245
    4530:	94 e2       	ldi	r25, 0x24	; 36
    4532:	0e 94 df 10 	call	0x21be	; 0x21be <xTaskCreate>
	,  configMINIMAL_STACK_SIZE+200  
	,  NULL
	,  lora_reset_task_priority  
	,  NULL );
	
	xTaskCreate(
    4536:	e1 2c       	mov	r14, r1
    4538:	f1 2c       	mov	r15, r1
    453a:	00 e0       	ldi	r16, 0x00	; 0
    453c:	20 e0       	ldi	r18, 0x00	; 0
    453e:	30 e0       	ldi	r19, 0x00	; 0
    4540:	40 ec       	ldi	r20, 0xC0	; 192
    4542:	50 e0       	ldi	r21, 0x00	; 0
    4544:	65 e3       	ldi	r22, 0x35	; 53
    4546:	72 e0       	ldi	r23, 0x02	; 2
    4548:	8a e1       	ldi	r24, 0x1A	; 26
    454a:	96 e2       	ldi	r25, 0x26	; 38
    454c:	0e 94 df 10 	call	0x21be	; 0x21be <xTaskCreate>
	, configMINIMAL_STACK_SIZE
	, NULL
	, ( tskIDLE_PRIORITY )
	, NULL );
	
	xTaskCreate(
    4550:	e1 2c       	mov	r14, r1
    4552:	f1 2c       	mov	r15, r1
    4554:	00 e0       	ldi	r16, 0x00	; 0
    4556:	20 e0       	ldi	r18, 0x00	; 0
    4558:	30 e0       	ldi	r19, 0x00	; 0
    455a:	40 ec       	ldi	r20, 0xC0	; 192
    455c:	50 e0       	ldi	r21, 0x00	; 0
    455e:	67 e4       	ldi	r22, 0x47	; 71
    4560:	72 e0       	ldi	r23, 0x02	; 2
    4562:	8f e8       	ldi	r24, 0x8F	; 143
    4564:	95 e2       	ldi	r25, 0x25	; 37
    4566:	0e 94 df 10 	call	0x21be	; 0x21be <xTaskCreate>
	, "Measure CO2 Task"
	, configMINIMAL_STACK_SIZE
	, NULL
	, ( tskIDLE_PRIORITY )
	, NULL );
}
    456a:	00 00       	nop
    456c:	0f 90       	pop	r0
    456e:	df 91       	pop	r29
    4570:	cf 91       	pop	r28
    4572:	0f 91       	pop	r16
    4574:	ff 90       	pop	r15
    4576:	ef 90       	pop	r14
    4578:	08 95       	ret

0000457a <create_all_timers>:
void timer_callback(TimerHandle_t pxTimer);

TimerHandle_t xTimer;

void create_all_timers()
{
    457a:	0f 93       	push	r16
    457c:	1f 93       	push	r17
    457e:	cf 93       	push	r28
    4580:	df 93       	push	r29
    4582:	cd b7       	in	r28, 0x3d	; 61
    4584:	de b7       	in	r29, 0x3e	; 62
	xTimer = xTimerCreate("5 minutes timer",
    4586:	0d e2       	ldi	r16, 0x2D	; 45
    4588:	11 e0       	ldi	r17, 0x01	; 1
    458a:	20 e0       	ldi	r18, 0x00	; 0
    458c:	30 e0       	ldi	r19, 0x00	; 0
    458e:	41 e0       	ldi	r20, 0x01	; 1
    4590:	61 e7       	ldi	r22, 0x71	; 113
    4592:	72 e0       	ldi	r23, 0x02	; 2
    4594:	88 e5       	ldi	r24, 0x58	; 88
    4596:	92 e0       	ldi	r25, 0x02	; 2
    4598:	07 da       	rcall	.-3058   	; 0x39a8 <xTimerCreate>
    459a:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <xTimer+0x1>
    459e:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <xTimer>
			(10000/portTICK_PERIOD_MS),
			pdTRUE,
			(void *)0,
			timer_callback);
    45a2:	00 00       	nop
    45a4:	df 91       	pop	r29
    45a6:	cf 91       	pop	r28
    45a8:	1f 91       	pop	r17
    45aa:	0f 91       	pop	r16
    45ac:	08 95       	ret

000045ae <lora_reset>:


void lora_setup(void);

void lora_reset()
{
    45ae:	cf 93       	push	r28
    45b0:	df 93       	push	r29
    45b2:	cd b7       	in	r28, 0x3d	; 61
    45b4:	de b7       	in	r29, 0x3e	; 62
	lora_driver_reset_rn2483(1); // Activate reset line
    45b6:	81 e0       	ldi	r24, 0x01	; 1
    45b8:	0e 94 06 2e 	call	0x5c0c	; 0x5c0c <lora_driver_reset_rn2483>
	vTaskDelay(2);
    45bc:	82 e0       	ldi	r24, 0x02	; 2
    45be:	90 e0       	ldi	r25, 0x00	; 0
    45c0:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
	lora_driver_reset_rn2483(0); // Release reset line
    45c4:	80 e0       	ldi	r24, 0x00	; 0
    45c6:	0e 94 06 2e 	call	0x5c0c	; 0x5c0c <lora_driver_reset_rn2483>
	vTaskDelay(150); // Wait for tranceiver module to wake up after reset
    45ca:	86 e9       	ldi	r24, 0x96	; 150
    45cc:	90 e0       	ldi	r25, 0x00	; 0
    45ce:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
	lora_driver_flush_buffers(); // get rid of first version string from module after reset!
    45d2:	0e 94 c3 2d 	call	0x5b86	; 0x5b86 <lora_driver_flush_buffers>
	
	lora_setup();
    45d6:	04 d0       	rcall	.+8      	; 0x45e0 <lora_setup>
    45d8:	00 00       	nop
    45da:	df 91       	pop	r29
    45dc:	cf 91       	pop	r28
    45de:	08 95       	ret

000045e0 <lora_setup>:
#include "../Headers/m_lora_includes.h"

static char _out_buf[100];

void lora_setup(void)
{
    45e0:	cf 93       	push	r28
    45e2:	df 93       	push	r29
    45e4:	1f 92       	push	r1
    45e6:	1f 92       	push	r1
    45e8:	cd b7       	in	r28, 0x3d	; 61
    45ea:	de b7       	in	r29, 0x3e	; 62
	/*
		Hardware reset of LoRaWAN transceiver
	*/
	

	led_slow_blink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
    45ec:	81 e0       	ldi	r24, 0x01	; 1
    45ee:	0e 94 57 2c 	call	0x58ae	; 0x58ae <led_slow_blink>

	// Factory reset the transceiver
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    45f2:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    45f6:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    45fa:	6f ef       	ldi	r22, 0xFF	; 255
    45fc:	7f ef       	ldi	r23, 0xFF	; 255
    45fe:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("FactoryReset >%s<\n", lora_driver_map_return_code_to_text(lora_driver_rn2483_factory_reset()));
    4602:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <lora_driver_rn2483_factory_reset>
    4606:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    460a:	29 2f       	mov	r18, r25
    460c:	2f 93       	push	r18
    460e:	8f 93       	push	r24
    4610:	88 e6       	ldi	r24, 0x68	; 104
    4612:	92 e0       	ldi	r25, 0x02	; 2
    4614:	89 2f       	mov	r24, r25
    4616:	8f 93       	push	r24
    4618:	88 e6       	ldi	r24, 0x68	; 104
    461a:	92 e0       	ldi	r25, 0x02	; 2
    461c:	8f 93       	push	r24
    461e:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4622:	0f 90       	pop	r0
    4624:	0f 90       	pop	r0
    4626:	0f 90       	pop	r0
    4628:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    462a:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    462e:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4632:	20 e0       	ldi	r18, 0x00	; 0
    4634:	40 e0       	ldi	r20, 0x00	; 0
    4636:	50 e0       	ldi	r21, 0x00	; 0
    4638:	60 e0       	ldi	r22, 0x00	; 0
    463a:	70 e0       	ldi	r23, 0x00	; 0
    463c:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
	
	// Configure to EU868 LoRaWAN standards
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4640:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4644:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4648:	6f ef       	ldi	r22, 0xFF	; 255
    464a:	7f ef       	ldi	r23, 0xFF	; 255
    464c:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Configure to EU868 >%s<\n", lora_driver_map_return_code_to_text(lora_driver_configure_to_eu868()));
    4650:	0e 94 47 2f 	call	0x5e8e	; 0x5e8e <lora_driver_configure_to_eu868>
    4654:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4658:	29 2f       	mov	r18, r25
    465a:	2f 93       	push	r18
    465c:	8f 93       	push	r24
    465e:	8b e7       	ldi	r24, 0x7B	; 123
    4660:	92 e0       	ldi	r25, 0x02	; 2
    4662:	89 2f       	mov	r24, r25
    4664:	8f 93       	push	r24
    4666:	8b e7       	ldi	r24, 0x7B	; 123
    4668:	92 e0       	ldi	r25, 0x02	; 2
    466a:	8f 93       	push	r24
    466c:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    4678:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    467c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4680:	20 e0       	ldi	r18, 0x00	; 0
    4682:	40 e0       	ldi	r20, 0x00	; 0
    4684:	50 e0       	ldi	r21, 0x00	; 0
    4686:	60 e0       	ldi	r22, 0x00	; 0
    4688:	70 e0       	ldi	r23, 0x00	; 0
    468a:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>

	// Get the transceivers HW EUI
	rc = lora_driver_get_rn2483_hweui(_out_buf);
    468e:	88 eb       	ldi	r24, 0xB8	; 184
    4690:	98 e0       	ldi	r25, 0x08	; 8
    4692:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <lora_driver_get_rn2483_hweui>
    4696:	8a 83       	std	Y+2, r24	; 0x02
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4698:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    469c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    46a0:	6f ef       	ldi	r22, 0xFF	; 255
    46a2:	7f ef       	ldi	r23, 0xFF	; 255
    46a4:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Get HWEUI >%s<: %s\n",lora_driver_map_return_code_to_text(rc), _out_buf);
    46a8:	8a 81       	ldd	r24, Y+2	; 0x02
    46aa:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    46ae:	9c 01       	movw	r18, r24
    46b0:	88 eb       	ldi	r24, 0xB8	; 184
    46b2:	98 e0       	ldi	r25, 0x08	; 8
    46b4:	89 2f       	mov	r24, r25
    46b6:	8f 93       	push	r24
    46b8:	88 eb       	ldi	r24, 0xB8	; 184
    46ba:	98 e0       	ldi	r25, 0x08	; 8
    46bc:	8f 93       	push	r24
    46be:	83 2f       	mov	r24, r19
    46c0:	8f 93       	push	r24
    46c2:	82 2f       	mov	r24, r18
    46c4:	8f 93       	push	r24
    46c6:	84 e9       	ldi	r24, 0x94	; 148
    46c8:	92 e0       	ldi	r25, 0x02	; 2
    46ca:	89 2f       	mov	r24, r25
    46cc:	8f 93       	push	r24
    46ce:	84 e9       	ldi	r24, 0x94	; 148
    46d0:	92 e0       	ldi	r25, 0x02	; 2
    46d2:	8f 93       	push	r24
    46d4:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    46d8:	0f 90       	pop	r0
    46da:	0f 90       	pop	r0
    46dc:	0f 90       	pop	r0
    46de:	0f 90       	pop	r0
    46e0:	0f 90       	pop	r0
    46e2:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    46e4:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    46e8:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    46ec:	20 e0       	ldi	r18, 0x00	; 0
    46ee:	40 e0       	ldi	r20, 0x00	; 0
    46f0:	50 e0       	ldi	r21, 0x00	; 0
    46f2:	60 e0       	ldi	r22, 0x00	; 0
    46f4:	70 e0       	ldi	r23, 0x00	; 0
    46f6:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    46fa:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    46fe:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4702:	6f ef       	ldi	r22, 0xFF	; 255
    4704:	7f ef       	ldi	r23, 0xFF	; 255
    4706:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_map_return_code_to_text(lora_driver_set_device_identifier(_out_buf)));
    470a:	88 eb       	ldi	r24, 0xB8	; 184
    470c:	98 e0       	ldi	r25, 0x08	; 8
    470e:	0e 94 48 2e 	call	0x5c90	; 0x5c90 <lora_driver_set_device_identifier>
    4712:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4716:	29 2f       	mov	r18, r25
    4718:	2f 93       	push	r18
    471a:	8f 93       	push	r24
    471c:	88 eb       	ldi	r24, 0xB8	; 184
    471e:	98 e0       	ldi	r25, 0x08	; 8
    4720:	89 2f       	mov	r24, r25
    4722:	8f 93       	push	r24
    4724:	88 eb       	ldi	r24, 0xB8	; 184
    4726:	98 e0       	ldi	r25, 0x08	; 8
    4728:	8f 93       	push	r24
    472a:	88 ea       	ldi	r24, 0xA8	; 168
    472c:	92 e0       	ldi	r25, 0x02	; 2
    472e:	89 2f       	mov	r24, r25
    4730:	8f 93       	push	r24
    4732:	88 ea       	ldi	r24, 0xA8	; 168
    4734:	92 e0       	ldi	r25, 0x02	; 2
    4736:	8f 93       	push	r24
    4738:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    473c:	0f 90       	pop	r0
    473e:	0f 90       	pop	r0
    4740:	0f 90       	pop	r0
    4742:	0f 90       	pop	r0
    4744:	0f 90       	pop	r0
    4746:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    4748:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    474c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4750:	20 e0       	ldi	r18, 0x00	; 0
    4752:	40 e0       	ldi	r20, 0x00	; 0
    4754:	50 e0       	ldi	r21, 0x00	; 0
    4756:	60 e0       	ldi	r22, 0x00	; 0
    4758:	70 e0       	ldi	r23, 0x00	; 0
    475a:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
	
	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    475e:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4762:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4766:	6f ef       	ldi	r22, 0xFF	; 255
    4768:	7f ef       	ldi	r23, 0xFF	; 255
    476a:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_map_return_code_to_text(lora_driver_set_otaa_identity(LORA_appEUI,LORA_appKEY,_out_buf)));
    476e:	48 eb       	ldi	r20, 0xB8	; 184
    4770:	58 e0       	ldi	r21, 0x08	; 8
    4772:	6d eb       	ldi	r22, 0xBD	; 189
    4774:	72 e0       	ldi	r23, 0x02	; 2
    4776:	8e ed       	ldi	r24, 0xDE	; 222
    4778:	92 e0       	ldi	r25, 0x02	; 2
    477a:	0e 94 21 30 	call	0x6042	; 0x6042 <lora_driver_set_otaa_identity>
    477e:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4782:	29 2f       	mov	r18, r25
    4784:	2f 93       	push	r18
    4786:	8f 93       	push	r24
    4788:	88 eb       	ldi	r24, 0xB8	; 184
    478a:	98 e0       	ldi	r25, 0x08	; 8
    478c:	89 2f       	mov	r24, r25
    478e:	8f 93       	push	r24
    4790:	88 eb       	ldi	r24, 0xB8	; 184
    4792:	98 e0       	ldi	r25, 0x08	; 8
    4794:	8f 93       	push	r24
    4796:	8d eb       	ldi	r24, 0xBD	; 189
    4798:	92 e0       	ldi	r25, 0x02	; 2
    479a:	89 2f       	mov	r24, r25
    479c:	8f 93       	push	r24
    479e:	8d eb       	ldi	r24, 0xBD	; 189
    47a0:	92 e0       	ldi	r25, 0x02	; 2
    47a2:	8f 93       	push	r24
    47a4:	8e ed       	ldi	r24, 0xDE	; 222
    47a6:	92 e0       	ldi	r25, 0x02	; 2
    47a8:	89 2f       	mov	r24, r25
    47aa:	8f 93       	push	r24
    47ac:	8e ed       	ldi	r24, 0xDE	; 222
    47ae:	92 e0       	ldi	r25, 0x02	; 2
    47b0:	8f 93       	push	r24
    47b2:	8f ee       	ldi	r24, 0xEF	; 239
    47b4:	92 e0       	ldi	r25, 0x02	; 2
    47b6:	89 2f       	mov	r24, r25
    47b8:	8f 93       	push	r24
    47ba:	8f ee       	ldi	r24, 0xEF	; 239
    47bc:	92 e0       	ldi	r25, 0x02	; 2
    47be:	8f 93       	push	r24
    47c0:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    47c4:	8d b7       	in	r24, 0x3d	; 61
    47c6:	9e b7       	in	r25, 0x3e	; 62
    47c8:	0a 96       	adiw	r24, 0x0a	; 10
    47ca:	0f b6       	in	r0, 0x3f	; 63
    47cc:	f8 94       	cli
    47ce:	de bf       	out	0x3e, r29	; 62
    47d0:	0f be       	out	0x3f, r0	; 63
    47d2:	cd bf       	out	0x3d, r28	; 61
	xSemaphoreGive(xSemaphore_print);
    47d4:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    47d8:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    47dc:	20 e0       	ldi	r18, 0x00	; 0
    47de:	40 e0       	ldi	r20, 0x00	; 0
    47e0:	50 e0       	ldi	r21, 0x00	; 0
    47e2:	60 e0       	ldi	r22, 0x00	; 0
    47e4:	70 e0       	ldi	r23, 0x00	; 0
    47e6:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>

	// Save all the MAC settings in the transceiver
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    47ea:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    47ee:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    47f2:	6f ef       	ldi	r22, 0xFF	; 255
    47f4:	7f ef       	ldi	r23, 0xFF	; 255
    47f6:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Save mac >%s<\n",lora_driver_map_return_code_to_text(lora_driver_save_mac()));
    47fa:	0e 94 7b 2e 	call	0x5cf6	; 0x5cf6 <lora_driver_save_mac>
    47fe:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4802:	29 2f       	mov	r18, r25
    4804:	2f 93       	push	r18
    4806:	8f 93       	push	r24
    4808:	85 e2       	ldi	r24, 0x25	; 37
    480a:	93 e0       	ldi	r25, 0x03	; 3
    480c:	89 2f       	mov	r24, r25
    480e:	8f 93       	push	r24
    4810:	85 e2       	ldi	r24, 0x25	; 37
    4812:	93 e0       	ldi	r25, 0x03	; 3
    4814:	8f 93       	push	r24
    4816:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    481a:	0f 90       	pop	r0
    481c:	0f 90       	pop	r0
    481e:	0f 90       	pop	r0
    4820:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    4822:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4826:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    482a:	20 e0       	ldi	r18, 0x00	; 0
    482c:	40 e0       	ldi	r20, 0x00	; 0
    482e:	50 e0       	ldi	r21, 0x00	; 0
    4830:	60 e0       	ldi	r22, 0x00	; 0
    4832:	70 e0       	ldi	r23, 0x00	; 0
    4834:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>

	// Enable Adaptive Data Rate
	xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4838:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    483c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4840:	6f ef       	ldi	r22, 0xFF	; 255
    4842:	7f ef       	ldi	r23, 0xFF	; 255
    4844:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_map_return_code_to_text(lora_driver_set_adaptive_data_rate(LoRa_ON)));
    4848:	81 e0       	ldi	r24, 0x01	; 1
    484a:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <lora_driver_set_adaptive_data_rate>
    484e:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4852:	29 2f       	mov	r18, r25
    4854:	2f 93       	push	r18
    4856:	8f 93       	push	r24
    4858:	84 e3       	ldi	r24, 0x34	; 52
    485a:	93 e0       	ldi	r25, 0x03	; 3
    485c:	89 2f       	mov	r24, r25
    485e:	8f 93       	push	r24
    4860:	84 e3       	ldi	r24, 0x34	; 52
    4862:	93 e0       	ldi	r25, 0x03	; 3
    4864:	8f 93       	push	r24
    4866:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    486a:	0f 90       	pop	r0
    486c:	0f 90       	pop	r0
    486e:	0f 90       	pop	r0
    4870:	0f 90       	pop	r0
	xSemaphoreGive(xSemaphore_print);
    4872:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4876:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    487a:	20 e0       	ldi	r18, 0x00	; 0
    487c:	40 e0       	ldi	r20, 0x00	; 0
    487e:	50 e0       	ldi	r21, 0x00	; 0
    4880:	60 e0       	ldi	r22, 0x00	; 0
    4882:	70 e0       	ldi	r23, 0x00	; 0
    4884:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
	
	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 5;
    4888:	85 e0       	ldi	r24, 0x05	; 5
    488a:	89 83       	std	Y+1, r24	; 0x01
	do {
		rc = lora_driver_join(LoRa_OTAA);
    488c:	80 e0       	ldi	r24, 0x00	; 0
    488e:	0e 94 81 2e 	call	0x5d02	; 0x5d02 <lora_driver_join>
    4892:	8a 83       	std	Y+2, r24	; 0x02
		printf("Join Network Tries Left:%d >%s<\n", maxJoinTriesLeft, lora_driver_map_return_code_to_text(rc));
    4894:	8a 81       	ldd	r24, Y+2	; 0x02
    4896:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    489a:	9c 01       	movw	r18, r24
    489c:	89 81       	ldd	r24, Y+1	; 0x01
    489e:	88 2f       	mov	r24, r24
    48a0:	90 e0       	ldi	r25, 0x00	; 0
    48a2:	43 2f       	mov	r20, r19
    48a4:	4f 93       	push	r20
    48a6:	2f 93       	push	r18
    48a8:	29 2f       	mov	r18, r25
    48aa:	2f 93       	push	r18
    48ac:	8f 93       	push	r24
    48ae:	85 e5       	ldi	r24, 0x55	; 85
    48b0:	93 e0       	ldi	r25, 0x03	; 3
    48b2:	89 2f       	mov	r24, r25
    48b4:	8f 93       	push	r24
    48b6:	85 e5       	ldi	r24, 0x55	; 85
    48b8:	93 e0       	ldi	r25, 0x03	; 3
    48ba:	8f 93       	push	r24
    48bc:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    48c0:	0f 90       	pop	r0
    48c2:	0f 90       	pop	r0
    48c4:	0f 90       	pop	r0
    48c6:	0f 90       	pop	r0
    48c8:	0f 90       	pop	r0
    48ca:	0f 90       	pop	r0

		if ( rc != LoRa_ACCEPTED)
    48cc:	8a 81       	ldd	r24, Y+2	; 0x02
    48ce:	88 30       	cpi	r24, 0x08	; 8
    48d0:	71 f0       	breq	.+28     	; 0x48ee <lora_setup+0x30e>
		{
			// Make the red led pulse to tell something went wrong
			led_long_puls(led_ST1); // OPTIONAL
    48d2:	80 e0       	ldi	r24, 0x00	; 0
    48d4:	0e 94 c3 2c 	call	0x5986	; 0x5986 <led_long_puls>
			// Wait 5 sec and lets try again
			vTaskDelay(5000/portTICK_PERIOD_MS);
    48d8:	88 e3       	ldi	r24, 0x38	; 56
    48da:	91 e0       	ldi	r25, 0x01	; 1
    48dc:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
		}
		else
		{
			break;
		}
	} while (--maxJoinTriesLeft);
    48e0:	89 81       	ldd	r24, Y+1	; 0x01
    48e2:	81 50       	subi	r24, 0x01	; 1
    48e4:	89 83       	std	Y+1, r24	; 0x01
    48e6:	89 81       	ldd	r24, Y+1	; 0x01
    48e8:	88 23       	and	r24, r24
    48ea:	81 f6       	brne	.-96     	; 0x488c <lora_setup+0x2ac>
    48ec:	01 c0       	rjmp	.+2      	; 0x48f0 <lora_setup+0x310>
			// Wait 5 sec and lets try again
			vTaskDelay(5000/portTICK_PERIOD_MS);
		}
		else
		{
			break;
    48ee:	00 00       	nop
		}
	} while (--maxJoinTriesLeft);

	if (rc == LoRa_ACCEPTED)
    48f0:	8a 81       	ldd	r24, Y+2	; 0x02
    48f2:	88 30       	cpi	r24, 0x08	; 8
    48f4:	21 f4       	brne	.+8      	; 0x48fe <lora_setup+0x31e>
	{
		// Connected to LoRaWAN :-)
		// Make the green led steady
		led_led_on(led_ST2); // OPTIONAL
    48f6:	81 e0       	ldi	r24, 0x01	; 1
    48f8:	0e 94 a5 2c 	call	0x594a	; 0x594a <led_led_on>
		while (1)
		{
			taskYIELD();
		}
	}
    48fc:	08 c0       	rjmp	.+16     	; 0x490e <lora_setup+0x32e>
	}
	else
	{
		// Something went wrong
		// Turn off the green led
		led_led_off(led_ST2); // OPTIONAL
    48fe:	81 e0       	ldi	r24, 0x01	; 1
    4900:	0e 94 b4 2c 	call	0x5968	; 0x5968 <led_led_off>
		// Make the red led blink fast to tell something went wrong
		led_fast_blink(led_ST1); // OPTIONAL
    4904:	80 e0       	ldi	r24, 0x00	; 0
    4906:	fa d7       	rcall	.+4084   	; 0x58fc <led_fast_blink>

		// Lets stay here
		while (1)
		{
			taskYIELD();
    4908:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
		}
    490c:	fd cf       	rjmp	.-6      	; 0x4908 <lora_setup+0x328>
	}
    490e:	0f 90       	pop	r0
    4910:	0f 90       	pop	r0
    4912:	df 91       	pop	r29
    4914:	cf 91       	pop	r28
    4916:	08 95       	ret

00004918 <global_init>:
SemaphoreHandle_t xSemaphore_temperature;
SemaphoreHandle_t xSemaphore_send_data;
SemaphoreHandle_t xSemaphore_buffer;

void global_init()
{
    4918:	cf 93       	push	r28
    491a:	df 93       	push	r29
    491c:	cd b7       	in	r28, 0x3d	; 61
    491e:	de b7       	in	r29, 0x3e	; 62
	stdioCreate(0);
    4920:	80 e0       	ldi	r24, 0x00	; 0
    4922:	0f d2       	rcall	.+1054   	; 0x4d42 <stdioCreate>
	
	sei(); // enables interrupts
    4924:	78 94       	sei
	
	xSemaphore_print = xSemaphoreCreateBinary();
    4926:	43 e0       	ldi	r20, 0x03	; 3
    4928:	60 e0       	ldi	r22, 0x00	; 0
    492a:	81 e0       	ldi	r24, 0x01	; 1
    492c:	0e 94 a9 06 	call	0xd52	; 0xd52 <xQueueGenericCreate>
    4930:	90 93 91 0a 	sts	0x0A91, r25	; 0x800a91 <xSemaphore_print+0x1>
    4934:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <xSemaphore_print>
	
	xSemaphore_co2 = xSemaphoreCreateMutex();
    4938:	81 e0       	ldi	r24, 0x01	; 1
    493a:	0e 94 63 07 	call	0xec6	; 0xec6 <xQueueCreateMutex>
    493e:	90 93 97 0a 	sts	0x0A97, r25	; 0x800a97 <xSemaphore_co2+0x1>
    4942:	80 93 96 0a 	sts	0x0A96, r24	; 0x800a96 <xSemaphore_co2>
	xSemaphore_temperature = xSemaphoreCreateMutex();
    4946:	81 e0       	ldi	r24, 0x01	; 1
    4948:	0e 94 63 07 	call	0xec6	; 0xec6 <xQueueCreateMutex>
    494c:	90 93 95 0a 	sts	0x0A95, r25	; 0x800a95 <xSemaphore_temperature+0x1>
    4950:	80 93 94 0a 	sts	0x0A94, r24	; 0x800a94 <xSemaphore_temperature>
	xSemaphore_send_data = xSemaphoreCreateMutex();
    4954:	81 e0       	ldi	r24, 0x01	; 1
    4956:	0e 94 63 07 	call	0xec6	; 0xec6 <xQueueCreateMutex>
    495a:	90 93 99 0a 	sts	0x0A99, r25	; 0x800a99 <xSemaphore_send_data+0x1>
    495e:	80 93 98 0a 	sts	0x0A98, r24	; 0x800a98 <xSemaphore_send_data>
	xSemaphore_buffer = xSemaphoreCreateMutex();
    4962:	81 e0       	ldi	r24, 0x01	; 1
    4964:	0e 94 63 07 	call	0xec6	; 0xec6 <xQueueCreateMutex>
    4968:	90 93 93 0a 	sts	0x0A93, r25	; 0x800a93 <xSemaphore_buffer+0x1>
    496c:	80 93 92 0a 	sts	0x0A92, r24	; 0x800a92 <xSemaphore_buffer>
	
	xSemaphoreGive(xSemaphore_print);
    4970:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4974:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4978:	20 e0       	ldi	r18, 0x00	; 0
    497a:	40 e0       	ldi	r20, 0x00	; 0
    497c:	50 e0       	ldi	r21, 0x00	; 0
    497e:	60 e0       	ldi	r22, 0x00	; 0
    4980:	70 e0       	ldi	r23, 0x00	; 0
    4982:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
	
	xQueue = xQueueCreate(2,sizeof (m_data));
    4986:	40 e0       	ldi	r20, 0x00	; 0
    4988:	64 e0       	ldi	r22, 0x04	; 4
    498a:	82 e0       	ldi	r24, 0x02	; 2
    498c:	0e 94 a9 06 	call	0xd52	; 0xd52 <xQueueGenericCreate>
    4990:	90 93 9b 0a 	sts	0x0A9B, r25	; 0x800a9b <xQueue+0x1>
    4994:	80 93 9a 0a 	sts	0x0A9A, r24	; 0x800a9a <xQueue>
	
	/*
		Initialize LoRa Driver
	*/

	hal_create(LED_TASK_PRIORITY);
    4998:	82 e0       	ldi	r24, 0x02	; 2
    499a:	a4 d5       	rcall	.+2888   	; 0x54e4 <hal_create>
	lora_driver_create(ser_USART1);
    499c:	81 e0       	ldi	r24, 0x01	; 1
    499e:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <lora_driver_create>
	m_print("LoRa driver created.\n",xSemaphore_print);
    49a2:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    49a6:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    49aa:	bc 01       	movw	r22, r24
    49ac:	86 e7       	ldi	r24, 0x76	; 118
    49ae:	93 e0       	ldi	r25, 0x03	; 3
	
	/*
		Initialize the Temperature Driver
	*/
	if ( HIH8120_OK == hih8120Create() )
    49b0:	87 dd       	rcall	.-1266   	; 0x44c0 <m_print>
    49b2:	f7 d5       	rcall	.+3054   	; 0x55a2 <hih8120Create>
    49b4:	88 23       	and	r24, r24
    49b6:	41 f4       	brne	.+16     	; 0x49c8 <global_init+0xb0>
	{
		m_print("Temp/Humidity driver created.\n",xSemaphore_print);
    49b8:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    49bc:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    49c0:	bc 01       	movw	r22, r24
    49c2:	8c e8       	ldi	r24, 0x8C	; 140
    49c4:	93 e0       	ldi	r25, 0x03	; 3
    49c6:	7c dd       	rcall	.-1288   	; 0x44c0 <m_print>
	}
	
	/* 
		Initialize MH-Z19 CO2 Driver
	*/
	mh_z19_create(ser_USART3, measure_co2_callback);
    49c8:	69 e1       	ldi	r22, 0x19	; 25
    49ca:	71 e0       	ldi	r23, 0x01	; 1
    49cc:	83 e0       	ldi	r24, 0x03	; 3
    49ce:	0e 94 6b 31 	call	0x62d6	; 0x62d6 <mh_z19_create>
	m_print("CO2 driver created.\n",xSemaphore_print);
    49d2:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    49d6:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    49da:	bc 01       	movw	r22, r24
    49dc:	8b ea       	ldi	r24, 0xAB	; 171
    49de:	93 e0       	ldi	r25, 0x03	; 3
    49e0:	6f dd       	rcall	.-1314   	; 0x44c0 <m_print>
	
}
    49e2:	00 00       	nop
    49e4:	df 91       	pop	r29
    49e6:	cf 91       	pop	r28
    49e8:	08 95       	ret

000049ea <lora_send_data_task>:

/*
	Task that sends data to the server
*/
void lora_send_data_task(void *pvParameters)
{
    49ea:	cf 93       	push	r28
    49ec:	df 93       	push	r29
    49ee:	00 d0       	rcall	.+0      	; 0x49f0 <lora_send_data_task+0x6>
    49f0:	00 d0       	rcall	.+0      	; 0x49f2 <lora_send_data_task+0x8>
    49f2:	cd b7       	in	r28, 0x3d	; 61
    49f4:	de b7       	in	r29, 0x3e	; 62
    49f6:	9e 83       	std	Y+6, r25	; 0x06
    49f8:	8d 83       	std	Y+5, r24	; 0x05
	m_data data;

	lora_reset();
    49fa:	d9 dd       	rcall	.-1102   	; 0x45ae <lora_reset>

	_uplink_payload.len = 4;
    49fc:	84 e0       	ldi	r24, 0x04	; 4
    49fe:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_uplink_payload+0x1>
	_uplink_payload.port_no = 2;
    4a02:	82 e0       	ldi	r24, 0x02	; 2
    4a04:	80 93 1c 09 	sts	0x091C, r24	; 0x80091c <_uplink_payload>


	while (1)
	{
		xSemaphoreTake(xSemaphore_send_data, portMAX_DELAY);
    4a08:	80 91 98 0a 	lds	r24, 0x0A98	; 0x800a98 <xSemaphore_send_data>
    4a0c:	90 91 99 0a 	lds	r25, 0x0A99	; 0x800a99 <xSemaphore_send_data+0x1>
    4a10:	6f ef       	ldi	r22, 0xFF	; 255
    4a12:	7f ef       	ldi	r23, 0xFF	; 255
    4a14:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>

		vTaskDelay(1000/portTICK_PERIOD_MS);
    4a18:	8e e3       	ldi	r24, 0x3E	; 62
    4a1a:	90 e0       	ldi	r25, 0x00	; 0
    4a1c:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
		
		xSemaphoreTake(xSemaphore_send_data, portMAX_DELAY);
    4a20:	80 91 98 0a 	lds	r24, 0x0A98	; 0x800a98 <xSemaphore_send_data>
    4a24:	90 91 99 0a 	lds	r25, 0x0A99	; 0x800a99 <xSemaphore_send_data+0x1>
    4a28:	6f ef       	ldi	r22, 0xFF	; 255
    4a2a:	7f ef       	ldi	r23, 0xFF	; 255
    4a2c:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>

		vTaskDelay(1000/portTICK_PERIOD_MS);
    4a30:	8e e3       	ldi	r24, 0x3E	; 62
    4a32:	90 e0       	ldi	r25, 0x00	; 0
    4a34:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>

		if (xQueueReceive(xQueue, &(data), 0) != pdTRUE)
    4a38:	80 91 9a 0a 	lds	r24, 0x0A9A	; 0x800a9a <xQueue>
    4a3c:	90 91 9b 0a 	lds	r25, 0x0A9B	; 0x800a9b <xQueue+0x1>
    4a40:	40 e0       	ldi	r20, 0x00	; 0
    4a42:	50 e0       	ldi	r21, 0x00	; 0
    4a44:	9e 01       	movw	r18, r28
    4a46:	2f 5f       	subi	r18, 0xFF	; 255
    4a48:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4a:	b9 01       	movw	r22, r18
    4a4c:	0e 94 88 08 	call	0x1110	; 0x1110 <xQueueReceive>
    4a50:	81 30       	cpi	r24, 0x01	; 1
    4a52:	49 f0       	breq	.+18     	; 0x4a66 <lora_send_data_task+0x7c>
		{
			m_print("Unable to receive data from queue!\n",xSemaphore_print);
    4a54:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4a58:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4a5c:	bc 01       	movw	r22, r24
    4a5e:	80 ec       	ldi	r24, 0xC0	; 192
    4a60:	93 e0       	ldi	r25, 0x03	; 3
    4a62:	2e dd       	rcall	.-1444   	; 0x44c0 <m_print>
    4a64:	d1 cf       	rjmp	.-94     	; 0x4a08 <lora_send_data_task+0x1e>
		}
		else 
		{	
			xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4a66:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4a6a:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4a6e:	6f ef       	ldi	r22, 0xFF	; 255
    4a70:	7f ef       	ldi	r23, 0xFF	; 255
    4a72:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
			printf("Received measurement for sending: type: %d, val: %d\n\n",data.type, data.value);
    4a76:	2b 81       	ldd	r18, Y+3	; 0x03
    4a78:	3c 81       	ldd	r19, Y+4	; 0x04
    4a7a:	89 81       	ldd	r24, Y+1	; 0x01
    4a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a7e:	43 2f       	mov	r20, r19
    4a80:	4f 93       	push	r20
    4a82:	2f 93       	push	r18
    4a84:	29 2f       	mov	r18, r25
    4a86:	2f 93       	push	r18
    4a88:	8f 93       	push	r24
    4a8a:	84 ee       	ldi	r24, 0xE4	; 228
    4a8c:	93 e0       	ldi	r25, 0x03	; 3
    4a8e:	89 2f       	mov	r24, r25
    4a90:	8f 93       	push	r24
    4a92:	84 ee       	ldi	r24, 0xE4	; 228
    4a94:	93 e0       	ldi	r25, 0x03	; 3
    4a96:	8f 93       	push	r24
    4a98:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4a9c:	0f 90       	pop	r0
    4a9e:	0f 90       	pop	r0
    4aa0:	0f 90       	pop	r0
    4aa2:	0f 90       	pop	r0
    4aa4:	0f 90       	pop	r0
    4aa6:	0f 90       	pop	r0
			xSemaphoreGive(xSemaphore_print);
    4aa8:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4aac:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4ab0:	20 e0       	ldi	r18, 0x00	; 0
    4ab2:	40 e0       	ldi	r20, 0x00	; 0
    4ab4:	50 e0       	ldi	r21, 0x00	; 0
    4ab6:	60 e0       	ldi	r22, 0x00	; 0
    4ab8:	70 e0       	ldi	r23, 0x00	; 0
    4aba:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
			
			_uplink_payload.bytes[0] = data.type >> 8;
    4abe:	89 81       	ldd	r24, Y+1	; 0x01
    4ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ac2:	89 2f       	mov	r24, r25
    4ac4:	99 0f       	add	r25, r25
    4ac6:	99 0b       	sbc	r25, r25
    4ac8:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_uplink_payload+0x2>
			_uplink_payload.bytes[1] = data.type & 0xFF;
    4acc:	89 81       	ldd	r24, Y+1	; 0x01
    4ace:	9a 81       	ldd	r25, Y+2	; 0x02
    4ad0:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_uplink_payload+0x3>
			_uplink_payload.bytes[2] = data.value >> 8;
    4ad4:	8b 81       	ldd	r24, Y+3	; 0x03
    4ad6:	9c 81       	ldd	r25, Y+4	; 0x04
    4ad8:	89 2f       	mov	r24, r25
    4ada:	99 0f       	add	r25, r25
    4adc:	99 0b       	sbc	r25, r25
    4ade:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <_uplink_payload+0x4>
			_uplink_payload.bytes[3] = data.value & 0xFF;
    4ae2:	8b 81       	ldd	r24, Y+3	; 0x03
    4ae4:	9c 81       	ldd	r25, Y+4	; 0x04
    4ae6:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_uplink_payload+0x5>

			led_short_puls(led_ST4);  
    4aea:	83 e0       	ldi	r24, 0x03	; 3
    4aec:	5e d7       	rcall	.+3772   	; 0x59aa <led_short_puls>
			printf("Upload Message >%s<\n", lora_driver_map_return_code_to_text(lora_driver_sent_upload_message(true, &_uplink_payload)));
    4aee:	6c e1       	ldi	r22, 0x1C	; 28
    4af0:	79 e0       	ldi	r23, 0x09	; 9
    4af2:	81 e0       	ldi	r24, 0x01	; 1
    4af4:	0e 94 a4 2e 	call	0x5d48	; 0x5d48 <lora_driver_sent_upload_message>
    4af8:	0e 94 42 30 	call	0x6084	; 0x6084 <lora_driver_map_return_code_to_text>
    4afc:	29 2f       	mov	r18, r25
    4afe:	2f 93       	push	r18
    4b00:	8f 93       	push	r24
    4b02:	8a e1       	ldi	r24, 0x1A	; 26
    4b04:	94 e0       	ldi	r25, 0x04	; 4
    4b06:	89 2f       	mov	r24, r25
    4b08:	8f 93       	push	r24
    4b0a:	8a e1       	ldi	r24, 0x1A	; 26
    4b0c:	94 e0       	ldi	r25, 0x04	; 4
    4b0e:	8f 93       	push	r24
    4b10:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4b14:	0f 90       	pop	r0
    4b16:	0f 90       	pop	r0
    4b18:	0f 90       	pop	r0
    4b1a:	0f 90       	pop	r0
		}
	}
    4b1c:	75 cf       	rjmp	.-278    	; 0x4a08 <lora_send_data_task+0x1e>

00004b1e <measure_co2_task>:
 */ 
#include "../Headers/m_lora_includes.h"


void measure_co2_task(void *pvParameters)
{
    4b1e:	cf 93       	push	r28
    4b20:	df 93       	push	r29
    4b22:	00 d0       	rcall	.+0      	; 0x4b24 <measure_co2_task+0x6>
    4b24:	00 d0       	rcall	.+0      	; 0x4b26 <measure_co2_task+0x8>
    4b26:	cd b7       	in	r28, 0x3d	; 61
    4b28:	de b7       	in	r29, 0x3e	; 62
    4b2a:	9e 83       	std	Y+6, r25	; 0x06
    4b2c:	8d 83       	std	Y+5, r24	; 0x05
	m_data co2; 
	
	while (1)
	{
		
		xSemaphoreTake(xSemaphore_co2,portMAX_DELAY);
    4b2e:	80 91 96 0a 	lds	r24, 0x0A96	; 0x800a96 <xSemaphore_co2>
    4b32:	90 91 97 0a 	lds	r25, 0x0A97	; 0x800a97 <xSemaphore_co2+0x1>
    4b36:	6f ef       	ldi	r22, 0xFF	; 255
    4b38:	7f ef       	ldi	r23, 0xFF	; 255
    4b3a:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
		
		if (mh_z19_take_meassuring() != MHZ19_OK)
    4b3e:	0e 94 9a 31 	call	0x6334	; 0x6334 <mh_z19_take_meassuring>
    4b42:	88 23       	and	r24, r24
    4b44:	49 f0       	breq	.+18     	; 0x4b58 <measure_co2_task+0x3a>
		{
			m_print("Error measuring CO2 value!\n",xSemaphore_print);
    4b46:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4b4a:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4b4e:	bc 01       	movw	r22, r24
    4b50:	8f e2       	ldi	r24, 0x2F	; 47
    4b52:	94 e0       	ldi	r25, 0x04	; 4
    4b54:	b5 dc       	rcall	.-1686   	; 0x44c0 <m_print>
    4b56:	eb cf       	rjmp	.-42     	; 0x4b2e <measure_co2_task+0x10>
		}
		else
		{
			co2.type = 1;
    4b58:	81 e0       	ldi	r24, 0x01	; 1
    4b5a:	90 e0       	ldi	r25, 0x00	; 0
    4b5c:	9a 83       	std	Y+2, r25	; 0x02
    4b5e:	89 83       	std	Y+1, r24	; 0x01
			
			xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4b60:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4b64:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4b68:	6f ef       	ldi	r22, 0xFF	; 255
    4b6a:	7f ef       	ldi	r23, 0xFF	; 255
    4b6c:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
			printf("CO2 before assignment: %d\n",co2_value);
    4b70:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <co2_value>
    4b74:	90 91 8d 0a 	lds	r25, 0x0A8D	; 0x800a8d <co2_value+0x1>
    4b78:	29 2f       	mov	r18, r25
    4b7a:	2f 93       	push	r18
    4b7c:	8f 93       	push	r24
    4b7e:	8b e4       	ldi	r24, 0x4B	; 75
    4b80:	94 e0       	ldi	r25, 0x04	; 4
    4b82:	89 2f       	mov	r24, r25
    4b84:	8f 93       	push	r24
    4b86:	8b e4       	ldi	r24, 0x4B	; 75
    4b88:	94 e0       	ldi	r25, 0x04	; 4
    4b8a:	8f 93       	push	r24
    4b8c:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4b90:	0f 90       	pop	r0
    4b92:	0f 90       	pop	r0
    4b94:	0f 90       	pop	r0
    4b96:	0f 90       	pop	r0
			xSemaphoreGive(xSemaphore_print);
    4b98:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4b9c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4ba0:	20 e0       	ldi	r18, 0x00	; 0
    4ba2:	40 e0       	ldi	r20, 0x00	; 0
    4ba4:	50 e0       	ldi	r21, 0x00	; 0
    4ba6:	60 e0       	ldi	r22, 0x00	; 0
    4ba8:	70 e0       	ldi	r23, 0x00	; 0
    4baa:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
			
			co2.value = (int) co2_value;
    4bae:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <co2_value>
    4bb2:	90 91 8d 0a 	lds	r25, 0x0A8D	; 0x800a8d <co2_value+0x1>
    4bb6:	9c 83       	std	Y+4, r25	; 0x04
    4bb8:	8b 83       	std	Y+3, r24	; 0x03
			
			xSemaphoreTake(xSemaphore_print,portMAX_DELAY);
    4bba:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4bbe:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4bc2:	6f ef       	ldi	r22, 0xFF	; 255
    4bc4:	7f ef       	ldi	r23, 0xFF	; 255
    4bc6:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>
			printf("CO2 after assignment: %d\n",co2.value);
    4bca:	8b 81       	ldd	r24, Y+3	; 0x03
    4bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    4bce:	29 2f       	mov	r18, r25
    4bd0:	2f 93       	push	r18
    4bd2:	8f 93       	push	r24
    4bd4:	86 e6       	ldi	r24, 0x66	; 102
    4bd6:	94 e0       	ldi	r25, 0x04	; 4
    4bd8:	89 2f       	mov	r24, r25
    4bda:	8f 93       	push	r24
    4bdc:	86 e6       	ldi	r24, 0x66	; 102
    4bde:	94 e0       	ldi	r25, 0x04	; 4
    4be0:	8f 93       	push	r24
    4be2:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <printf>
    4be6:	0f 90       	pop	r0
    4be8:	0f 90       	pop	r0
    4bea:	0f 90       	pop	r0
    4bec:	0f 90       	pop	r0
			xSemaphoreGive(xSemaphore_print);
    4bee:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4bf2:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4bf6:	20 e0       	ldi	r18, 0x00	; 0
    4bf8:	40 e0       	ldi	r20, 0x00	; 0
    4bfa:	50 e0       	ldi	r21, 0x00	; 0
    4bfc:	60 e0       	ldi	r22, 0x00	; 0
    4bfe:	70 e0       	ldi	r23, 0x00	; 0
    4c00:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
			
			if (xQueueSend(xQueue, (void *) &co2, portMAX_DELAY) != pdPASS)
    4c04:	80 91 9a 0a 	lds	r24, 0x0A9A	; 0x800a9a <xQueue>
    4c08:	90 91 9b 0a 	lds	r25, 0x0A9B	; 0x800a9b <xQueue+0x1>
    4c0c:	20 e0       	ldi	r18, 0x00	; 0
    4c0e:	4f ef       	ldi	r20, 0xFF	; 255
    4c10:	5f ef       	ldi	r21, 0xFF	; 255
    4c12:	be 01       	movw	r22, r28
    4c14:	6f 5f       	subi	r22, 0xFF	; 255
    4c16:	7f 4f       	sbci	r23, 0xFF	; 255
    4c18:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
    4c1c:	81 30       	cpi	r24, 0x01	; 1
    4c1e:	09 f4       	brne	.+2      	; 0x4c22 <measure_co2_task+0x104>
    4c20:	86 cf       	rjmp	.-244    	; 0x4b2e <measure_co2_task+0x10>
			{
				m_print("Queue is full! Failed to send CO2!\n",xSemaphore_print);
    4c22:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4c26:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4c2a:	bc 01       	movw	r22, r24
    4c2c:	80 e8       	ldi	r24, 0x80	; 128
    4c2e:	94 e0       	ldi	r25, 0x04	; 4
    4c30:	47 dc       	rcall	.-1906   	; 0x44c0 <m_print>
			}
		}
	}
    4c32:	7d cf       	rjmp	.-262    	; 0x4b2e <measure_co2_task+0x10>

00004c34 <measure_temp_task>:
#include "../Headers/m_lora_includes.h"

void lora_reset();

void measure_temp_task(void *pvParameters)
{
    4c34:	cf 93       	push	r28
    4c36:	df 93       	push	r29
    4c38:	00 d0       	rcall	.+0      	; 0x4c3a <measure_temp_task+0x6>
    4c3a:	00 d0       	rcall	.+0      	; 0x4c3c <measure_temp_task+0x8>
    4c3c:	cd b7       	in	r28, 0x3d	; 61
    4c3e:	de b7       	in	r29, 0x3e	; 62
    4c40:	9e 83       	std	Y+6, r25	; 0x06
    4c42:	8d 83       	std	Y+5, r24	; 0x05
	m_data temperature; 
	
	while (1)
	{
		xSemaphoreTake(xSemaphore_temperature, portMAX_DELAY);
    4c44:	80 91 94 0a 	lds	r24, 0x0A94	; 0x800a94 <xSemaphore_temperature>
    4c48:	90 91 95 0a 	lds	r25, 0x0A95	; 0x800a95 <xSemaphore_temperature+0x1>
    4c4c:	6f ef       	ldi	r22, 0xFF	; 255
    4c4e:	7f ef       	ldi	r23, 0xFF	; 255
    4c50:	0e 94 31 09 	call	0x1262	; 0x1262 <xQueueSemaphoreTake>

		if ( HIH8120_OK != hih8120Wakeup() )
    4c54:	bd d4       	rcall	.+2426   	; 0x55d0 <hih8120Wakeup>
    4c56:	88 23       	and	r24, r24
    4c58:	41 f0       	breq	.+16     	; 0x4c6a <measure_temp_task+0x36>
		{
			m_print("Error in waking up the sensors!",xSemaphore_print);
    4c5a:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4c5e:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4c62:	bc 01       	movw	r22, r24
    4c64:	84 ea       	ldi	r24, 0xA4	; 164
    4c66:	94 e0       	ldi	r25, 0x04	; 4
    4c68:	2b dc       	rcall	.-1962   	; 0x44c0 <m_print>
		}
		
		vTaskDelay(100/portTICK_PERIOD_MS);
    4c6a:	86 e0       	ldi	r24, 0x06	; 6
    4c6c:	90 e0       	ldi	r25, 0x00	; 0
    4c6e:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
		
	
		if ( HIH8120_OK !=  hih8120Meassure() )
    4c72:	c2 d4       	rcall	.+2436   	; 0x55f8 <hih8120Meassure>
    4c74:	88 23       	and	r24, r24
    4c76:	49 f0       	breq	.+18     	; 0x4c8a <measure_temp_task+0x56>
		{
			m_print("Error in measuring the temperature!",xSemaphore_print);			
    4c78:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4c7c:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4c80:	bc 01       	movw	r22, r24
    4c82:	84 ec       	ldi	r24, 0xC4	; 196
    4c84:	94 e0       	ldi	r25, 0x04	; 4
    4c86:	1c dc       	rcall	.-1992   	; 0x44c0 <m_print>
    4c88:	dd cf       	rjmp	.-70     	; 0x4c44 <measure_temp_task+0x10>
		}
		else
		{	
			vTaskDelay(50/portTICK_PERIOD_MS);
    4c8a:	83 e0       	ldi	r24, 0x03	; 3
    4c8c:	90 e0       	ldi	r25, 0x00	; 0
    4c8e:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
			temperature.type = 2;
    4c92:	82 e0       	ldi	r24, 0x02	; 2
    4c94:	90 e0       	ldi	r25, 0x00	; 0
    4c96:	9a 83       	std	Y+2, r25	; 0x02
			temperature.value = hih8120GetTemperature_x10();
    4c98:	89 83       	std	Y+1, r24	; 0x01
    4c9a:	d9 d4       	rcall	.+2482   	; 0x564e <hih8120GetTemperature_x10>
    4c9c:	9c 83       	std	Y+4, r25	; 0x04
    4c9e:	8b 83       	std	Y+3, r24	; 0x03
				
			if (xQueueSend(xQueue, (void *) &temperature, portMAX_DELAY) != pdPASS)
    4ca0:	80 91 9a 0a 	lds	r24, 0x0A9A	; 0x800a9a <xQueue>
    4ca4:	90 91 9b 0a 	lds	r25, 0x0A9B	; 0x800a9b <xQueue+0x1>
    4ca8:	20 e0       	ldi	r18, 0x00	; 0
    4caa:	4f ef       	ldi	r20, 0xFF	; 255
    4cac:	5f ef       	ldi	r21, 0xFF	; 255
    4cae:	be 01       	movw	r22, r28
    4cb0:	6f 5f       	subi	r22, 0xFF	; 255
    4cb2:	7f 4f       	sbci	r23, 0xFF	; 255
    4cb4:	0e 94 81 07 	call	0xf02	; 0xf02 <xQueueGenericSend>
    4cb8:	81 30       	cpi	r24, 0x01	; 1
    4cba:	09 f4       	brne	.+2      	; 0x4cbe <measure_temp_task+0x8a>
    4cbc:	c3 cf       	rjmp	.-122    	; 0x4c44 <measure_temp_task+0x10>
			{
				m_print("Queue is full! Failed to send temperature!\n",xSemaphore_print);
    4cbe:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <xSemaphore_print>
    4cc2:	90 91 91 0a 	lds	r25, 0x0A91	; 0x800a91 <xSemaphore_print+0x1>
    4cc6:	bc 01       	movw	r22, r24
    4cc8:	88 ee       	ldi	r24, 0xE8	; 232
    4cca:	94 e0       	ldi	r25, 0x04	; 4
    4ccc:	f9 db       	rcall	.-2062   	; 0x44c0 <m_print>
			}
		}
	}
    4cce:	ba cf       	rjmp	.-140    	; 0x4c44 <measure_temp_task+0x10>

00004cd0 <main>:
void create_all_tasks(UBaseType_t lora_handler_task_priority);
void create_all_timers();
void lora_setup(void);

int main(void)
{				
    4cd0:	0f 93       	push	r16
    4cd2:	1f 93       	push	r17
    4cd4:	cf 93       	push	r28
    4cd6:	df 93       	push	r29
    4cd8:	cd b7       	in	r28, 0x3d	; 61
    4cda:	de b7       	in	r29, 0x3e	; 62
	global_init();
    4cdc:	1d de       	rcall	.-966    	; 0x4918 <global_init>
	
	create_all_timers();
    4cde:	4d dc       	rcall	.-1894   	; 0x457a <create_all_timers>
	
	create_all_tasks(LORA_RESET_TASK_PRIORITY);
    4ce0:	81 e0       	ldi	r24, 0x01	; 1
    4ce2:	13 dc       	rcall	.-2010   	; 0x450a <create_all_tasks>
    4ce4:	0e 94 b5 13 	call	0x276a	; 0x276a <xTaskGetTickCount>
	
	xTimerStart(xTimer,0);
    4ce8:	ac 01       	movw	r20, r24
    4cea:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <xTimer>
    4cee:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <xTimer+0x1>
    4cf2:	00 e0       	ldi	r16, 0x00	; 0
    4cf4:	10 e0       	ldi	r17, 0x00	; 0
    4cf6:	20 e0       	ldi	r18, 0x00	; 0
    4cf8:	30 e0       	ldi	r19, 0x00	; 0
    4cfa:	61 e0       	ldi	r22, 0x01	; 1
    4cfc:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <xTimerGenericCommand>
    4d00:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <vTaskStartScheduler>
					
	vTaskStartScheduler();
    4d04:	ff cf       	rjmp	.-2      	; 0x4d04 <main+0x34>

00004d06 <usart_getchar>:
    4d06:	cf 93       	push	r28
    4d08:	df 93       	push	r29
    4d0a:	1f 92       	push	r1
    4d0c:	cd b7       	in	r28, 0x3d	; 61
    4d0e:	de b7       	in	r29, 0x3e	; 62
    4d10:	be 01       	movw	r22, r28
    4d12:	6f 5f       	subi	r22, 0xFF	; 255
    4d14:	7f 4f       	sbci	r23, 0xFF	; 255
    4d16:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <_com_serial_instance>
    4d1a:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <_com_serial_instance+0x1>
    4d1e:	4f d1       	rcall	.+670    	; 0x4fbe <serial_get_byte>
    4d20:	81 11       	cpse	r24, r1
    4d22:	f6 cf       	rjmp	.-20     	; 0x4d10 <usart_getchar+0xa>
    4d24:	89 81       	ldd	r24, Y+1	; 0x01
    4d26:	90 e0       	ldi	r25, 0x00	; 0
    4d28:	0f 90       	pop	r0
    4d2a:	df 91       	pop	r29
    4d2c:	cf 91       	pop	r28
    4d2e:	08 95       	ret

00004d30 <usart_putchar>:
    4d30:	68 2f       	mov	r22, r24
    4d32:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <_com_serial_instance>
    4d36:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <_com_serial_instance+0x1>
    4d3a:	cc d0       	rcall	.+408    	; 0x4ed4 <serial_send_byte>
    4d3c:	80 e0       	ldi	r24, 0x00	; 0
    4d3e:	90 e0       	ldi	r25, 0x00	; 0
    4d40:	08 95       	ret

00004d42 <stdioCreate>:
    4d42:	8f 92       	push	r8
    4d44:	9f 92       	push	r9
    4d46:	af 92       	push	r10
    4d48:	cf 92       	push	r12
    4d4a:	ef 92       	push	r14
    4d4c:	0f 93       	push	r16
    4d4e:	81 2c       	mov	r8, r1
    4d50:	91 2c       	mov	r9, r1
    4d52:	68 94       	set
    4d54:	aa 24       	eor	r10, r10
    4d56:	a7 f8       	bld	r10, 7
    4d58:	68 94       	set
    4d5a:	cc 24       	eor	r12, r12
    4d5c:	c7 f8       	bld	r12, 7
    4d5e:	e1 2c       	mov	r14, r1
    4d60:	00 e0       	ldi	r16, 0x00	; 0
    4d62:	23 e0       	ldi	r18, 0x03	; 3
    4d64:	40 e0       	ldi	r20, 0x00	; 0
    4d66:	51 ee       	ldi	r21, 0xE1	; 225
    4d68:	60 e0       	ldi	r22, 0x00	; 0
    4d6a:	70 e0       	ldi	r23, 0x00	; 0
    4d6c:	13 d0       	rcall	.+38     	; 0x4d94 <serial_new_instance>
    4d6e:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <_com_serial_instance+0x1>
    4d72:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <_com_serial_instance>
    4d76:	e6 eb       	ldi	r30, 0xB6	; 182
    4d78:	fa e0       	ldi	r31, 0x0A	; 10
    4d7a:	86 e0       	ldi	r24, 0x06	; 6
    4d7c:	92 e0       	ldi	r25, 0x02	; 2
    4d7e:	91 83       	std	Z+1, r25	; 0x01
    4d80:	80 83       	st	Z, r24
    4d82:	93 83       	std	Z+3, r25	; 0x03
    4d84:	82 83       	std	Z+2, r24	; 0x02
    4d86:	0f 91       	pop	r16
    4d88:	ef 90       	pop	r14
    4d8a:	cf 90       	pop	r12
    4d8c:	af 90       	pop	r10
    4d8e:	9f 90       	pop	r9
    4d90:	8f 90       	pop	r8
    4d92:	08 95       	ret

00004d94 <serial_new_instance>:
    4d94:	2f 92       	push	r2
    4d96:	3f 92       	push	r3
    4d98:	4f 92       	push	r4
    4d9a:	5f 92       	push	r5
    4d9c:	6f 92       	push	r6
    4d9e:	7f 92       	push	r7
    4da0:	8f 92       	push	r8
    4da2:	9f 92       	push	r9
    4da4:	af 92       	push	r10
    4da6:	cf 92       	push	r12
    4da8:	ef 92       	push	r14
    4daa:	ff 92       	push	r15
    4dac:	0f 93       	push	r16
    4dae:	1f 93       	push	r17
    4db0:	cf 93       	push	r28
    4db2:	df 93       	push	r29
    4db4:	cd b7       	in	r28, 0x3d	; 61
    4db6:	de b7       	in	r29, 0x3e	; 62
    4db8:	f8 2e       	mov	r15, r24
    4dba:	2a 01       	movw	r4, r20
    4dbc:	3b 01       	movw	r6, r22
    4dbe:	88 e0       	ldi	r24, 0x08	; 8
    4dc0:	90 e0       	ldi	r25, 0x00	; 0
    4dc2:	0e 94 c7 35 	call	0x6b8e	; 0x6b8e <malloc>
    4dc6:	8c 01       	movw	r16, r24
    4dc8:	8f 2d       	mov	r24, r15
    4dca:	90 e0       	ldi	r25, 0x00	; 0
    4dcc:	88 0f       	add	r24, r24
    4dce:	99 1f       	adc	r25, r25
    4dd0:	fc 01       	movw	r30, r24
    4dd2:	ec 5c       	subi	r30, 0xCC	; 204
    4dd4:	f6 4f       	sbci	r31, 0xF6	; 246
    4dd6:	11 83       	std	Z+1, r17	; 0x01
    4dd8:	00 83       	st	Z, r16
    4dda:	fc 01       	movw	r30, r24
    4ddc:	ec 5e       	subi	r30, 0xEC	; 236
    4dde:	fd 4f       	sbci	r31, 0xFD	; 253
    4de0:	80 81       	ld	r24, Z
    4de2:	91 81       	ldd	r25, Z+1	; 0x01
    4de4:	d8 01       	movw	r26, r16
    4de6:	8d 93       	st	X+, r24
    4de8:	9c 93       	st	X, r25
    4dea:	6c 2d       	mov	r22, r12
    4dec:	70 e0       	ldi	r23, 0x00	; 0
    4dee:	84 e0       	ldi	r24, 0x04	; 4
    4df0:	90 e0       	ldi	r25, 0x00	; 0
    4df2:	0e 94 ad 35 	call	0x6b5a	; 0x6b5a <calloc>
    4df6:	1c 01       	movw	r2, r24
    4df8:	61 e0       	ldi	r22, 0x01	; 1
    4dfa:	70 e0       	ldi	r23, 0x00	; 0
    4dfc:	86 e0       	ldi	r24, 0x06	; 6
    4dfe:	90 e0       	ldi	r25, 0x00	; 0
    4e00:	0e 94 ad 35 	call	0x6b5a	; 0x6b5a <calloc>
    4e04:	7c 01       	movw	r14, r24
    4e06:	4c 2d       	mov	r20, r12
    4e08:	b1 01       	movw	r22, r2
    4e0a:	4d d3       	rcall	.+1690   	; 0x54a6 <fifo_init>
    4e0c:	f8 01       	movw	r30, r16
    4e0e:	f5 82       	std	Z+5, r15	; 0x05
    4e10:	e4 82       	std	Z+4, r14	; 0x04
    4e12:	6a 2d       	mov	r22, r10
    4e14:	70 e0       	ldi	r23, 0x00	; 0
    4e16:	84 e0       	ldi	r24, 0x04	; 4
    4e18:	90 e0       	ldi	r25, 0x00	; 0
    4e1a:	0e 94 ad 35 	call	0x6b5a	; 0x6b5a <calloc>
    4e1e:	1c 01       	movw	r2, r24
    4e20:	61 e0       	ldi	r22, 0x01	; 1
    4e22:	70 e0       	ldi	r23, 0x00	; 0
    4e24:	86 e0       	ldi	r24, 0x06	; 6
    4e26:	90 e0       	ldi	r25, 0x00	; 0
    4e28:	0e 94 ad 35 	call	0x6b5a	; 0x6b5a <calloc>
    4e2c:	7c 01       	movw	r14, r24
    4e2e:	4a 2d       	mov	r20, r10
    4e30:	b1 01       	movw	r22, r2
    4e32:	39 d3       	rcall	.+1650   	; 0x54a6 <fifo_init>
    4e34:	d8 01       	movw	r26, r16
    4e36:	13 96       	adiw	r26, 0x03	; 3
    4e38:	fc 92       	st	X, r15
    4e3a:	ee 92       	st	-X, r14
    4e3c:	12 97       	sbiw	r26, 0x02	; 2
    4e3e:	17 96       	adiw	r26, 0x07	; 7
    4e40:	9c 92       	st	X, r9
    4e42:	8e 92       	st	-X, r8
    4e44:	16 97       	sbiw	r26, 0x06	; 6
    4e46:	ff b6       	in	r15, 0x3f	; 63
    4e48:	f8 94       	cli
    4e4a:	ed 91       	ld	r30, X+
    4e4c:	fc 91       	ld	r31, X
    4e4e:	11 97       	sbiw	r26, 0x01	; 1
    4e50:	36 97       	sbiw	r30, 0x06	; 6
    4e52:	80 81       	ld	r24, Z
    4e54:	82 60       	ori	r24, 0x02	; 2
    4e56:	80 83       	st	Z, r24
    4e58:	8d 90       	ld	r8, X+
    4e5a:	9c 90       	ld	r9, X
    4e5c:	c3 01       	movw	r24, r6
    4e5e:	b2 01       	movw	r22, r4
    4e60:	0e 94 94 34 	call	0x6928	; 0x6928 <__floatunsisf>
    4e64:	20 e0       	ldi	r18, 0x00	; 0
    4e66:	30 e0       	ldi	r19, 0x00	; 0
    4e68:	40 e0       	ldi	r20, 0x00	; 0
    4e6a:	51 e4       	ldi	r21, 0x41	; 65
    4e6c:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    4e70:	9b 01       	movw	r18, r22
    4e72:	ac 01       	movw	r20, r24
    4e74:	60 e0       	ldi	r22, 0x00	; 0
    4e76:	74 e2       	ldi	r23, 0x24	; 36
    4e78:	84 e7       	ldi	r24, 0x74	; 116
    4e7a:	9b e4       	ldi	r25, 0x4B	; 75
    4e7c:	0e 94 fb 33 	call	0x67f6	; 0x67f6 <__divsf3>
    4e80:	20 e0       	ldi	r18, 0x00	; 0
    4e82:	30 e0       	ldi	r19, 0x00	; 0
    4e84:	40 e8       	ldi	r20, 0x80	; 128
    4e86:	5f e3       	ldi	r21, 0x3F	; 63
    4e88:	0e 94 92 33 	call	0x6724	; 0x6724 <__subsf3>
    4e8c:	0e 94 68 34 	call	0x68d0	; 0x68d0 <__fixunssfsi>
    4e90:	f4 01       	movw	r30, r8
    4e92:	32 97       	sbiw	r30, 0x02	; 2
    4e94:	60 83       	st	Z, r22
    4e96:	d8 01       	movw	r26, r16
    4e98:	ed 91       	ld	r30, X+
    4e9a:	fc 91       	ld	r31, X
    4e9c:	11 97       	sbiw	r26, 0x01	; 1
    4e9e:	35 97       	sbiw	r30, 0x05	; 5
    4ea0:	88 e9       	ldi	r24, 0x98	; 152
    4ea2:	80 83       	st	Z, r24
    4ea4:	ed 91       	ld	r30, X+
    4ea6:	fc 91       	ld	r31, X
    4ea8:	34 97       	sbiw	r30, 0x04	; 4
    4eaa:	86 e0       	ldi	r24, 0x06	; 6
    4eac:	80 83       	st	Z, r24
    4eae:	ff be       	out	0x3f, r15	; 63
    4eb0:	c8 01       	movw	r24, r16
    4eb2:	df 91       	pop	r29
    4eb4:	cf 91       	pop	r28
    4eb6:	1f 91       	pop	r17
    4eb8:	0f 91       	pop	r16
    4eba:	ff 90       	pop	r15
    4ebc:	ef 90       	pop	r14
    4ebe:	cf 90       	pop	r12
    4ec0:	af 90       	pop	r10
    4ec2:	9f 90       	pop	r9
    4ec4:	8f 90       	pop	r8
    4ec6:	7f 90       	pop	r7
    4ec8:	6f 90       	pop	r6
    4eca:	5f 90       	pop	r5
    4ecc:	4f 90       	pop	r4
    4ece:	3f 90       	pop	r3
    4ed0:	2f 90       	pop	r2
    4ed2:	08 95       	ret

00004ed4 <serial_send_byte>:
    4ed4:	cf 93       	push	r28
    4ed6:	df 93       	push	r29
    4ed8:	ec 01       	movw	r28, r24
    4eda:	ea 81       	ldd	r30, Y+2	; 0x02
    4edc:	fb 81       	ldd	r31, Y+3	; 0x03
    4ede:	93 81       	ldd	r25, Z+3	; 0x03
    4ee0:	82 81       	ldd	r24, Z+2	; 0x02
    4ee2:	25 81       	ldd	r18, Z+5	; 0x05
    4ee4:	98 1b       	sub	r25, r24
    4ee6:	92 23       	and	r25, r18
    4ee8:	84 81       	ldd	r24, Z+4	; 0x04
    4eea:	98 17       	cp	r25, r24
    4eec:	a1 f0       	breq	.+40     	; 0x4f16 <serial_send_byte+0x42>
    4eee:	93 81       	ldd	r25, Z+3	; 0x03
    4ef0:	26 95       	lsr	r18
    4ef2:	29 23       	and	r18, r25
    4ef4:	a0 81       	ld	r26, Z
    4ef6:	b1 81       	ldd	r27, Z+1	; 0x01
    4ef8:	a2 0f       	add	r26, r18
    4efa:	b1 1d       	adc	r27, r1
    4efc:	6c 93       	st	X, r22
    4efe:	9f 5f       	subi	r25, 0xFF	; 255
    4f00:	25 81       	ldd	r18, Z+5	; 0x05
    4f02:	92 23       	and	r25, r18
    4f04:	93 83       	std	Z+3, r25	; 0x03
    4f06:	e8 81       	ld	r30, Y
    4f08:	f9 81       	ldd	r31, Y+1	; 0x01
    4f0a:	35 97       	sbiw	r30, 0x05	; 5
    4f0c:	80 81       	ld	r24, Z
    4f0e:	80 62       	ori	r24, 0x20	; 32
    4f10:	80 83       	st	Z, r24
    4f12:	80 e0       	ldi	r24, 0x00	; 0
    4f14:	01 c0       	rjmp	.+2      	; 0x4f18 <serial_send_byte+0x44>
    4f16:	82 e0       	ldi	r24, 0x02	; 2
    4f18:	df 91       	pop	r29
    4f1a:	cf 91       	pop	r28
    4f1c:	08 95       	ret

00004f1e <serial_send_bytes>:
    4f1e:	ef 92       	push	r14
    4f20:	ff 92       	push	r15
    4f22:	0f 93       	push	r16
    4f24:	1f 93       	push	r17
    4f26:	cf 93       	push	r28
    4f28:	df 93       	push	r29
    4f2a:	7c 01       	movw	r14, r24
    4f2c:	dc 01       	movw	r26, r24
    4f2e:	12 96       	adiw	r26, 0x02	; 2
    4f30:	ed 91       	ld	r30, X+
    4f32:	fc 91       	ld	r31, X
    4f34:	13 97       	sbiw	r26, 0x03	; 3
    4f36:	93 81       	ldd	r25, Z+3	; 0x03
    4f38:	82 81       	ldd	r24, Z+2	; 0x02
    4f3a:	98 1b       	sub	r25, r24
    4f3c:	85 81       	ldd	r24, Z+5	; 0x05
    4f3e:	98 23       	and	r25, r24
    4f40:	84 81       	ldd	r24, Z+4	; 0x04
    4f42:	89 1b       	sub	r24, r25
    4f44:	86 17       	cp	r24, r22
    4f46:	98 f1       	brcs	.+102    	; 0x4fae <serial_send_bytes+0x90>
    4f48:	66 23       	and	r22, r22
    4f4a:	41 f1       	breq	.+80     	; 0x4f9c <serial_send_bytes+0x7e>
    4f4c:	84 2f       	mov	r24, r20
    4f4e:	95 2f       	mov	r25, r21
    4f50:	dc 01       	movw	r26, r24
    4f52:	61 50       	subi	r22, 0x01	; 1
    4f54:	46 2f       	mov	r20, r22
    4f56:	50 e0       	ldi	r21, 0x00	; 0
    4f58:	4f 5f       	subi	r20, 0xFF	; 255
    4f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    4f5c:	48 0f       	add	r20, r24
    4f5e:	59 1f       	adc	r21, r25
    4f60:	e7 01       	movw	r28, r14
    4f62:	ea 81       	ldd	r30, Y+2	; 0x02
    4f64:	fb 81       	ldd	r31, Y+3	; 0x03
    4f66:	93 81       	ldd	r25, Z+3	; 0x03
    4f68:	82 81       	ldd	r24, Z+2	; 0x02
    4f6a:	25 81       	ldd	r18, Z+5	; 0x05
    4f6c:	98 1b       	sub	r25, r24
    4f6e:	92 23       	and	r25, r18
    4f70:	84 81       	ldd	r24, Z+4	; 0x04
    4f72:	98 17       	cp	r25, r24
    4f74:	79 f0       	breq	.+30     	; 0x4f94 <serial_send_bytes+0x76>
    4f76:	8c 91       	ld	r24, X
    4f78:	93 81       	ldd	r25, Z+3	; 0x03
    4f7a:	26 95       	lsr	r18
    4f7c:	29 23       	and	r18, r25
    4f7e:	60 81       	ld	r22, Z
    4f80:	71 81       	ldd	r23, Z+1	; 0x01
    4f82:	8b 01       	movw	r16, r22
    4f84:	02 0f       	add	r16, r18
    4f86:	11 1d       	adc	r17, r1
    4f88:	e8 01       	movw	r28, r16
    4f8a:	88 83       	st	Y, r24
    4f8c:	9f 5f       	subi	r25, 0xFF	; 255
    4f8e:	85 81       	ldd	r24, Z+5	; 0x05
    4f90:	98 23       	and	r25, r24
    4f92:	93 83       	std	Z+3, r25	; 0x03
    4f94:	11 96       	adiw	r26, 0x01	; 1
    4f96:	a4 17       	cp	r26, r20
    4f98:	b5 07       	cpc	r27, r21
    4f9a:	11 f7       	brne	.-60     	; 0x4f60 <serial_send_bytes+0x42>
    4f9c:	d7 01       	movw	r26, r14
    4f9e:	ed 91       	ld	r30, X+
    4fa0:	fc 91       	ld	r31, X
    4fa2:	35 97       	sbiw	r30, 0x05	; 5
    4fa4:	80 81       	ld	r24, Z
    4fa6:	80 62       	ori	r24, 0x20	; 32
    4fa8:	80 83       	st	Z, r24
    4faa:	80 e0       	ldi	r24, 0x00	; 0
    4fac:	01 c0       	rjmp	.+2      	; 0x4fb0 <serial_send_bytes+0x92>
    4fae:	82 e0       	ldi	r24, 0x02	; 2
    4fb0:	df 91       	pop	r29
    4fb2:	cf 91       	pop	r28
    4fb4:	1f 91       	pop	r17
    4fb6:	0f 91       	pop	r16
    4fb8:	ff 90       	pop	r15
    4fba:	ef 90       	pop	r14
    4fbc:	08 95       	ret

00004fbe <serial_get_byte>:
    4fbe:	dc 01       	movw	r26, r24
    4fc0:	14 96       	adiw	r26, 0x04	; 4
    4fc2:	ed 91       	ld	r30, X+
    4fc4:	fc 91       	ld	r31, X
    4fc6:	15 97       	sbiw	r26, 0x05	; 5
    4fc8:	93 81       	ldd	r25, Z+3	; 0x03
    4fca:	82 81       	ldd	r24, Z+2	; 0x02
    4fcc:	98 17       	cp	r25, r24
    4fce:	89 f0       	breq	.+34     	; 0x4ff2 <serial_get_byte+0x34>
    4fd0:	92 81       	ldd	r25, Z+2	; 0x02
    4fd2:	85 81       	ldd	r24, Z+5	; 0x05
    4fd4:	86 95       	lsr	r24
    4fd6:	89 23       	and	r24, r25
    4fd8:	a0 81       	ld	r26, Z
    4fda:	b1 81       	ldd	r27, Z+1	; 0x01
    4fdc:	a8 0f       	add	r26, r24
    4fde:	b1 1d       	adc	r27, r1
    4fe0:	8c 91       	ld	r24, X
    4fe2:	db 01       	movw	r26, r22
    4fe4:	8c 93       	st	X, r24
    4fe6:	9f 5f       	subi	r25, 0xFF	; 255
    4fe8:	85 81       	ldd	r24, Z+5	; 0x05
    4fea:	98 23       	and	r25, r24
    4fec:	92 83       	std	Z+2, r25	; 0x02
    4fee:	80 e0       	ldi	r24, 0x00	; 0
    4ff0:	08 95       	ret
    4ff2:	83 e0       	ldi	r24, 0x03	; 3
    4ff4:	08 95       	ret

00004ff6 <__vector_25>:
    4ff6:	1f 92       	push	r1
    4ff8:	0f 92       	push	r0
    4ffa:	0f b6       	in	r0, 0x3f	; 63
    4ffc:	0f 92       	push	r0
    4ffe:	11 24       	eor	r1, r1
    5000:	0b b6       	in	r0, 0x3b	; 59
    5002:	0f 92       	push	r0
    5004:	2f 93       	push	r18
    5006:	3f 93       	push	r19
    5008:	4f 93       	push	r20
    500a:	5f 93       	push	r21
    500c:	6f 93       	push	r22
    500e:	7f 93       	push	r23
    5010:	8f 93       	push	r24
    5012:	9f 93       	push	r25
    5014:	af 93       	push	r26
    5016:	bf 93       	push	r27
    5018:	cf 93       	push	r28
    501a:	df 93       	push	r29
    501c:	ef 93       	push	r30
    501e:	ff 93       	push	r31
    5020:	a0 91 34 09 	lds	r26, 0x0934	; 0x800934 <_ser_handle>
    5024:	b0 91 35 09 	lds	r27, 0x0935	; 0x800935 <_ser_handle+0x1>
    5028:	10 97       	sbiw	r26, 0x00	; 0
    502a:	11 f1       	breq	.+68     	; 0x5070 <__vector_25+0x7a>
    502c:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    5030:	14 96       	adiw	r26, 0x04	; 4
    5032:	ed 91       	ld	r30, X+
    5034:	fc 91       	ld	r31, X
    5036:	15 97       	sbiw	r26, 0x05	; 5
    5038:	93 81       	ldd	r25, Z+3	; 0x03
    503a:	82 81       	ldd	r24, Z+2	; 0x02
    503c:	25 81       	ldd	r18, Z+5	; 0x05
    503e:	98 1b       	sub	r25, r24
    5040:	92 23       	and	r25, r18
    5042:	84 81       	ldd	r24, Z+4	; 0x04
    5044:	98 17       	cp	r25, r24
    5046:	61 f0       	breq	.+24     	; 0x5060 <__vector_25+0x6a>
    5048:	83 81       	ldd	r24, Z+3	; 0x03
    504a:	26 95       	lsr	r18
    504c:	28 23       	and	r18, r24
    504e:	c0 81       	ld	r28, Z
    5050:	d1 81       	ldd	r29, Z+1	; 0x01
    5052:	c2 0f       	add	r28, r18
    5054:	d1 1d       	adc	r29, r1
    5056:	68 83       	st	Y, r22
    5058:	8f 5f       	subi	r24, 0xFF	; 255
    505a:	95 81       	ldd	r25, Z+5	; 0x05
    505c:	89 23       	and	r24, r25
    505e:	83 83       	std	Z+3, r24	; 0x03
    5060:	16 96       	adiw	r26, 0x06	; 6
    5062:	ed 91       	ld	r30, X+
    5064:	fc 91       	ld	r31, X
    5066:	17 97       	sbiw	r26, 0x07	; 7
    5068:	30 97       	sbiw	r30, 0x00	; 0
    506a:	11 f0       	breq	.+4      	; 0x5070 <__vector_25+0x7a>
    506c:	cd 01       	movw	r24, r26
    506e:	19 95       	eicall
    5070:	ff 91       	pop	r31
    5072:	ef 91       	pop	r30
    5074:	df 91       	pop	r29
    5076:	cf 91       	pop	r28
    5078:	bf 91       	pop	r27
    507a:	af 91       	pop	r26
    507c:	9f 91       	pop	r25
    507e:	8f 91       	pop	r24
    5080:	7f 91       	pop	r23
    5082:	6f 91       	pop	r22
    5084:	5f 91       	pop	r21
    5086:	4f 91       	pop	r20
    5088:	3f 91       	pop	r19
    508a:	2f 91       	pop	r18
    508c:	0f 90       	pop	r0
    508e:	0b be       	out	0x3b, r0	; 59
    5090:	0f 90       	pop	r0
    5092:	0f be       	out	0x3f, r0	; 63
    5094:	0f 90       	pop	r0
    5096:	1f 90       	pop	r1
    5098:	18 95       	reti

0000509a <__vector_26>:
    509a:	1f 92       	push	r1
    509c:	0f 92       	push	r0
    509e:	0f b6       	in	r0, 0x3f	; 63
    50a0:	0f 92       	push	r0
    50a2:	11 24       	eor	r1, r1
    50a4:	0b b6       	in	r0, 0x3b	; 59
    50a6:	0f 92       	push	r0
    50a8:	2f 93       	push	r18
    50aa:	8f 93       	push	r24
    50ac:	9f 93       	push	r25
    50ae:	af 93       	push	r26
    50b0:	bf 93       	push	r27
    50b2:	ef 93       	push	r30
    50b4:	ff 93       	push	r31
    50b6:	e0 91 34 09 	lds	r30, 0x0934	; 0x800934 <_ser_handle>
    50ba:	f0 91 35 09 	lds	r31, 0x0935	; 0x800935 <_ser_handle+0x1>
    50be:	30 97       	sbiw	r30, 0x00	; 0
    50c0:	b9 f0       	breq	.+46     	; 0x50f0 <__vector_26+0x56>
    50c2:	02 80       	ldd	r0, Z+2	; 0x02
    50c4:	f3 81       	ldd	r31, Z+3	; 0x03
    50c6:	e0 2d       	mov	r30, r0
    50c8:	93 81       	ldd	r25, Z+3	; 0x03
    50ca:	82 81       	ldd	r24, Z+2	; 0x02
    50cc:	98 17       	cp	r25, r24
    50ce:	b1 f0       	breq	.+44     	; 0x50fc <__vector_26+0x62>
    50d0:	92 81       	ldd	r25, Z+2	; 0x02
    50d2:	85 81       	ldd	r24, Z+5	; 0x05
    50d4:	28 2f       	mov	r18, r24
    50d6:	26 95       	lsr	r18
    50d8:	29 23       	and	r18, r25
    50da:	a0 81       	ld	r26, Z
    50dc:	b1 81       	ldd	r27, Z+1	; 0x01
    50de:	a2 0f       	add	r26, r18
    50e0:	b1 1d       	adc	r27, r1
    50e2:	2c 91       	ld	r18, X
    50e4:	9f 5f       	subi	r25, 0xFF	; 255
    50e6:	89 23       	and	r24, r25
    50e8:	82 83       	std	Z+2, r24	; 0x02
    50ea:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    50ee:	0b c0       	rjmp	.+22     	; 0x5106 <__vector_26+0x6c>
    50f0:	e1 ec       	ldi	r30, 0xC1	; 193
    50f2:	f0 e0       	ldi	r31, 0x00	; 0
    50f4:	80 81       	ld	r24, Z
    50f6:	8f 7d       	andi	r24, 0xDF	; 223
    50f8:	80 83       	st	Z, r24
    50fa:	05 c0       	rjmp	.+10     	; 0x5106 <__vector_26+0x6c>
    50fc:	e1 ec       	ldi	r30, 0xC1	; 193
    50fe:	f0 e0       	ldi	r31, 0x00	; 0
    5100:	80 81       	ld	r24, Z
    5102:	8f 7d       	andi	r24, 0xDF	; 223
    5104:	80 83       	st	Z, r24
    5106:	ff 91       	pop	r31
    5108:	ef 91       	pop	r30
    510a:	bf 91       	pop	r27
    510c:	af 91       	pop	r26
    510e:	9f 91       	pop	r25
    5110:	8f 91       	pop	r24
    5112:	2f 91       	pop	r18
    5114:	0f 90       	pop	r0
    5116:	0b be       	out	0x3b, r0	; 59
    5118:	0f 90       	pop	r0
    511a:	0f be       	out	0x3f, r0	; 63
    511c:	0f 90       	pop	r0
    511e:	1f 90       	pop	r1
    5120:	18 95       	reti

00005122 <__vector_36>:
    5122:	1f 92       	push	r1
    5124:	0f 92       	push	r0
    5126:	0f b6       	in	r0, 0x3f	; 63
    5128:	0f 92       	push	r0
    512a:	11 24       	eor	r1, r1
    512c:	0b b6       	in	r0, 0x3b	; 59
    512e:	0f 92       	push	r0
    5130:	2f 93       	push	r18
    5132:	3f 93       	push	r19
    5134:	4f 93       	push	r20
    5136:	5f 93       	push	r21
    5138:	6f 93       	push	r22
    513a:	7f 93       	push	r23
    513c:	8f 93       	push	r24
    513e:	9f 93       	push	r25
    5140:	af 93       	push	r26
    5142:	bf 93       	push	r27
    5144:	cf 93       	push	r28
    5146:	df 93       	push	r29
    5148:	ef 93       	push	r30
    514a:	ff 93       	push	r31
    514c:	a0 91 36 09 	lds	r26, 0x0936	; 0x800936 <_ser_handle+0x2>
    5150:	b0 91 37 09 	lds	r27, 0x0937	; 0x800937 <_ser_handle+0x3>
    5154:	10 97       	sbiw	r26, 0x00	; 0
    5156:	11 f1       	breq	.+68     	; 0x519c <__vector_36+0x7a>
    5158:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    515c:	14 96       	adiw	r26, 0x04	; 4
    515e:	ed 91       	ld	r30, X+
    5160:	fc 91       	ld	r31, X
    5162:	15 97       	sbiw	r26, 0x05	; 5
    5164:	93 81       	ldd	r25, Z+3	; 0x03
    5166:	82 81       	ldd	r24, Z+2	; 0x02
    5168:	25 81       	ldd	r18, Z+5	; 0x05
    516a:	98 1b       	sub	r25, r24
    516c:	92 23       	and	r25, r18
    516e:	84 81       	ldd	r24, Z+4	; 0x04
    5170:	98 17       	cp	r25, r24
    5172:	61 f0       	breq	.+24     	; 0x518c <__vector_36+0x6a>
    5174:	83 81       	ldd	r24, Z+3	; 0x03
    5176:	26 95       	lsr	r18
    5178:	28 23       	and	r18, r24
    517a:	c0 81       	ld	r28, Z
    517c:	d1 81       	ldd	r29, Z+1	; 0x01
    517e:	c2 0f       	add	r28, r18
    5180:	d1 1d       	adc	r29, r1
    5182:	68 83       	st	Y, r22
    5184:	8f 5f       	subi	r24, 0xFF	; 255
    5186:	95 81       	ldd	r25, Z+5	; 0x05
    5188:	89 23       	and	r24, r25
    518a:	83 83       	std	Z+3, r24	; 0x03
    518c:	16 96       	adiw	r26, 0x06	; 6
    518e:	ed 91       	ld	r30, X+
    5190:	fc 91       	ld	r31, X
    5192:	17 97       	sbiw	r26, 0x07	; 7
    5194:	30 97       	sbiw	r30, 0x00	; 0
    5196:	11 f0       	breq	.+4      	; 0x519c <__vector_36+0x7a>
    5198:	cd 01       	movw	r24, r26
    519a:	19 95       	eicall
    519c:	ff 91       	pop	r31
    519e:	ef 91       	pop	r30
    51a0:	df 91       	pop	r29
    51a2:	cf 91       	pop	r28
    51a4:	bf 91       	pop	r27
    51a6:	af 91       	pop	r26
    51a8:	9f 91       	pop	r25
    51aa:	8f 91       	pop	r24
    51ac:	7f 91       	pop	r23
    51ae:	6f 91       	pop	r22
    51b0:	5f 91       	pop	r21
    51b2:	4f 91       	pop	r20
    51b4:	3f 91       	pop	r19
    51b6:	2f 91       	pop	r18
    51b8:	0f 90       	pop	r0
    51ba:	0b be       	out	0x3b, r0	; 59
    51bc:	0f 90       	pop	r0
    51be:	0f be       	out	0x3f, r0	; 63
    51c0:	0f 90       	pop	r0
    51c2:	1f 90       	pop	r1
    51c4:	18 95       	reti

000051c6 <__vector_37>:
    51c6:	1f 92       	push	r1
    51c8:	0f 92       	push	r0
    51ca:	0f b6       	in	r0, 0x3f	; 63
    51cc:	0f 92       	push	r0
    51ce:	11 24       	eor	r1, r1
    51d0:	0b b6       	in	r0, 0x3b	; 59
    51d2:	0f 92       	push	r0
    51d4:	2f 93       	push	r18
    51d6:	8f 93       	push	r24
    51d8:	9f 93       	push	r25
    51da:	af 93       	push	r26
    51dc:	bf 93       	push	r27
    51de:	ef 93       	push	r30
    51e0:	ff 93       	push	r31
    51e2:	e0 91 36 09 	lds	r30, 0x0936	; 0x800936 <_ser_handle+0x2>
    51e6:	f0 91 37 09 	lds	r31, 0x0937	; 0x800937 <_ser_handle+0x3>
    51ea:	30 97       	sbiw	r30, 0x00	; 0
    51ec:	b9 f0       	breq	.+46     	; 0x521c <__vector_37+0x56>
    51ee:	02 80       	ldd	r0, Z+2	; 0x02
    51f0:	f3 81       	ldd	r31, Z+3	; 0x03
    51f2:	e0 2d       	mov	r30, r0
    51f4:	93 81       	ldd	r25, Z+3	; 0x03
    51f6:	82 81       	ldd	r24, Z+2	; 0x02
    51f8:	98 17       	cp	r25, r24
    51fa:	b1 f0       	breq	.+44     	; 0x5228 <__vector_37+0x62>
    51fc:	92 81       	ldd	r25, Z+2	; 0x02
    51fe:	85 81       	ldd	r24, Z+5	; 0x05
    5200:	28 2f       	mov	r18, r24
    5202:	26 95       	lsr	r18
    5204:	29 23       	and	r18, r25
    5206:	a0 81       	ld	r26, Z
    5208:	b1 81       	ldd	r27, Z+1	; 0x01
    520a:	a2 0f       	add	r26, r18
    520c:	b1 1d       	adc	r27, r1
    520e:	2c 91       	ld	r18, X
    5210:	9f 5f       	subi	r25, 0xFF	; 255
    5212:	89 23       	and	r24, r25
    5214:	82 83       	std	Z+2, r24	; 0x02
    5216:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    521a:	0b c0       	rjmp	.+22     	; 0x5232 <__vector_37+0x6c>
    521c:	e9 ec       	ldi	r30, 0xC9	; 201
    521e:	f0 e0       	ldi	r31, 0x00	; 0
    5220:	80 81       	ld	r24, Z
    5222:	8f 7d       	andi	r24, 0xDF	; 223
    5224:	80 83       	st	Z, r24
    5226:	05 c0       	rjmp	.+10     	; 0x5232 <__vector_37+0x6c>
    5228:	e9 ec       	ldi	r30, 0xC9	; 201
    522a:	f0 e0       	ldi	r31, 0x00	; 0
    522c:	80 81       	ld	r24, Z
    522e:	8f 7d       	andi	r24, 0xDF	; 223
    5230:	80 83       	st	Z, r24
    5232:	ff 91       	pop	r31
    5234:	ef 91       	pop	r30
    5236:	bf 91       	pop	r27
    5238:	af 91       	pop	r26
    523a:	9f 91       	pop	r25
    523c:	8f 91       	pop	r24
    523e:	2f 91       	pop	r18
    5240:	0f 90       	pop	r0
    5242:	0b be       	out	0x3b, r0	; 59
    5244:	0f 90       	pop	r0
    5246:	0f be       	out	0x3f, r0	; 63
    5248:	0f 90       	pop	r0
    524a:	1f 90       	pop	r1
    524c:	18 95       	reti

0000524e <__vector_51>:
    524e:	1f 92       	push	r1
    5250:	0f 92       	push	r0
    5252:	0f b6       	in	r0, 0x3f	; 63
    5254:	0f 92       	push	r0
    5256:	11 24       	eor	r1, r1
    5258:	0b b6       	in	r0, 0x3b	; 59
    525a:	0f 92       	push	r0
    525c:	2f 93       	push	r18
    525e:	3f 93       	push	r19
    5260:	4f 93       	push	r20
    5262:	5f 93       	push	r21
    5264:	6f 93       	push	r22
    5266:	7f 93       	push	r23
    5268:	8f 93       	push	r24
    526a:	9f 93       	push	r25
    526c:	af 93       	push	r26
    526e:	bf 93       	push	r27
    5270:	cf 93       	push	r28
    5272:	df 93       	push	r29
    5274:	ef 93       	push	r30
    5276:	ff 93       	push	r31
    5278:	a0 91 38 09 	lds	r26, 0x0938	; 0x800938 <_ser_handle+0x4>
    527c:	b0 91 39 09 	lds	r27, 0x0939	; 0x800939 <_ser_handle+0x5>
    5280:	10 97       	sbiw	r26, 0x00	; 0
    5282:	11 f1       	breq	.+68     	; 0x52c8 <__vector_51+0x7a>
    5284:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    5288:	14 96       	adiw	r26, 0x04	; 4
    528a:	ed 91       	ld	r30, X+
    528c:	fc 91       	ld	r31, X
    528e:	15 97       	sbiw	r26, 0x05	; 5
    5290:	93 81       	ldd	r25, Z+3	; 0x03
    5292:	82 81       	ldd	r24, Z+2	; 0x02
    5294:	25 81       	ldd	r18, Z+5	; 0x05
    5296:	98 1b       	sub	r25, r24
    5298:	92 23       	and	r25, r18
    529a:	84 81       	ldd	r24, Z+4	; 0x04
    529c:	98 17       	cp	r25, r24
    529e:	61 f0       	breq	.+24     	; 0x52b8 <__vector_51+0x6a>
    52a0:	83 81       	ldd	r24, Z+3	; 0x03
    52a2:	26 95       	lsr	r18
    52a4:	28 23       	and	r18, r24
    52a6:	c0 81       	ld	r28, Z
    52a8:	d1 81       	ldd	r29, Z+1	; 0x01
    52aa:	c2 0f       	add	r28, r18
    52ac:	d1 1d       	adc	r29, r1
    52ae:	68 83       	st	Y, r22
    52b0:	8f 5f       	subi	r24, 0xFF	; 255
    52b2:	95 81       	ldd	r25, Z+5	; 0x05
    52b4:	89 23       	and	r24, r25
    52b6:	83 83       	std	Z+3, r24	; 0x03
    52b8:	16 96       	adiw	r26, 0x06	; 6
    52ba:	ed 91       	ld	r30, X+
    52bc:	fc 91       	ld	r31, X
    52be:	17 97       	sbiw	r26, 0x07	; 7
    52c0:	30 97       	sbiw	r30, 0x00	; 0
    52c2:	11 f0       	breq	.+4      	; 0x52c8 <__vector_51+0x7a>
    52c4:	cd 01       	movw	r24, r26
    52c6:	19 95       	eicall
    52c8:	ff 91       	pop	r31
    52ca:	ef 91       	pop	r30
    52cc:	df 91       	pop	r29
    52ce:	cf 91       	pop	r28
    52d0:	bf 91       	pop	r27
    52d2:	af 91       	pop	r26
    52d4:	9f 91       	pop	r25
    52d6:	8f 91       	pop	r24
    52d8:	7f 91       	pop	r23
    52da:	6f 91       	pop	r22
    52dc:	5f 91       	pop	r21
    52de:	4f 91       	pop	r20
    52e0:	3f 91       	pop	r19
    52e2:	2f 91       	pop	r18
    52e4:	0f 90       	pop	r0
    52e6:	0b be       	out	0x3b, r0	; 59
    52e8:	0f 90       	pop	r0
    52ea:	0f be       	out	0x3f, r0	; 63
    52ec:	0f 90       	pop	r0
    52ee:	1f 90       	pop	r1
    52f0:	18 95       	reti

000052f2 <__vector_52>:
    52f2:	1f 92       	push	r1
    52f4:	0f 92       	push	r0
    52f6:	0f b6       	in	r0, 0x3f	; 63
    52f8:	0f 92       	push	r0
    52fa:	11 24       	eor	r1, r1
    52fc:	0b b6       	in	r0, 0x3b	; 59
    52fe:	0f 92       	push	r0
    5300:	2f 93       	push	r18
    5302:	8f 93       	push	r24
    5304:	9f 93       	push	r25
    5306:	af 93       	push	r26
    5308:	bf 93       	push	r27
    530a:	ef 93       	push	r30
    530c:	ff 93       	push	r31
    530e:	e0 91 38 09 	lds	r30, 0x0938	; 0x800938 <_ser_handle+0x4>
    5312:	f0 91 39 09 	lds	r31, 0x0939	; 0x800939 <_ser_handle+0x5>
    5316:	30 97       	sbiw	r30, 0x00	; 0
    5318:	b9 f0       	breq	.+46     	; 0x5348 <__vector_52+0x56>
    531a:	02 80       	ldd	r0, Z+2	; 0x02
    531c:	f3 81       	ldd	r31, Z+3	; 0x03
    531e:	e0 2d       	mov	r30, r0
    5320:	93 81       	ldd	r25, Z+3	; 0x03
    5322:	82 81       	ldd	r24, Z+2	; 0x02
    5324:	98 17       	cp	r25, r24
    5326:	b1 f0       	breq	.+44     	; 0x5354 <__vector_52+0x62>
    5328:	92 81       	ldd	r25, Z+2	; 0x02
    532a:	85 81       	ldd	r24, Z+5	; 0x05
    532c:	28 2f       	mov	r18, r24
    532e:	26 95       	lsr	r18
    5330:	29 23       	and	r18, r25
    5332:	a0 81       	ld	r26, Z
    5334:	b1 81       	ldd	r27, Z+1	; 0x01
    5336:	a2 0f       	add	r26, r18
    5338:	b1 1d       	adc	r27, r1
    533a:	2c 91       	ld	r18, X
    533c:	9f 5f       	subi	r25, 0xFF	; 255
    533e:	89 23       	and	r24, r25
    5340:	82 83       	std	Z+2, r24	; 0x02
    5342:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    5346:	0b c0       	rjmp	.+22     	; 0x535e <__vector_52+0x6c>
    5348:	e1 ed       	ldi	r30, 0xD1	; 209
    534a:	f0 e0       	ldi	r31, 0x00	; 0
    534c:	80 81       	ld	r24, Z
    534e:	8f 7d       	andi	r24, 0xDF	; 223
    5350:	80 83       	st	Z, r24
    5352:	05 c0       	rjmp	.+10     	; 0x535e <__vector_52+0x6c>
    5354:	e1 ed       	ldi	r30, 0xD1	; 209
    5356:	f0 e0       	ldi	r31, 0x00	; 0
    5358:	80 81       	ld	r24, Z
    535a:	8f 7d       	andi	r24, 0xDF	; 223
    535c:	80 83       	st	Z, r24
    535e:	ff 91       	pop	r31
    5360:	ef 91       	pop	r30
    5362:	bf 91       	pop	r27
    5364:	af 91       	pop	r26
    5366:	9f 91       	pop	r25
    5368:	8f 91       	pop	r24
    536a:	2f 91       	pop	r18
    536c:	0f 90       	pop	r0
    536e:	0b be       	out	0x3b, r0	; 59
    5370:	0f 90       	pop	r0
    5372:	0f be       	out	0x3f, r0	; 63
    5374:	0f 90       	pop	r0
    5376:	1f 90       	pop	r1
    5378:	18 95       	reti

0000537a <__vector_54>:
    537a:	1f 92       	push	r1
    537c:	0f 92       	push	r0
    537e:	0f b6       	in	r0, 0x3f	; 63
    5380:	0f 92       	push	r0
    5382:	11 24       	eor	r1, r1
    5384:	0b b6       	in	r0, 0x3b	; 59
    5386:	0f 92       	push	r0
    5388:	2f 93       	push	r18
    538a:	3f 93       	push	r19
    538c:	4f 93       	push	r20
    538e:	5f 93       	push	r21
    5390:	6f 93       	push	r22
    5392:	7f 93       	push	r23
    5394:	8f 93       	push	r24
    5396:	9f 93       	push	r25
    5398:	af 93       	push	r26
    539a:	bf 93       	push	r27
    539c:	cf 93       	push	r28
    539e:	df 93       	push	r29
    53a0:	ef 93       	push	r30
    53a2:	ff 93       	push	r31
    53a4:	a0 91 3a 09 	lds	r26, 0x093A	; 0x80093a <_ser_handle+0x6>
    53a8:	b0 91 3b 09 	lds	r27, 0x093B	; 0x80093b <_ser_handle+0x7>
    53ac:	10 97       	sbiw	r26, 0x00	; 0
    53ae:	11 f1       	breq	.+68     	; 0x53f4 <__vector_54+0x7a>
    53b0:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    53b4:	14 96       	adiw	r26, 0x04	; 4
    53b6:	ed 91       	ld	r30, X+
    53b8:	fc 91       	ld	r31, X
    53ba:	15 97       	sbiw	r26, 0x05	; 5
    53bc:	93 81       	ldd	r25, Z+3	; 0x03
    53be:	82 81       	ldd	r24, Z+2	; 0x02
    53c0:	25 81       	ldd	r18, Z+5	; 0x05
    53c2:	98 1b       	sub	r25, r24
    53c4:	92 23       	and	r25, r18
    53c6:	84 81       	ldd	r24, Z+4	; 0x04
    53c8:	98 17       	cp	r25, r24
    53ca:	61 f0       	breq	.+24     	; 0x53e4 <__vector_54+0x6a>
    53cc:	83 81       	ldd	r24, Z+3	; 0x03
    53ce:	26 95       	lsr	r18
    53d0:	28 23       	and	r18, r24
    53d2:	c0 81       	ld	r28, Z
    53d4:	d1 81       	ldd	r29, Z+1	; 0x01
    53d6:	c2 0f       	add	r28, r18
    53d8:	d1 1d       	adc	r29, r1
    53da:	68 83       	st	Y, r22
    53dc:	8f 5f       	subi	r24, 0xFF	; 255
    53de:	95 81       	ldd	r25, Z+5	; 0x05
    53e0:	89 23       	and	r24, r25
    53e2:	83 83       	std	Z+3, r24	; 0x03
    53e4:	16 96       	adiw	r26, 0x06	; 6
    53e6:	ed 91       	ld	r30, X+
    53e8:	fc 91       	ld	r31, X
    53ea:	17 97       	sbiw	r26, 0x07	; 7
    53ec:	30 97       	sbiw	r30, 0x00	; 0
    53ee:	11 f0       	breq	.+4      	; 0x53f4 <__vector_54+0x7a>
    53f0:	cd 01       	movw	r24, r26
    53f2:	19 95       	eicall
    53f4:	ff 91       	pop	r31
    53f6:	ef 91       	pop	r30
    53f8:	df 91       	pop	r29
    53fa:	cf 91       	pop	r28
    53fc:	bf 91       	pop	r27
    53fe:	af 91       	pop	r26
    5400:	9f 91       	pop	r25
    5402:	8f 91       	pop	r24
    5404:	7f 91       	pop	r23
    5406:	6f 91       	pop	r22
    5408:	5f 91       	pop	r21
    540a:	4f 91       	pop	r20
    540c:	3f 91       	pop	r19
    540e:	2f 91       	pop	r18
    5410:	0f 90       	pop	r0
    5412:	0b be       	out	0x3b, r0	; 59
    5414:	0f 90       	pop	r0
    5416:	0f be       	out	0x3f, r0	; 63
    5418:	0f 90       	pop	r0
    541a:	1f 90       	pop	r1
    541c:	18 95       	reti

0000541e <__vector_55>:
    541e:	1f 92       	push	r1
    5420:	0f 92       	push	r0
    5422:	0f b6       	in	r0, 0x3f	; 63
    5424:	0f 92       	push	r0
    5426:	11 24       	eor	r1, r1
    5428:	0b b6       	in	r0, 0x3b	; 59
    542a:	0f 92       	push	r0
    542c:	2f 93       	push	r18
    542e:	8f 93       	push	r24
    5430:	9f 93       	push	r25
    5432:	af 93       	push	r26
    5434:	bf 93       	push	r27
    5436:	ef 93       	push	r30
    5438:	ff 93       	push	r31
    543a:	e0 91 3a 09 	lds	r30, 0x093A	; 0x80093a <_ser_handle+0x6>
    543e:	f0 91 3b 09 	lds	r31, 0x093B	; 0x80093b <_ser_handle+0x7>
    5442:	30 97       	sbiw	r30, 0x00	; 0
    5444:	b9 f0       	breq	.+46     	; 0x5474 <__vector_55+0x56>
    5446:	02 80       	ldd	r0, Z+2	; 0x02
    5448:	f3 81       	ldd	r31, Z+3	; 0x03
    544a:	e0 2d       	mov	r30, r0
    544c:	93 81       	ldd	r25, Z+3	; 0x03
    544e:	82 81       	ldd	r24, Z+2	; 0x02
    5450:	98 17       	cp	r25, r24
    5452:	b1 f0       	breq	.+44     	; 0x5480 <__vector_55+0x62>
    5454:	92 81       	ldd	r25, Z+2	; 0x02
    5456:	85 81       	ldd	r24, Z+5	; 0x05
    5458:	28 2f       	mov	r18, r24
    545a:	26 95       	lsr	r18
    545c:	29 23       	and	r18, r25
    545e:	a0 81       	ld	r26, Z
    5460:	b1 81       	ldd	r27, Z+1	; 0x01
    5462:	a2 0f       	add	r26, r18
    5464:	b1 1d       	adc	r27, r1
    5466:	2c 91       	ld	r18, X
    5468:	9f 5f       	subi	r25, 0xFF	; 255
    546a:	89 23       	and	r24, r25
    546c:	82 83       	std	Z+2, r24	; 0x02
    546e:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    5472:	0b c0       	rjmp	.+22     	; 0x548a <__vector_55+0x6c>
    5474:	e1 e3       	ldi	r30, 0x31	; 49
    5476:	f1 e0       	ldi	r31, 0x01	; 1
    5478:	80 81       	ld	r24, Z
    547a:	8f 7d       	andi	r24, 0xDF	; 223
    547c:	80 83       	st	Z, r24
    547e:	05 c0       	rjmp	.+10     	; 0x548a <__vector_55+0x6c>
    5480:	e1 e3       	ldi	r30, 0x31	; 49
    5482:	f1 e0       	ldi	r31, 0x01	; 1
    5484:	80 81       	ld	r24, Z
    5486:	8f 7d       	andi	r24, 0xDF	; 223
    5488:	80 83       	st	Z, r24
    548a:	ff 91       	pop	r31
    548c:	ef 91       	pop	r30
    548e:	bf 91       	pop	r27
    5490:	af 91       	pop	r26
    5492:	9f 91       	pop	r25
    5494:	8f 91       	pop	r24
    5496:	2f 91       	pop	r18
    5498:	0f 90       	pop	r0
    549a:	0b be       	out	0x3b, r0	; 59
    549c:	0f 90       	pop	r0
    549e:	0f be       	out	0x3f, r0	; 63
    54a0:	0f 90       	pop	r0
    54a2:	1f 90       	pop	r1
    54a4:	18 95       	reti

000054a6 <fifo_init>:
    54a6:	fc 01       	movw	r30, r24
    54a8:	41 11       	cpse	r20, r1
    54aa:	02 c0       	rjmp	.+4      	; 0x54b0 <fifo_init+0xa>
    54ac:	0e 94 e8 36 	call	0x6dd0	; 0x6dd0 <abort>
    54b0:	84 2f       	mov	r24, r20
    54b2:	90 e0       	ldi	r25, 0x00	; 0
    54b4:	9c 01       	movw	r18, r24
    54b6:	21 50       	subi	r18, 0x01	; 1
    54b8:	31 09       	sbc	r19, r1
    54ba:	82 23       	and	r24, r18
    54bc:	93 23       	and	r25, r19
    54be:	89 2b       	or	r24, r25
    54c0:	11 f0       	breq	.+4      	; 0x54c6 <fifo_init+0x20>
    54c2:	0e 94 e8 36 	call	0x6dd0	; 0x6dd0 <abort>
    54c6:	41 38       	cpi	r20, 0x81	; 129
    54c8:	10 f0       	brcs	.+4      	; 0x54ce <fifo_init+0x28>
    54ca:	0e 94 e8 36 	call	0x6dd0	; 0x6dd0 <abort>
    54ce:	12 82       	std	Z+2, r1	; 0x02
    54d0:	13 82       	std	Z+3, r1	; 0x03
    54d2:	44 83       	std	Z+4, r20	; 0x04
    54d4:	44 0f       	add	r20, r20
    54d6:	41 50       	subi	r20, 0x01	; 1
    54d8:	45 83       	std	Z+5, r20	; 0x05
    54da:	71 83       	std	Z+1, r23	; 0x01
    54dc:	60 83       	st	Z, r22
    54de:	80 e0       	ldi	r24, 0x00	; 0
    54e0:	90 e0       	ldi	r25, 0x00	; 0
    54e2:	08 95       	ret

000054e4 <hal_create>:
    54e4:	ec e9       	ldi	r30, 0x9C	; 156
    54e6:	fa e0       	ldi	r31, 0x0A	; 10
    54e8:	23 ec       	ldi	r18, 0xC3	; 195
    54ea:	30 e3       	ldi	r19, 0x30	; 48
    54ec:	31 83       	std	Z+1, r19	; 0x01
    54ee:	20 83       	st	Z, r18
    54f0:	26 ec       	ldi	r18, 0xC6	; 198
    54f2:	30 e3       	ldi	r19, 0x30	; 48
    54f4:	33 83       	std	Z+3, r19	; 0x03
    54f6:	22 83       	std	Z+2, r18	; 0x02
    54f8:	21 ed       	ldi	r18, 0xD1	; 209
    54fa:	30 e3       	ldi	r19, 0x30	; 48
    54fc:	35 83       	std	Z+5, r19	; 0x05
    54fe:	24 83       	std	Z+4, r18	; 0x04
    5500:	25 ed       	ldi	r18, 0xD5	; 213
    5502:	30 e3       	ldi	r19, 0x30	; 48
    5504:	37 83       	std	Z+7, r19	; 0x07
    5506:	26 83       	std	Z+6, r18	; 0x06
    5508:	2b ed       	ldi	r18, 0xDB	; 219
    550a:	30 e3       	ldi	r19, 0x30	; 48
    550c:	31 87       	std	Z+9, r19	; 0x09
    550e:	20 87       	std	Z+8, r18	; 0x08
    5510:	27 ee       	ldi	r18, 0xE7	; 231
    5512:	30 e3       	ldi	r19, 0x30	; 48
    5514:	33 87       	std	Z+11, r19	; 0x0b
    5516:	22 87       	std	Z+10, r18	; 0x0a
    5518:	2c ee       	ldi	r18, 0xEC	; 236
    551a:	30 e3       	ldi	r19, 0x30	; 48
    551c:	35 87       	std	Z+13, r19	; 0x0d
    551e:	24 87       	std	Z+12, r18	; 0x0c
    5520:	28 ef       	ldi	r18, 0xF8	; 248
    5522:	30 e3       	ldi	r19, 0x30	; 48
    5524:	37 87       	std	Z+15, r19	; 0x0f
    5526:	26 87       	std	Z+14, r18	; 0x0e
    5528:	28 ed       	ldi	r18, 0xD8	; 216
    552a:	30 e3       	ldi	r19, 0x30	; 48
    552c:	31 8b       	std	Z+17, r19	; 0x11
    552e:	20 8b       	std	Z+16, r18	; 0x10
    5530:	2d ef       	ldi	r18, 0xFD	; 253
    5532:	30 e3       	ldi	r19, 0x30	; 48
    5534:	33 8b       	std	Z+19, r19	; 0x13
    5536:	22 8b       	std	Z+18, r18	; 0x12
    5538:	2a e0       	ldi	r18, 0x0A	; 10
    553a:	31 e3       	ldi	r19, 0x31	; 49
    553c:	35 8b       	std	Z+21, r19	; 0x15
    553e:	24 8b       	std	Z+20, r18	; 0x14
    5540:	68 2f       	mov	r22, r24
    5542:	cf 01       	movw	r24, r30
    5544:	2f c1       	rjmp	.+606    	; 0x57a4 <led_create>
    5546:	08 95       	ret

00005548 <_hihTwiCallback>:
    5548:	65 30       	cpi	r22, 0x05	; 5
    554a:	f1 f4       	brne	.+60     	; 0x5588 <_hihTwiCallback+0x40>
    554c:	fa 01       	movw	r30, r20
    554e:	80 81       	ld	r24, Z
    5550:	8f 73       	andi	r24, 0x3F	; 63
    5552:	90 e0       	ldi	r25, 0x00	; 0
    5554:	98 2f       	mov	r25, r24
    5556:	88 27       	eor	r24, r24
    5558:	21 81       	ldd	r18, Z+1	; 0x01
    555a:	82 2b       	or	r24, r18
    555c:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <_hum+0x1>
    5560:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <_hum>
    5564:	82 81       	ldd	r24, Z+2	; 0x02
    5566:	f0 e4       	ldi	r31, 0x40	; 64
    5568:	8f 9f       	mul	r24, r31
    556a:	c0 01       	movw	r24, r0
    556c:	11 24       	eor	r1, r1
    556e:	fa 01       	movw	r30, r20
    5570:	23 81       	ldd	r18, Z+3	; 0x03
    5572:	26 95       	lsr	r18
    5574:	26 95       	lsr	r18
    5576:	82 2b       	or	r24, r18
    5578:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <_temp+0x1>
    557c:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <_temp>
    5580:	81 e0       	ldi	r24, 0x01	; 1
    5582:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_measuringIsReady>
    5586:	08 95       	ret
    5588:	64 30       	cpi	r22, 0x04	; 4
    558a:	51 f0       	breq	.+20     	; 0x55a0 <_hihTwiCallback+0x58>
    558c:	80 e0       	ldi	r24, 0x00	; 0
    558e:	90 e4       	ldi	r25, 0x40	; 64
    5590:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <_temp+0x1>
    5594:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <_temp>
    5598:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <_hum+0x1>
    559c:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <_hum>
    55a0:	08 95       	ret

000055a2 <hih8120Create>:
    55a2:	0f 93       	push	r16
    55a4:	1f 93       	push	r17
    55a6:	04 ea       	ldi	r16, 0xA4	; 164
    55a8:	1a e2       	ldi	r17, 0x2A	; 42
    55aa:	20 e0       	ldi	r18, 0x00	; 0
    55ac:	34 e2       	ldi	r19, 0x24	; 36
    55ae:	44 ef       	ldi	r20, 0xF4	; 244
    55b0:	50 e0       	ldi	r21, 0x00	; 0
    55b2:	60 e0       	ldi	r22, 0x00	; 0
    55b4:	87 e2       	ldi	r24, 0x27	; 39
    55b6:	ff d6       	rcall	.+3582   	; 0x63b6 <twiCreate>
    55b8:	90 93 3e 09 	sts	0x093E, r25	; 0x80093e <_hih8120Handler+0x1>
    55bc:	80 93 3d 09 	sts	0x093D, r24	; 0x80093d <_hih8120Handler>
    55c0:	21 e0       	ldi	r18, 0x01	; 1
    55c2:	89 2b       	or	r24, r25
    55c4:	09 f0       	breq	.+2      	; 0x55c8 <hih8120Create+0x26>
    55c6:	20 e0       	ldi	r18, 0x00	; 0
    55c8:	82 2f       	mov	r24, r18
    55ca:	1f 91       	pop	r17
    55cc:	0f 91       	pop	r16
    55ce:	08 95       	ret

000055d0 <hih8120Wakeup>:
    55d0:	80 91 3d 09 	lds	r24, 0x093D	; 0x80093d <_hih8120Handler>
    55d4:	90 91 3e 09 	lds	r25, 0x093E	; 0x80093e <_hih8120Handler+0x1>
    55d8:	00 97       	sbiw	r24, 0x00	; 0
    55da:	51 f0       	breq	.+20     	; 0x55f0 <hih8120Wakeup+0x20>
    55dc:	40 e0       	ldi	r20, 0x00	; 0
    55de:	60 e0       	ldi	r22, 0x00	; 0
    55e0:	70 e0       	ldi	r23, 0x00	; 0
    55e2:	3a d7       	rcall	.+3700   	; 0x6458 <twiTransmit>
    55e4:	84 30       	cpi	r24, 0x04	; 4
    55e6:	31 f4       	brne	.+12     	; 0x55f4 <hih8120Wakeup+0x24>
    55e8:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_measuringIsReady>
    55ec:	80 e0       	ldi	r24, 0x00	; 0
    55ee:	08 95       	ret
    55f0:	82 e0       	ldi	r24, 0x02	; 2
    55f2:	08 95       	ret
    55f4:	83 e0       	ldi	r24, 0x03	; 3
    55f6:	08 95       	ret

000055f8 <hih8120Meassure>:
    55f8:	80 91 3d 09 	lds	r24, 0x093D	; 0x80093d <_hih8120Handler>
    55fc:	90 91 3e 09 	lds	r25, 0x093E	; 0x80093e <_hih8120Handler+0x1>
    5600:	00 97       	sbiw	r24, 0x00	; 0
    5602:	31 f0       	breq	.+12     	; 0x5610 <hih8120Meassure+0x18>
    5604:	64 e0       	ldi	r22, 0x04	; 4
    5606:	74 d7       	rcall	.+3816   	; 0x64f0 <twiReceive>
    5608:	85 30       	cpi	r24, 0x05	; 5
    560a:	21 f0       	breq	.+8      	; 0x5614 <hih8120Meassure+0x1c>
    560c:	83 e0       	ldi	r24, 0x03	; 3
    560e:	08 95       	ret
    5610:	82 e0       	ldi	r24, 0x02	; 2
    5612:	08 95       	ret
    5614:	80 e0       	ldi	r24, 0x00	; 0
    5616:	08 95       	ret

00005618 <hih8120GetTemperature>:
    5618:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <_temp>
    561c:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <_temp+0x1>
    5620:	80 e0       	ldi	r24, 0x00	; 0
    5622:	90 e0       	ldi	r25, 0x00	; 0
    5624:	0e 94 94 34 	call	0x6928	; 0x6928 <__floatunsisf>
    5628:	20 e0       	ldi	r18, 0x00	; 0
    562a:	30 e0       	ldi	r19, 0x00	; 0
    562c:	45 e2       	ldi	r20, 0x25	; 37
    562e:	53 e4       	ldi	r21, 0x43	; 67
    5630:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    5634:	20 e0       	ldi	r18, 0x00	; 0
    5636:	38 ef       	ldi	r19, 0xF8	; 248
    5638:	4f e7       	ldi	r20, 0x7F	; 127
    563a:	56 e4       	ldi	r21, 0x46	; 70
    563c:	0e 94 fb 33 	call	0x67f6	; 0x67f6 <__divsf3>
    5640:	20 e0       	ldi	r18, 0x00	; 0
    5642:	30 e0       	ldi	r19, 0x00	; 0
    5644:	40 e2       	ldi	r20, 0x20	; 32
    5646:	52 e4       	ldi	r21, 0x42	; 66
    5648:	0c 94 92 33 	jmp	0x6724	; 0x6724 <__subsf3>
    564c:	08 95       	ret

0000564e <hih8120GetTemperature_x10>:
    564e:	e4 df       	rcall	.-56     	; 0x5618 <hih8120GetTemperature>
    5650:	20 e0       	ldi	r18, 0x00	; 0
    5652:	30 e0       	ldi	r19, 0x00	; 0
    5654:	40 e2       	ldi	r20, 0x20	; 32
    5656:	51 e4       	ldi	r21, 0x41	; 65
    5658:	0e 94 4a 35 	call	0x6a94	; 0x6a94 <__mulsf3>
    565c:	0e 94 63 34 	call	0x68c6	; 0x68c6 <__fixsfsi>
    5660:	cb 01       	movw	r24, r22
    5662:	08 95       	ret

00005664 <_turn_off>:
    5664:	cf 93       	push	r28
    5666:	df 93       	push	r29
    5668:	90 e0       	ldi	r25, 0x00	; 0
    566a:	fc 01       	movw	r30, r24
    566c:	ee 0f       	add	r30, r30
    566e:	ff 1f       	adc	r31, r31
    5670:	e8 0f       	add	r30, r24
    5672:	f9 1f       	adc	r31, r25
    5674:	ee 0f       	add	r30, r30
    5676:	ff 1f       	adc	r31, r31
    5678:	e1 5c       	subi	r30, 0xC1	; 193
    567a:	f6 4f       	sbci	r31, 0xF6	; 246
    567c:	23 81       	ldd	r18, Z+3	; 0x03
    567e:	21 11       	cpse	r18, r1
    5680:	0a c0       	rjmp	.+20     	; 0x5696 <_turn_off+0x32>
    5682:	ef 01       	movw	r28, r30
    5684:	e0 91 a4 0a 	lds	r30, 0x0AA4	; 0x800aa4 <register_access+0x8>
    5688:	f0 91 a5 0a 	lds	r31, 0x0AA5	; 0x800aa5 <register_access+0x9>
    568c:	6a 81       	ldd	r22, Y+2	; 0x02
    568e:	88 81       	ld	r24, Y
    5690:	99 81       	ldd	r25, Y+1	; 0x01
    5692:	19 95       	eicall
    5694:	12 c0       	rjmp	.+36     	; 0x56ba <_turn_off+0x56>
    5696:	dc 01       	movw	r26, r24
    5698:	aa 0f       	add	r26, r26
    569a:	bb 1f       	adc	r27, r27
    569c:	ed 01       	movw	r28, r26
    569e:	c8 0f       	add	r28, r24
    56a0:	d9 1f       	adc	r29, r25
    56a2:	cc 0f       	add	r28, r28
    56a4:	dd 1f       	adc	r29, r29
    56a6:	c1 5c       	subi	r28, 0xC1	; 193
    56a8:	d6 4f       	sbci	r29, 0xF6	; 246
    56aa:	e0 91 ae 0a 	lds	r30, 0x0AAE	; 0x800aae <register_access+0x12>
    56ae:	f0 91 af 0a 	lds	r31, 0x0AAF	; 0x800aaf <register_access+0x13>
    56b2:	6a 81       	ldd	r22, Y+2	; 0x02
    56b4:	88 81       	ld	r24, Y
    56b6:	99 81       	ldd	r25, Y+1	; 0x01
    56b8:	19 95       	eicall
    56ba:	df 91       	pop	r29
    56bc:	cf 91       	pop	r28
    56be:	08 95       	ret

000056c0 <_turn_on>:
    56c0:	cf 93       	push	r28
    56c2:	df 93       	push	r29
    56c4:	90 e0       	ldi	r25, 0x00	; 0
    56c6:	fc 01       	movw	r30, r24
    56c8:	ee 0f       	add	r30, r30
    56ca:	ff 1f       	adc	r31, r31
    56cc:	e8 0f       	add	r30, r24
    56ce:	f9 1f       	adc	r31, r25
    56d0:	ee 0f       	add	r30, r30
    56d2:	ff 1f       	adc	r31, r31
    56d4:	e1 5c       	subi	r30, 0xC1	; 193
    56d6:	f6 4f       	sbci	r31, 0xF6	; 246
    56d8:	23 81       	ldd	r18, Z+3	; 0x03
    56da:	21 11       	cpse	r18, r1
    56dc:	0a c0       	rjmp	.+20     	; 0x56f2 <_turn_on+0x32>
    56de:	ef 01       	movw	r28, r30
    56e0:	e0 91 ae 0a 	lds	r30, 0x0AAE	; 0x800aae <register_access+0x12>
    56e4:	f0 91 af 0a 	lds	r31, 0x0AAF	; 0x800aaf <register_access+0x13>
    56e8:	6a 81       	ldd	r22, Y+2	; 0x02
    56ea:	88 81       	ld	r24, Y
    56ec:	99 81       	ldd	r25, Y+1	; 0x01
    56ee:	19 95       	eicall
    56f0:	12 c0       	rjmp	.+36     	; 0x5716 <_turn_on+0x56>
    56f2:	dc 01       	movw	r26, r24
    56f4:	aa 0f       	add	r26, r26
    56f6:	bb 1f       	adc	r27, r27
    56f8:	ed 01       	movw	r28, r26
    56fa:	c8 0f       	add	r28, r24
    56fc:	d9 1f       	adc	r29, r25
    56fe:	cc 0f       	add	r28, r28
    5700:	dd 1f       	adc	r29, r29
    5702:	c1 5c       	subi	r28, 0xC1	; 193
    5704:	d6 4f       	sbci	r29, 0xF6	; 246
    5706:	e0 91 a4 0a 	lds	r30, 0x0AA4	; 0x800aa4 <register_access+0x8>
    570a:	f0 91 a5 0a 	lds	r31, 0x0AA5	; 0x800aa5 <register_access+0x9>
    570e:	6a 81       	ldd	r22, Y+2	; 0x02
    5710:	88 81       	ld	r24, Y
    5712:	99 81       	ldd	r25, Y+1	; 0x01
    5714:	19 95       	eicall
    5716:	df 91       	pop	r29
    5718:	cf 91       	pop	r28
    571a:	08 95       	ret

0000571c <_hal_led_task>:
    571c:	81 e6       	ldi	r24, 0x61	; 97
    571e:	95 e0       	ldi	r25, 0x05	; 5
    5720:	0e 94 39 37 	call	0x6e72	; 0x6e72 <puts>
    5724:	0f 2e       	mov	r0, r31
    5726:	fc e9       	ldi	r31, 0x9C	; 156
    5728:	cf 2e       	mov	r12, r31
    572a:	fa e0       	ldi	r31, 0x0A	; 10
    572c:	df 2e       	mov	r13, r31
    572e:	f0 2d       	mov	r31, r0
    5730:	04 e0       	ldi	r16, 0x04	; 4
    5732:	cf e3       	ldi	r28, 0x3F	; 63
    5734:	d9 e0       	ldi	r29, 0x09	; 9
    5736:	10 e0       	ldi	r17, 0x00	; 0
    5738:	8c 81       	ldd	r24, Y+4	; 0x04
    573a:	81 30       	cpi	r24, 0x01	; 1
    573c:	69 f0       	breq	.+26     	; 0x5758 <_hal_led_task+0x3c>
    573e:	e8 f0       	brcs	.+58     	; 0x577a <_hal_led_task+0x5e>
    5740:	82 30       	cpi	r24, 0x02	; 2
    5742:	39 f5       	brne	.+78     	; 0x5792 <_hal_led_task+0x76>
    5744:	d6 01       	movw	r26, r12
    5746:	1c 96       	adiw	r26, 0x0c	; 12
    5748:	ed 91       	ld	r30, X+
    574a:	fc 91       	ld	r31, X
    574c:	1d 97       	sbiw	r26, 0x0d	; 13
    574e:	6a 81       	ldd	r22, Y+2	; 0x02
    5750:	88 81       	ld	r24, Y
    5752:	99 81       	ldd	r25, Y+1	; 0x01
    5754:	19 95       	eicall
    5756:	1d c0       	rjmp	.+58     	; 0x5792 <_hal_led_task+0x76>
    5758:	8d 81       	ldd	r24, Y+5	; 0x05
    575a:	8f 5f       	subi	r24, 0xFF	; 255
    575c:	8a 30       	cpi	r24, 0x0A	; 10
    575e:	10 f4       	brcc	.+4      	; 0x5764 <_hal_led_task+0x48>
    5760:	8d 83       	std	Y+5, r24	; 0x05
    5762:	17 c0       	rjmp	.+46     	; 0x5792 <_hal_led_task+0x76>
    5764:	1d 82       	std	Y+5, r1	; 0x05
    5766:	d6 01       	movw	r26, r12
    5768:	1c 96       	adiw	r26, 0x0c	; 12
    576a:	ed 91       	ld	r30, X+
    576c:	fc 91       	ld	r31, X
    576e:	1d 97       	sbiw	r26, 0x0d	; 13
    5770:	6a 81       	ldd	r22, Y+2	; 0x02
    5772:	88 81       	ld	r24, Y
    5774:	99 81       	ldd	r25, Y+1	; 0x01
    5776:	19 95       	eicall
    5778:	0c c0       	rjmp	.+24     	; 0x5792 <_hal_led_task+0x76>
    577a:	8d 81       	ldd	r24, Y+5	; 0x05
    577c:	88 23       	and	r24, r24
    577e:	31 f0       	breq	.+12     	; 0x578c <_hal_led_task+0x70>
    5780:	81 2f       	mov	r24, r17
    5782:	9e df       	rcall	.-196    	; 0x56c0 <_turn_on>
    5784:	8d 81       	ldd	r24, Y+5	; 0x05
    5786:	81 50       	subi	r24, 0x01	; 1
    5788:	8d 83       	std	Y+5, r24	; 0x05
    578a:	03 c0       	rjmp	.+6      	; 0x5792 <_hal_led_task+0x76>
    578c:	0c 83       	std	Y+4, r16	; 0x04
    578e:	81 2f       	mov	r24, r17
    5790:	69 df       	rcall	.-302    	; 0x5664 <_turn_off>
    5792:	1f 5f       	subi	r17, 0xFF	; 255
    5794:	26 96       	adiw	r28, 0x06	; 6
    5796:	14 30       	cpi	r17, 0x04	; 4
    5798:	79 f6       	brne	.-98     	; 0x5738 <_hal_led_task+0x1c>
    579a:	85 e0       	ldi	r24, 0x05	; 5
    579c:	90 e0       	ldi	r25, 0x00	; 0
    579e:	0e 94 b0 12 	call	0x2560	; 0x2560 <vTaskDelay>
    57a2:	c7 cf       	rjmp	.-114    	; 0x5732 <_hal_led_task+0x16>

000057a4 <led_create>:
    57a4:	cf 92       	push	r12
    57a6:	df 92       	push	r13
    57a8:	ef 92       	push	r14
    57aa:	ff 92       	push	r15
    57ac:	0f 93       	push	r16
    57ae:	1f 93       	push	r17
    57b0:	cf 93       	push	r28
    57b2:	df 93       	push	r29
    57b4:	06 2f       	mov	r16, r22
    57b6:	0f 2e       	mov	r0, r31
    57b8:	fc e9       	ldi	r31, 0x9C	; 156
    57ba:	ef 2e       	mov	r14, r31
    57bc:	fa e0       	ldi	r31, 0x0A	; 10
    57be:	ff 2e       	mov	r15, r31
    57c0:	f0 2d       	mov	r31, r0
    57c2:	d7 01       	movw	r26, r14
    57c4:	18 96       	adiw	r26, 0x08	; 8
    57c6:	ed 91       	ld	r30, X+
    57c8:	fc 91       	ld	r31, X
    57ca:	19 97       	sbiw	r26, 0x09	; 9
    57cc:	66 e0       	ldi	r22, 0x06	; 6
    57ce:	87 e2       	ldi	r24, 0x27	; 39
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	19 95       	eicall
    57d4:	cf e3       	ldi	r28, 0x3F	; 63
    57d6:	d9 e0       	ldi	r29, 0x09	; 9
    57d8:	0f 2e       	mov	r0, r31
    57da:	f8 e2       	ldi	r31, 0x28	; 40
    57dc:	cf 2e       	mov	r12, r31
    57de:	d1 2c       	mov	r13, r1
    57e0:	f0 2d       	mov	r31, r0
    57e2:	d9 82       	std	Y+1, r13	; 0x01
    57e4:	c8 82       	st	Y, r12
    57e6:	86 e0       	ldi	r24, 0x06	; 6
    57e8:	8a 83       	std	Y+2, r24	; 0x02
    57ea:	1b 82       	std	Y+3, r1	; 0x03
    57ec:	14 e0       	ldi	r17, 0x04	; 4
    57ee:	1c 83       	std	Y+4, r17	; 0x04
    57f0:	80 e0       	ldi	r24, 0x00	; 0
    57f2:	38 df       	rcall	.-400    	; 0x5664 <_turn_off>
    57f4:	d7 01       	movw	r26, r14
    57f6:	18 96       	adiw	r26, 0x08	; 8
    57f8:	ed 91       	ld	r30, X+
    57fa:	fc 91       	ld	r31, X
    57fc:	19 97       	sbiw	r26, 0x09	; 9
    57fe:	67 e0       	ldi	r22, 0x07	; 7
    5800:	87 e2       	ldi	r24, 0x27	; 39
    5802:	90 e0       	ldi	r25, 0x00	; 0
    5804:	19 95       	eicall
    5806:	df 82       	std	Y+7, r13	; 0x07
    5808:	ce 82       	std	Y+6, r12	; 0x06
    580a:	87 e0       	ldi	r24, 0x07	; 7
    580c:	88 87       	std	Y+8, r24	; 0x08
    580e:	19 86       	std	Y+9, r1	; 0x09
    5810:	1a 87       	std	Y+10, r17	; 0x0a
    5812:	81 e0       	ldi	r24, 0x01	; 1
    5814:	27 df       	rcall	.-434    	; 0x5664 <_turn_off>
    5816:	d7 01       	movw	r26, r14
    5818:	18 96       	adiw	r26, 0x08	; 8
    581a:	ed 91       	ld	r30, X+
    581c:	fc 91       	ld	r31, X
    581e:	19 97       	sbiw	r26, 0x09	; 9
    5820:	65 e0       	ldi	r22, 0x05	; 5
    5822:	83 e3       	ldi	r24, 0x33	; 51
    5824:	90 e0       	ldi	r25, 0x00	; 0
    5826:	19 95       	eicall
    5828:	d7 01       	movw	r26, r14
    582a:	18 96       	adiw	r26, 0x08	; 8
    582c:	ed 91       	ld	r30, X+
    582e:	fc 91       	ld	r31, X
    5830:	19 97       	sbiw	r26, 0x09	; 9
    5832:	61 e0       	ldi	r22, 0x01	; 1
    5834:	84 e3       	ldi	r24, 0x34	; 52
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	19 95       	eicall
    583a:	84 e3       	ldi	r24, 0x34	; 52
    583c:	90 e0       	ldi	r25, 0x00	; 0
    583e:	9d 87       	std	Y+13, r25	; 0x0d
    5840:	8c 87       	std	Y+12, r24	; 0x0c
    5842:	85 e0       	ldi	r24, 0x05	; 5
    5844:	8e 87       	std	Y+14, r24	; 0x0e
    5846:	1f 86       	std	Y+15, r1	; 0x0f
    5848:	18 8b       	std	Y+16, r17	; 0x10
    584a:	82 e0       	ldi	r24, 0x02	; 2
    584c:	0b df       	rcall	.-490    	; 0x5664 <_turn_off>
    584e:	d7 01       	movw	r26, r14
    5850:	18 96       	adiw	r26, 0x08	; 8
    5852:	ed 91       	ld	r30, X+
    5854:	fc 91       	ld	r31, X
    5856:	19 97       	sbiw	r26, 0x09	; 9
    5858:	64 e0       	ldi	r22, 0x04	; 4
    585a:	81 e0       	ldi	r24, 0x01	; 1
    585c:	91 e0       	ldi	r25, 0x01	; 1
    585e:	19 95       	eicall
    5860:	d7 01       	movw	r26, r14
    5862:	18 96       	adiw	r26, 0x08	; 8
    5864:	ed 91       	ld	r30, X+
    5866:	fc 91       	ld	r31, X
    5868:	19 97       	sbiw	r26, 0x09	; 9
    586a:	61 e0       	ldi	r22, 0x01	; 1
    586c:	82 e0       	ldi	r24, 0x02	; 2
    586e:	91 e0       	ldi	r25, 0x01	; 1
    5870:	19 95       	eicall
    5872:	82 e0       	ldi	r24, 0x02	; 2
    5874:	91 e0       	ldi	r25, 0x01	; 1
    5876:	9b 8b       	std	Y+19, r25	; 0x13
    5878:	8a 8b       	std	Y+18, r24	; 0x12
    587a:	1c 8b       	std	Y+20, r17	; 0x14
    587c:	1d 8a       	std	Y+21, r1	; 0x15
    587e:	1e 8b       	std	Y+22, r17	; 0x16
    5880:	83 e0       	ldi	r24, 0x03	; 3
    5882:	f0 de       	rcall	.-544    	; 0x5664 <_turn_off>
    5884:	e1 2c       	mov	r14, r1
    5886:	f1 2c       	mov	r15, r1
    5888:	20 e0       	ldi	r18, 0x00	; 0
    588a:	30 e0       	ldi	r19, 0x00	; 0
    588c:	40 ec       	ldi	r20, 0xC0	; 192
    588e:	50 e0       	ldi	r21, 0x00	; 0
    5890:	68 e7       	ldi	r22, 0x78	; 120
    5892:	75 e0       	ldi	r23, 0x05	; 5
    5894:	8e e8       	ldi	r24, 0x8E	; 142
    5896:	9b e2       	ldi	r25, 0x2B	; 43
    5898:	0e 94 df 10 	call	0x21be	; 0x21be <xTaskCreate>
    589c:	df 91       	pop	r29
    589e:	cf 91       	pop	r28
    58a0:	1f 91       	pop	r17
    58a2:	0f 91       	pop	r16
    58a4:	ff 90       	pop	r15
    58a6:	ef 90       	pop	r14
    58a8:	df 90       	pop	r13
    58aa:	cf 90       	pop	r12
    58ac:	08 95       	ret

000058ae <led_slow_blink>:
    58ae:	0f 93       	push	r16
    58b0:	1f 93       	push	r17
    58b2:	cf 93       	push	r28
    58b4:	df 93       	push	r29
    58b6:	c8 2f       	mov	r28, r24
    58b8:	d0 e0       	ldi	r29, 0x00	; 0
    58ba:	8e 01       	movw	r16, r28
    58bc:	00 0f       	add	r16, r16
    58be:	11 1f       	adc	r17, r17
    58c0:	d8 01       	movw	r26, r16
    58c2:	ac 0f       	add	r26, r28
    58c4:	bd 1f       	adc	r27, r29
    58c6:	aa 0f       	add	r26, r26
    58c8:	bb 1f       	adc	r27, r27
    58ca:	a1 5c       	subi	r26, 0xC1	; 193
    58cc:	b6 4f       	sbci	r27, 0xF6	; 246
    58ce:	e0 91 a8 0a 	lds	r30, 0x0AA8	; 0x800aa8 <register_access+0xc>
    58d2:	f0 91 a9 0a 	lds	r31, 0x0AA9	; 0x800aa9 <register_access+0xd>
    58d6:	12 96       	adiw	r26, 0x02	; 2
    58d8:	6c 91       	ld	r22, X
    58da:	12 97       	sbiw	r26, 0x02	; 2
    58dc:	8d 91       	ld	r24, X+
    58de:	9c 91       	ld	r25, X
    58e0:	19 95       	eicall
    58e2:	c0 0f       	add	r28, r16
    58e4:	d1 1f       	adc	r29, r17
    58e6:	cc 0f       	add	r28, r28
    58e8:	dd 1f       	adc	r29, r29
    58ea:	c1 5c       	subi	r28, 0xC1	; 193
    58ec:	d6 4f       	sbci	r29, 0xF6	; 246
    58ee:	81 e0       	ldi	r24, 0x01	; 1
    58f0:	8c 83       	std	Y+4, r24	; 0x04
    58f2:	df 91       	pop	r29
    58f4:	cf 91       	pop	r28
    58f6:	1f 91       	pop	r17
    58f8:	0f 91       	pop	r16
    58fa:	08 95       	ret

000058fc <led_fast_blink>:
    58fc:	0f 93       	push	r16
    58fe:	1f 93       	push	r17
    5900:	cf 93       	push	r28
    5902:	df 93       	push	r29
    5904:	c8 2f       	mov	r28, r24
    5906:	d0 e0       	ldi	r29, 0x00	; 0
    5908:	8e 01       	movw	r16, r28
    590a:	00 0f       	add	r16, r16
    590c:	11 1f       	adc	r17, r17
    590e:	d8 01       	movw	r26, r16
    5910:	ac 0f       	add	r26, r28
    5912:	bd 1f       	adc	r27, r29
    5914:	aa 0f       	add	r26, r26
    5916:	bb 1f       	adc	r27, r27
    5918:	a1 5c       	subi	r26, 0xC1	; 193
    591a:	b6 4f       	sbci	r27, 0xF6	; 246
    591c:	e0 91 a8 0a 	lds	r30, 0x0AA8	; 0x800aa8 <register_access+0xc>
    5920:	f0 91 a9 0a 	lds	r31, 0x0AA9	; 0x800aa9 <register_access+0xd>
    5924:	12 96       	adiw	r26, 0x02	; 2
    5926:	6c 91       	ld	r22, X
    5928:	12 97       	sbiw	r26, 0x02	; 2
    592a:	8d 91       	ld	r24, X+
    592c:	9c 91       	ld	r25, X
    592e:	19 95       	eicall
    5930:	c0 0f       	add	r28, r16
    5932:	d1 1f       	adc	r29, r17
    5934:	cc 0f       	add	r28, r28
    5936:	dd 1f       	adc	r29, r29
    5938:	c1 5c       	subi	r28, 0xC1	; 193
    593a:	d6 4f       	sbci	r29, 0xF6	; 246
    593c:	82 e0       	ldi	r24, 0x02	; 2
    593e:	8c 83       	std	Y+4, r24	; 0x04
    5940:	df 91       	pop	r29
    5942:	cf 91       	pop	r28
    5944:	1f 91       	pop	r17
    5946:	0f 91       	pop	r16
    5948:	08 95       	ret

0000594a <led_led_on>:
    594a:	28 2f       	mov	r18, r24
    594c:	30 e0       	ldi	r19, 0x00	; 0
    594e:	f9 01       	movw	r30, r18
    5950:	ee 0f       	add	r30, r30
    5952:	ff 1f       	adc	r31, r31
    5954:	e2 0f       	add	r30, r18
    5956:	f3 1f       	adc	r31, r19
    5958:	ee 0f       	add	r30, r30
    595a:	ff 1f       	adc	r31, r31
    595c:	e1 5c       	subi	r30, 0xC1	; 193
    595e:	f6 4f       	sbci	r31, 0xF6	; 246
    5960:	93 e0       	ldi	r25, 0x03	; 3
    5962:	94 83       	std	Z+4, r25	; 0x04
    5964:	ad ce       	rjmp	.-678    	; 0x56c0 <_turn_on>
    5966:	08 95       	ret

00005968 <led_led_off>:
    5968:	28 2f       	mov	r18, r24
    596a:	30 e0       	ldi	r19, 0x00	; 0
    596c:	f9 01       	movw	r30, r18
    596e:	ee 0f       	add	r30, r30
    5970:	ff 1f       	adc	r31, r31
    5972:	e2 0f       	add	r30, r18
    5974:	f3 1f       	adc	r31, r19
    5976:	ee 0f       	add	r30, r30
    5978:	ff 1f       	adc	r31, r31
    597a:	e1 5c       	subi	r30, 0xC1	; 193
    597c:	f6 4f       	sbci	r31, 0xF6	; 246
    597e:	94 e0       	ldi	r25, 0x04	; 4
    5980:	94 83       	std	Z+4, r25	; 0x04
    5982:	70 ce       	rjmp	.-800    	; 0x5664 <_turn_off>
    5984:	08 95       	ret

00005986 <led_long_puls>:
    5986:	90 e0       	ldi	r25, 0x00	; 0
    5988:	fc 01       	movw	r30, r24
    598a:	ee 0f       	add	r30, r30
    598c:	ff 1f       	adc	r31, r31
    598e:	df 01       	movw	r26, r30
    5990:	a8 0f       	add	r26, r24
    5992:	b9 1f       	adc	r27, r25
    5994:	aa 0f       	add	r26, r26
    5996:	bb 1f       	adc	r27, r27
    5998:	a1 5c       	subi	r26, 0xC1	; 193
    599a:	b6 4f       	sbci	r27, 0xF6	; 246
    599c:	24 e0       	ldi	r18, 0x04	; 4
    599e:	15 96       	adiw	r26, 0x05	; 5
    59a0:	2c 93       	st	X, r18
    59a2:	15 97       	sbiw	r26, 0x05	; 5
    59a4:	fd 01       	movw	r30, r26
    59a6:	14 82       	std	Z+4, r1	; 0x04
    59a8:	08 95       	ret

000059aa <led_short_puls>:
    59aa:	90 e0       	ldi	r25, 0x00	; 0
    59ac:	fc 01       	movw	r30, r24
    59ae:	ee 0f       	add	r30, r30
    59b0:	ff 1f       	adc	r31, r31
    59b2:	df 01       	movw	r26, r30
    59b4:	a8 0f       	add	r26, r24
    59b6:	b9 1f       	adc	r27, r25
    59b8:	aa 0f       	add	r26, r26
    59ba:	bb 1f       	adc	r27, r27
    59bc:	a1 5c       	subi	r26, 0xC1	; 193
    59be:	b6 4f       	sbci	r27, 0xF6	; 246
    59c0:	21 e0       	ldi	r18, 0x01	; 1
    59c2:	15 96       	adiw	r26, 0x05	; 5
    59c4:	2c 93       	st	X, r18
    59c6:	15 97       	sbiw	r26, 0x05	; 5
    59c8:	fd 01       	movw	r30, r26
    59ca:	14 82       	std	Z+4, r1	; 0x04
    59cc:	08 95       	ret

000059ce <_serial_call_back>:
    59ce:	0f 93       	push	r16
    59d0:	1f 93       	push	r17
    59d2:	cf 93       	push	r28
    59d4:	df 93       	push	r29
    59d6:	1f 92       	push	r1
    59d8:	1f 92       	push	r1
    59da:	cd b7       	in	r28, 0x3d	; 61
    59dc:	de b7       	in	r29, 0x3e	; 62
    59de:	8c 01       	movw	r16, r24
    59e0:	19 82       	std	Y+1, r1	; 0x01
    59e2:	2d c0       	rjmp	.+90     	; 0x5a3e <_serial_call_back+0x70>
    59e4:	e0 91 bb 09 	lds	r30, 0x09BB	; 0x8009bb <rec_buf_inp.2926>
    59e8:	ec 32       	cpi	r30, 0x2C	; 44
    59ea:	50 f4       	brcc	.+20     	; 0x5a00 <_serial_call_back+0x32>
    59ec:	81 e0       	ldi	r24, 0x01	; 1
    59ee:	8e 0f       	add	r24, r30
    59f0:	80 93 bb 09 	sts	0x09BB, r24	; 0x8009bb <rec_buf_inp.2926>
    59f4:	f0 e0       	ldi	r31, 0x00	; 0
    59f6:	e5 51       	subi	r30, 0x15	; 21
    59f8:	f6 4f       	sbci	r31, 0xF6	; 246
    59fa:	8a 81       	ldd	r24, Y+2	; 0x02
    59fc:	80 83       	st	Z, r24
    59fe:	02 c0       	rjmp	.+4      	; 0x5a04 <_serial_call_back+0x36>
    5a00:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <rec_buf_inp.2926>
    5a04:	8a 81       	ldd	r24, Y+2	; 0x02
    5a06:	8a 30       	cpi	r24, 0x0A	; 10
    5a08:	d1 f4       	brne	.+52     	; 0x5a3e <_serial_call_back+0x70>
    5a0a:	40 91 bb 09 	lds	r20, 0x09BB	; 0x8009bb <rec_buf_inp.2926>
    5a0e:	50 e0       	ldi	r21, 0x00	; 0
    5a10:	fa 01       	movw	r30, r20
    5a12:	e7 51       	subi	r30, 0x17	; 23
    5a14:	f6 4f       	sbci	r31, 0xF6	; 246
    5a16:	10 82       	st	Z, r1
    5a18:	41 50       	subi	r20, 0x01	; 1
    5a1a:	51 09       	sbc	r21, r1
    5a1c:	9e 01       	movw	r18, r28
    5a1e:	2f 5f       	subi	r18, 0xFF	; 255
    5a20:	3f 4f       	sbci	r19, 0xFF	; 255
    5a22:	6b ee       	ldi	r22, 0xEB	; 235
    5a24:	79 e0       	ldi	r23, 0x09	; 9
    5a26:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <_reply_buffer_handle>
    5a2a:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <_reply_buffer_handle+0x1>
    5a2e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <xStreamBufferSendFromISR>
    5a32:	89 81       	ldd	r24, Y+1	; 0x01
    5a34:	81 11       	cpse	r24, r1
    5a36:	0e 94 2b 05 	call	0xa56	; 0xa56 <vPortYield>
    5a3a:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <rec_buf_inp.2926>
    5a3e:	be 01       	movw	r22, r28
    5a40:	6e 5f       	subi	r22, 0xFE	; 254
    5a42:	7f 4f       	sbci	r23, 0xFF	; 255
    5a44:	c8 01       	movw	r24, r16
    5a46:	bb da       	rcall	.-2698   	; 0x4fbe <serial_get_byte>
    5a48:	88 23       	and	r24, r24
    5a4a:	61 f2       	breq	.-104    	; 0x59e4 <_serial_call_back+0x16>
    5a4c:	0f 90       	pop	r0
    5a4e:	0f 90       	pop	r0
    5a50:	df 91       	pop	r29
    5a52:	cf 91       	pop	r28
    5a54:	1f 91       	pop	r17
    5a56:	0f 91       	pop	r16
    5a58:	08 95       	ret

00005a5a <_upload_message>:
    5a5a:	0f 93       	push	r16
    5a5c:	1f 93       	push	r17
    5a5e:	cf 93       	push	r28
    5a60:	df 93       	push	r29
    5a62:	8c 01       	movw	r16, r24
    5a64:	eb 01       	movw	r28, r22
    5a66:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <_reply_buffer_handle>
    5a6a:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <_reply_buffer_handle+0x1>
    5a6e:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <xStreamBufferReset>
    5a72:	b8 01       	movw	r22, r16
    5a74:	87 e5       	ldi	r24, 0x57	; 87
    5a76:	99 e0       	ldi	r25, 0x09	; 9
    5a78:	0e 94 07 37 	call	0x6e0e	; 0x6e0e <strcpy>
    5a7c:	20 97       	sbiw	r28, 0x00	; 0
    5a7e:	79 f0       	breq	.+30     	; 0x5a9e <_upload_message+0x44>
    5a80:	e7 e5       	ldi	r30, 0x57	; 87
    5a82:	f9 e0       	ldi	r31, 0x09	; 9
    5a84:	01 90       	ld	r0, Z+
    5a86:	00 20       	and	r0, r0
    5a88:	e9 f7       	brne	.-6      	; 0x5a84 <_upload_message+0x2a>
    5a8a:	31 97       	sbiw	r30, 0x01	; 1
    5a8c:	80 e2       	ldi	r24, 0x20	; 32
    5a8e:	90 e0       	ldi	r25, 0x00	; 0
    5a90:	91 83       	std	Z+1, r25	; 0x01
    5a92:	80 83       	st	Z, r24
    5a94:	be 01       	movw	r22, r28
    5a96:	87 e5       	ldi	r24, 0x57	; 87
    5a98:	99 e0       	ldi	r25, 0x09	; 9
    5a9a:	0e 94 fc 36 	call	0x6df8	; 0x6df8 <strcat>
    5a9e:	e7 e5       	ldi	r30, 0x57	; 87
    5aa0:	f9 e0       	ldi	r31, 0x09	; 9
    5aa2:	df 01       	movw	r26, r30
    5aa4:	0d 90       	ld	r0, X+
    5aa6:	00 20       	and	r0, r0
    5aa8:	e9 f7       	brne	.-6      	; 0x5aa4 <_upload_message+0x4a>
    5aaa:	11 97       	sbiw	r26, 0x01	; 1
    5aac:	8d e0       	ldi	r24, 0x0D	; 13
    5aae:	9a e0       	ldi	r25, 0x0A	; 10
    5ab0:	11 96       	adiw	r26, 0x01	; 1
    5ab2:	9c 93       	st	X, r25
    5ab4:	8e 93       	st	-X, r24
    5ab6:	12 96       	adiw	r26, 0x02	; 2
    5ab8:	1c 92       	st	X, r1
    5aba:	01 90       	ld	r0, Z+
    5abc:	00 20       	and	r0, r0
    5abe:	e9 f7       	brne	.-6      	; 0x5aba <_upload_message+0x60>
    5ac0:	31 97       	sbiw	r30, 0x01	; 1
    5ac2:	e7 55       	subi	r30, 0x57	; 87
    5ac4:	f9 40       	sbci	r31, 0x09	; 9
    5ac6:	ae 2f       	mov	r26, r30
    5ac8:	87 e5       	ldi	r24, 0x57	; 87
    5aca:	99 e0       	ldi	r25, 0x09	; 9
    5acc:	ac 01       	movw	r20, r24
    5ace:	6a 2f       	mov	r22, r26
    5ad0:	80 91 be 09 	lds	r24, 0x09BE	; 0x8009be <_rn2483_serial>
    5ad4:	90 91 bf 09 	lds	r25, 0x09BF	; 0x8009bf <_rn2483_serial+0x1>
    5ad8:	22 da       	rcall	.-3004   	; 0x4f1e <serial_send_bytes>
    5ada:	81 11       	cpse	r24, r1
    5adc:	0f c0       	rjmp	.+30     	; 0x5afc <_upload_message+0xa2>
    5ade:	28 e2       	ldi	r18, 0x28	; 40
    5ae0:	35 e0       	ldi	r19, 0x05	; 5
    5ae2:	4d e2       	ldi	r20, 0x2D	; 45
    5ae4:	50 e0       	ldi	r21, 0x00	; 0
    5ae6:	65 e4       	ldi	r22, 0x45	; 69
    5ae8:	7a e0       	ldi	r23, 0x0A	; 10
    5aea:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <_reply_buffer_handle>
    5aee:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <_reply_buffer_handle+0x1>
    5af2:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <xStreamBufferReceive>
    5af6:	85 e4       	ldi	r24, 0x45	; 69
    5af8:	9a e0       	ldi	r25, 0x0A	; 10
    5afa:	02 c0       	rjmp	.+4      	; 0x5b00 <_upload_message+0xa6>
    5afc:	80 e0       	ldi	r24, 0x00	; 0
    5afe:	90 e0       	ldi	r25, 0x00	; 0
    5b00:	df 91       	pop	r29
    5b02:	cf 91       	pop	r28
    5b04:	1f 91       	pop	r17
    5b06:	0f 91       	pop	r16
    5b08:	08 95       	ret

00005b0a <_reply2return_code>:
    5b0a:	af 92       	push	r10
    5b0c:	bf 92       	push	r11
    5b0e:	cf 92       	push	r12
    5b10:	df 92       	push	r13
    5b12:	ef 92       	push	r14
    5b14:	ff 92       	push	r15
    5b16:	0f 93       	push	r16
    5b18:	1f 93       	push	r17
    5b1a:	cf 93       	push	r28
    5b1c:	df 93       	push	r29
    5b1e:	6c 01       	movw	r12, r24
    5b20:	fc 01       	movw	r30, r24
    5b22:	01 90       	ld	r0, Z+
    5b24:	00 20       	and	r0, r0
    5b26:	e9 f7       	brne	.-6      	; 0x5b22 <_reply2return_code+0x18>
    5b28:	31 97       	sbiw	r30, 0x01	; 1
    5b2a:	7f 01       	movw	r14, r30
    5b2c:	e8 1a       	sub	r14, r24
    5b2e:	f9 0a       	sbc	r15, r25
    5b30:	04 e0       	ldi	r16, 0x04	; 4
    5b32:	18 e0       	ldi	r17, 0x08	; 8
    5b34:	c0 e0       	ldi	r28, 0x00	; 0
    5b36:	d0 e0       	ldi	r29, 0x00	; 0
    5b38:	f8 01       	movw	r30, r16
    5b3a:	60 81       	ld	r22, Z
    5b3c:	71 81       	ldd	r23, Z+1	; 0x01
    5b3e:	a7 01       	movw	r20, r14
    5b40:	c6 01       	movw	r24, r12
    5b42:	0e 94 0e 37 	call	0x6e1c	; 0x6e1c <strncasecmp>
    5b46:	89 2b       	or	r24, r25
    5b48:	49 f4       	brne	.+18     	; 0x5b5c <_reply2return_code+0x52>
    5b4a:	fe 01       	movw	r30, r28
    5b4c:	ee 0f       	add	r30, r30
    5b4e:	ff 1f       	adc	r31, r31
    5b50:	ec 0f       	add	r30, r28
    5b52:	fd 1f       	adc	r31, r29
    5b54:	ed 5f       	subi	r30, 0xFD	; 253
    5b56:	f7 4f       	sbci	r31, 0xF7	; 247
    5b58:	80 81       	ld	r24, Z
    5b5a:	07 c0       	rjmp	.+14     	; 0x5b6a <_reply2return_code+0x60>
    5b5c:	21 96       	adiw	r28, 0x01	; 1
    5b5e:	0d 5f       	subi	r16, 0xFD	; 253
    5b60:	1f 4f       	sbci	r17, 0xFF	; 255
    5b62:	c1 31       	cpi	r28, 0x11	; 17
    5b64:	d1 05       	cpc	r29, r1
    5b66:	41 f7       	brne	.-48     	; 0x5b38 <_reply2return_code+0x2e>
    5b68:	80 e1       	ldi	r24, 0x10	; 16
    5b6a:	df 91       	pop	r29
    5b6c:	cf 91       	pop	r28
    5b6e:	1f 91       	pop	r17
    5b70:	0f 91       	pop	r16
    5b72:	ff 90       	pop	r15
    5b74:	ef 90       	pop	r14
    5b76:	df 90       	pop	r13
    5b78:	cf 90       	pop	r12
    5b7a:	bf 90       	pop	r11
    5b7c:	af 90       	pop	r10
    5b7e:	08 95       	ret

00005b80 <_upload_message_rc>:
    5b80:	6c df       	rcall	.-296    	; 0x5a5a <_upload_message>
    5b82:	c3 cf       	rjmp	.-122    	; 0x5b0a <_reply2return_code>
    5b84:	08 95       	ret

00005b86 <lora_driver_flush_buffers>:
    5b86:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <_reply_buffer_handle>
    5b8a:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <_reply_buffer_handle+0x1>
    5b8e:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <xStreamBufferReset>
    5b92:	08 95       	ret

00005b94 <lora_driver_create>:
    5b94:	8f 92       	push	r8
    5b96:	9f 92       	push	r9
    5b98:	af 92       	push	r10
    5b9a:	cf 92       	push	r12
    5b9c:	ef 92       	push	r14
    5b9e:	0f 93       	push	r16
    5ba0:	cf 93       	push	r28
    5ba2:	c8 2f       	mov	r28, r24
    5ba4:	41 e0       	ldi	r20, 0x01	; 1
    5ba6:	60 e0       	ldi	r22, 0x00	; 0
    5ba8:	70 e0       	ldi	r23, 0x00	; 0
    5baa:	88 ec       	ldi	r24, 0xC8	; 200
    5bac:	90 e0       	ldi	r25, 0x00	; 0
    5bae:	0e 94 32 0c 	call	0x1864	; 0x1864 <xStreamBufferGenericCreate>
    5bb2:	90 93 bd 09 	sts	0x09BD, r25	; 0x8009bd <_reply_buffer_handle+0x1>
    5bb6:	80 93 bc 09 	sts	0x09BC, r24	; 0x8009bc <_reply_buffer_handle>
    5bba:	0f 2e       	mov	r0, r31
    5bbc:	f7 ee       	ldi	r31, 0xE7	; 231
    5bbe:	8f 2e       	mov	r8, r31
    5bc0:	fc e2       	ldi	r31, 0x2C	; 44
    5bc2:	9f 2e       	mov	r9, r31
    5bc4:	f0 2d       	mov	r31, r0
    5bc6:	68 94       	set
    5bc8:	aa 24       	eor	r10, r10
    5bca:	a6 f8       	bld	r10, 6
    5bcc:	68 94       	set
    5bce:	cc 24       	eor	r12, r12
    5bd0:	c6 f8       	bld	r12, 6
    5bd2:	e1 2c       	mov	r14, r1
    5bd4:	00 e0       	ldi	r16, 0x00	; 0
    5bd6:	23 e0       	ldi	r18, 0x03	; 3
    5bd8:	40 e0       	ldi	r20, 0x00	; 0
    5bda:	51 ee       	ldi	r21, 0xE1	; 225
    5bdc:	60 e0       	ldi	r22, 0x00	; 0
    5bde:	70 e0       	ldi	r23, 0x00	; 0
    5be0:	8c 2f       	mov	r24, r28
    5be2:	d8 d8       	rcall	.-3664   	; 0x4d94 <serial_new_instance>
    5be4:	90 93 bf 09 	sts	0x09BF, r25	; 0x8009bf <_rn2483_serial+0x1>
    5be8:	80 93 be 09 	sts	0x09BE, r24	; 0x8009be <_rn2483_serial>
    5bec:	e0 91 a4 0a 	lds	r30, 0x0AA4	; 0x800aa4 <register_access+0x8>
    5bf0:	f0 91 a5 0a 	lds	r31, 0x0AA5	; 0x800aa5 <register_access+0x9>
    5bf4:	64 e0       	ldi	r22, 0x04	; 4
    5bf6:	87 e0       	ldi	r24, 0x07	; 7
    5bf8:	91 e0       	ldi	r25, 0x01	; 1
    5bfa:	19 95       	eicall
    5bfc:	cf 91       	pop	r28
    5bfe:	0f 91       	pop	r16
    5c00:	ef 90       	pop	r14
    5c02:	cf 90       	pop	r12
    5c04:	af 90       	pop	r10
    5c06:	9f 90       	pop	r9
    5c08:	8f 90       	pop	r8
    5c0a:	08 95       	ret

00005c0c <lora_driver_reset_rn2483>:
    5c0c:	88 23       	and	r24, r24
    5c0e:	49 f0       	breq	.+18     	; 0x5c22 <lora_driver_reset_rn2483+0x16>
    5c10:	e0 91 ae 0a 	lds	r30, 0x0AAE	; 0x800aae <register_access+0x12>
    5c14:	f0 91 af 0a 	lds	r31, 0x0AAF	; 0x800aaf <register_access+0x13>
    5c18:	64 e0       	ldi	r22, 0x04	; 4
    5c1a:	88 e0       	ldi	r24, 0x08	; 8
    5c1c:	91 e0       	ldi	r25, 0x01	; 1
    5c1e:	19 95       	eicall
    5c20:	08 95       	ret
    5c22:	e0 91 a4 0a 	lds	r30, 0x0AA4	; 0x800aa4 <register_access+0x8>
    5c26:	f0 91 a5 0a 	lds	r31, 0x0AA5	; 0x800aa5 <register_access+0x9>
    5c2a:	64 e0       	ldi	r22, 0x04	; 4
    5c2c:	88 e0       	ldi	r24, 0x08	; 8
    5c2e:	91 e0       	ldi	r25, 0x01	; 1
    5c30:	19 95       	eicall
    5c32:	08 95       	ret

00005c34 <lora_driver_rn2483_factory_reset>:
    5c34:	60 e0       	ldi	r22, 0x00	; 0
    5c36:	70 e0       	ldi	r23, 0x00	; 0
    5c38:	8f e9       	ldi	r24, 0x9F	; 159
    5c3a:	95 e0       	ldi	r25, 0x05	; 5
    5c3c:	0e df       	rcall	.-484    	; 0x5a5a <_upload_message>
    5c3e:	e5 e4       	ldi	r30, 0x45	; 69
    5c40:	fa e0       	ldi	r31, 0x0A	; 10
    5c42:	01 90       	ld	r0, Z+
    5c44:	00 20       	and	r0, r0
    5c46:	e9 f7       	brne	.-6      	; 0x5c42 <lora_driver_rn2483_factory_reset+0xe>
    5c48:	31 97       	sbiw	r30, 0x01	; 1
    5c4a:	e5 54       	subi	r30, 0x45	; 69
    5c4c:	fa 40       	sbci	r31, 0x0A	; 10
    5c4e:	81 e0       	ldi	r24, 0x01	; 1
    5c50:	75 97       	sbiw	r30, 0x15	; 21
    5c52:	08 f0       	brcs	.+2      	; 0x5c56 <lora_driver_rn2483_factory_reset+0x22>
    5c54:	80 e0       	ldi	r24, 0x00	; 0
    5c56:	08 95       	ret

00005c58 <lora_driver_get_rn2483_hweui>:
    5c58:	cf 93       	push	r28
    5c5a:	df 93       	push	r29
    5c5c:	ec 01       	movw	r28, r24
    5c5e:	60 e0       	ldi	r22, 0x00	; 0
    5c60:	70 e0       	ldi	r23, 0x00	; 0
    5c62:	80 eb       	ldi	r24, 0xB0	; 176
    5c64:	95 e0       	ldi	r25, 0x05	; 5
    5c66:	f9 de       	rcall	.-526    	; 0x5a5a <_upload_message>
    5c68:	e5 e4       	ldi	r30, 0x45	; 69
    5c6a:	fa e0       	ldi	r31, 0x0A	; 10
    5c6c:	01 90       	ld	r0, Z+
    5c6e:	00 20       	and	r0, r0
    5c70:	e9 f7       	brne	.-6      	; 0x5c6c <lora_driver_get_rn2483_hweui+0x14>
    5c72:	e6 55       	subi	r30, 0x56	; 86
    5c74:	fa 40       	sbci	r31, 0x0A	; 10
    5c76:	39 f4       	brne	.+14     	; 0x5c86 <lora_driver_get_rn2483_hweui+0x2e>
    5c78:	65 e4       	ldi	r22, 0x45	; 69
    5c7a:	7a e0       	ldi	r23, 0x0A	; 10
    5c7c:	ce 01       	movw	r24, r28
    5c7e:	0e 94 07 37 	call	0x6e0e	; 0x6e0e <strcpy>
    5c82:	80 e0       	ldi	r24, 0x00	; 0
    5c84:	02 c0       	rjmp	.+4      	; 0x5c8a <lora_driver_get_rn2483_hweui+0x32>
    5c86:	18 82       	st	Y, r1
    5c88:	81 e0       	ldi	r24, 0x01	; 1
    5c8a:	df 91       	pop	r29
    5c8c:	cf 91       	pop	r28
    5c8e:	08 95       	ret

00005c90 <lora_driver_set_device_identifier>:
    5c90:	fc 01       	movw	r30, r24
    5c92:	01 90       	ld	r0, Z+
    5c94:	00 20       	and	r0, r0
    5c96:	e9 f7       	brne	.-6      	; 0x5c92 <lora_driver_set_device_identifier+0x2>
    5c98:	9f 01       	movw	r18, r30
    5c9a:	21 51       	subi	r18, 0x11	; 17
    5c9c:	31 09       	sbc	r19, r1
    5c9e:	28 17       	cp	r18, r24
    5ca0:	39 07       	cpc	r19, r25
    5ca2:	29 f4       	brne	.+10     	; 0x5cae <lora_driver_set_device_identifier+0x1e>
    5ca4:	bc 01       	movw	r22, r24
    5ca6:	8e ed       	ldi	r24, 0xDE	; 222
    5ca8:	95 e0       	ldi	r25, 0x05	; 5
    5caa:	6a cf       	rjmp	.-300    	; 0x5b80 <_upload_message_rc>
    5cac:	08 95       	ret
    5cae:	89 e0       	ldi	r24, 0x09	; 9
    5cb0:	08 95       	ret

00005cb2 <lora_driver_set_application_identifier>:
    5cb2:	fc 01       	movw	r30, r24
    5cb4:	01 90       	ld	r0, Z+
    5cb6:	00 20       	and	r0, r0
    5cb8:	e9 f7       	brne	.-6      	; 0x5cb4 <lora_driver_set_application_identifier+0x2>
    5cba:	9f 01       	movw	r18, r30
    5cbc:	21 51       	subi	r18, 0x11	; 17
    5cbe:	31 09       	sbc	r19, r1
    5cc0:	28 17       	cp	r18, r24
    5cc2:	39 07       	cpc	r19, r25
    5cc4:	29 f4       	brne	.+10     	; 0x5cd0 <lora_driver_set_application_identifier+0x1e>
    5cc6:	bc 01       	movw	r22, r24
    5cc8:	8d ee       	ldi	r24, 0xED	; 237
    5cca:	95 e0       	ldi	r25, 0x05	; 5
    5ccc:	59 cf       	rjmp	.-334    	; 0x5b80 <_upload_message_rc>
    5cce:	08 95       	ret
    5cd0:	89 e0       	ldi	r24, 0x09	; 9
    5cd2:	08 95       	ret

00005cd4 <lora_driver_set_application_key>:
    5cd4:	fc 01       	movw	r30, r24
    5cd6:	01 90       	ld	r0, Z+
    5cd8:	00 20       	and	r0, r0
    5cda:	e9 f7       	brne	.-6      	; 0x5cd6 <lora_driver_set_application_key+0x2>
    5cdc:	9f 01       	movw	r18, r30
    5cde:	21 52       	subi	r18, 0x21	; 33
    5ce0:	31 09       	sbc	r19, r1
    5ce2:	28 17       	cp	r18, r24
    5ce4:	39 07       	cpc	r19, r25
    5ce6:	29 f4       	brne	.+10     	; 0x5cf2 <lora_driver_set_application_key+0x1e>
    5ce8:	bc 01       	movw	r22, r24
    5cea:	8c ef       	ldi	r24, 0xFC	; 252
    5cec:	95 e0       	ldi	r25, 0x05	; 5
    5cee:	48 cf       	rjmp	.-368    	; 0x5b80 <_upload_message_rc>
    5cf0:	08 95       	ret
    5cf2:	89 e0       	ldi	r24, 0x09	; 9
    5cf4:	08 95       	ret

00005cf6 <lora_driver_save_mac>:
    5cf6:	60 e0       	ldi	r22, 0x00	; 0
    5cf8:	70 e0       	ldi	r23, 0x00	; 0
    5cfa:	8b e3       	ldi	r24, 0x3B	; 59
    5cfc:	96 e0       	ldi	r25, 0x06	; 6
    5cfe:	40 cf       	rjmp	.-384    	; 0x5b80 <_upload_message_rc>
    5d00:	08 95       	ret

00005d02 <lora_driver_join>:
    5d02:	e8 2f       	mov	r30, r24
    5d04:	f0 e0       	ldi	r31, 0x00	; 0
    5d06:	ee 0f       	add	r30, r30
    5d08:	ff 1f       	adc	r31, r31
    5d0a:	e1 50       	subi	r30, 0x01	; 1
    5d0c:	f8 4f       	sbci	r31, 0xF8	; 248
    5d0e:	60 81       	ld	r22, Z
    5d10:	71 81       	ldd	r23, Z+1	; 0x01
    5d12:	84 e4       	ldi	r24, 0x44	; 68
    5d14:	96 e0       	ldi	r25, 0x06	; 6
    5d16:	34 df       	rcall	.-408    	; 0x5b80 <_upload_message_rc>
    5d18:	81 11       	cpse	r24, r1
    5d1a:	12 c0       	rjmp	.+36     	; 0x5d40 <lora_driver_join+0x3e>
    5d1c:	28 e2       	ldi	r18, 0x28	; 40
    5d1e:	35 e0       	ldi	r19, 0x05	; 5
    5d20:	4d e2       	ldi	r20, 0x2D	; 45
    5d22:	50 e0       	ldi	r21, 0x00	; 0
    5d24:	65 e4       	ldi	r22, 0x45	; 69
    5d26:	7a e0       	ldi	r23, 0x0A	; 10
    5d28:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <_reply_buffer_handle>
    5d2c:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <_reply_buffer_handle+0x1>
    5d30:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <xStreamBufferReceive>
    5d34:	88 23       	and	r24, r24
    5d36:	21 f0       	breq	.+8      	; 0x5d40 <lora_driver_join+0x3e>
    5d38:	85 e4       	ldi	r24, 0x45	; 69
    5d3a:	9a e0       	ldi	r25, 0x0A	; 10
    5d3c:	e6 ce       	rjmp	.-564    	; 0x5b0a <_reply2return_code>
    5d3e:	08 95       	ret
    5d40:	85 e4       	ldi	r24, 0x45	; 69
    5d42:	9a e0       	ldi	r25, 0x0A	; 10
    5d44:	e2 ce       	rjmp	.-572    	; 0x5b0a <_reply2return_code>
    5d46:	08 95       	ret

00005d48 <lora_driver_sent_upload_message>:
    5d48:	cf 93       	push	r28
    5d4a:	df 93       	push	r29
    5d4c:	1f 92       	push	r1
    5d4e:	cd b7       	in	r28, 0x3d	; 61
    5d50:	de b7       	in	r29, 0x3e	; 62
    5d52:	db 01       	movw	r26, r22
    5d54:	11 96       	adiw	r26, 0x01	; 1
    5d56:	9c 91       	ld	r25, X
    5d58:	11 97       	sbiw	r26, 0x01	; 1
    5d5a:	95 31       	cpi	r25, 0x15	; 21
    5d5c:	08 f0       	brcs	.+2      	; 0x5d60 <lora_driver_sent_upload_message+0x18>
    5d5e:	87 c0       	rjmp	.+270    	; 0x5e6e <lora_driver_sent_upload_message+0x126>
    5d60:	99 23       	and	r25, r25
    5d62:	81 f1       	breq	.+96     	; 0x5dc4 <lora_driver_sent_upload_message+0x7c>
    5d64:	60 e0       	ldi	r22, 0x00	; 0
    5d66:	70 e0       	ldi	r23, 0x00	; 0
    5d68:	27 2f       	mov	r18, r23
    5d6a:	30 e0       	ldi	r19, 0x00	; 0
    5d6c:	46 2f       	mov	r20, r22
    5d6e:	50 e0       	ldi	r21, 0x00	; 0
    5d70:	fd 01       	movw	r30, r26
    5d72:	e4 0f       	add	r30, r20
    5d74:	f5 1f       	adc	r31, r21
    5d76:	92 81       	ldd	r25, Z+2	; 0x02
    5d78:	92 95       	swap	r25
    5d7a:	9f 70       	andi	r25, 0x0F	; 15
    5d7c:	9a 30       	cpi	r25, 0x0A	; 10
    5d7e:	10 f0       	brcs	.+4      	; 0x5d84 <lora_driver_sent_upload_message+0x3c>
    5d80:	99 5c       	subi	r25, 0xC9	; 201
    5d82:	01 c0       	rjmp	.+2      	; 0x5d86 <lora_driver_sent_upload_message+0x3e>
    5d84:	90 5d       	subi	r25, 0xD0	; 208
    5d86:	f9 01       	movw	r30, r18
    5d88:	ea 52       	subi	r30, 0x2A	; 42
    5d8a:	f6 4f       	sbci	r31, 0xF6	; 246
    5d8c:	90 83       	st	Z, r25
    5d8e:	2f 5f       	subi	r18, 0xFF	; 255
    5d90:	3f 4f       	sbci	r19, 0xFF	; 255
    5d92:	fd 01       	movw	r30, r26
    5d94:	e4 0f       	add	r30, r20
    5d96:	f5 1f       	adc	r31, r21
    5d98:	92 81       	ldd	r25, Z+2	; 0x02
    5d9a:	9f 70       	andi	r25, 0x0F	; 15
    5d9c:	49 2f       	mov	r20, r25
    5d9e:	50 e0       	ldi	r21, 0x00	; 0
    5da0:	4a 30       	cpi	r20, 0x0A	; 10
    5da2:	51 05       	cpc	r21, r1
    5da4:	14 f0       	brlt	.+4      	; 0x5daa <lora_driver_sent_upload_message+0x62>
    5da6:	99 5c       	subi	r25, 0xC9	; 201
    5da8:	01 c0       	rjmp	.+2      	; 0x5dac <lora_driver_sent_upload_message+0x64>
    5daa:	90 5d       	subi	r25, 0xD0	; 208
    5dac:	f9 01       	movw	r30, r18
    5dae:	ea 52       	subi	r30, 0x2A	; 42
    5db0:	f6 4f       	sbci	r31, 0xF6	; 246
    5db2:	90 83       	st	Z, r25
    5db4:	7e 5f       	subi	r23, 0xFE	; 254
    5db6:	6f 5f       	subi	r22, 0xFF	; 255
    5db8:	11 96       	adiw	r26, 0x01	; 1
    5dba:	9c 91       	ld	r25, X
    5dbc:	11 97       	sbiw	r26, 0x01	; 1
    5dbe:	69 17       	cp	r22, r25
    5dc0:	98 f2       	brcs	.-90     	; 0x5d68 <lora_driver_sent_upload_message+0x20>
    5dc2:	01 c0       	rjmp	.+2      	; 0x5dc6 <lora_driver_sent_upload_message+0x7e>
    5dc4:	70 e0       	ldi	r23, 0x00	; 0
    5dc6:	e7 2f       	mov	r30, r23
    5dc8:	f0 e0       	ldi	r31, 0x00	; 0
    5dca:	ea 52       	subi	r30, 0x2A	; 42
    5dcc:	f6 4f       	sbci	r31, 0xF6	; 246
    5dce:	10 82       	st	Z, r1
    5dd0:	4c 91       	ld	r20, X
    5dd2:	81 11       	cpse	r24, r1
    5dd4:	03 c0       	rjmp	.+6      	; 0x5ddc <lora_driver_sent_upload_message+0x94>
    5dd6:	8d e4       	ldi	r24, 0x4D	; 77
    5dd8:	96 e0       	ldi	r25, 0x06	; 6
    5dda:	02 c0       	rjmp	.+4      	; 0x5de0 <lora_driver_sent_upload_message+0x98>
    5ddc:	8f e4       	ldi	r24, 0x4F	; 79
    5dde:	96 e0       	ldi	r25, 0x06	; 6
    5de0:	26 ed       	ldi	r18, 0xD6	; 214
    5de2:	39 e0       	ldi	r19, 0x09	; 9
    5de4:	3f 93       	push	r19
    5de6:	2f 93       	push	r18
    5de8:	1f 92       	push	r1
    5dea:	4f 93       	push	r20
    5dec:	9f 93       	push	r25
    5dee:	8f 93       	push	r24
    5df0:	83 e5       	ldi	r24, 0x53	; 83
    5df2:	96 e0       	ldi	r25, 0x06	; 6
    5df4:	9f 93       	push	r25
    5df6:	8f 93       	push	r24
    5df8:	88 e1       	ldi	r24, 0x18	; 24
    5dfa:	9a e0       	ldi	r25, 0x0A	; 10
    5dfc:	9f 93       	push	r25
    5dfe:	8f 93       	push	r24
    5e00:	0e 94 69 37 	call	0x6ed2	; 0x6ed2 <sprintf>
    5e04:	60 e0       	ldi	r22, 0x00	; 0
    5e06:	70 e0       	ldi	r23, 0x00	; 0
    5e08:	88 e1       	ldi	r24, 0x18	; 24
    5e0a:	9a e0       	ldi	r25, 0x0A	; 10
    5e0c:	b9 de       	rcall	.-654    	; 0x5b80 <_upload_message_rc>
    5e0e:	0f b6       	in	r0, 0x3f	; 63
    5e10:	f8 94       	cli
    5e12:	de bf       	out	0x3e, r29	; 62
    5e14:	0f be       	out	0x3f, r0	; 63
    5e16:	cd bf       	out	0x3d, r28	; 61
    5e18:	8e 30       	cpi	r24, 0x0E	; 14
    5e1a:	51 f5       	brne	.+84     	; 0x5e70 <lora_driver_sent_upload_message+0x128>
    5e1c:	87 e0       	ldi	r24, 0x07	; 7
    5e1e:	89 83       	std	Y+1, r24	; 0x01
    5e20:	be 01       	movw	r22, r28
    5e22:	6f 5f       	subi	r22, 0xFF	; 255
    5e24:	7f 4f       	sbci	r23, 0xFF	; 255
    5e26:	85 e4       	ldi	r24, 0x45	; 69
    5e28:	9a e0       	ldi	r25, 0x0A	; 10
    5e2a:	38 d1       	rcall	.+624    	; 0x609c <decode_port_no>
    5e2c:	80 93 c0 09 	sts	0x09C0, r24	; 0x8009c0 <_downlink_payload>
    5e30:	e9 81       	ldd	r30, Y+1	; 0x01
    5e32:	f0 e0       	ldi	r31, 0x00	; 0
    5e34:	eb 5b       	subi	r30, 0xBB	; 187
    5e36:	f5 4f       	sbci	r31, 0xF5	; 245
    5e38:	df 01       	movw	r26, r30
    5e3a:	0d 90       	ld	r0, X+
    5e3c:	00 20       	and	r0, r0
    5e3e:	e9 f7       	brne	.-6      	; 0x5e3a <lora_driver_sent_upload_message+0xf2>
    5e40:	11 97       	sbiw	r26, 0x01	; 1
    5e42:	ae 1b       	sub	r26, r30
    5e44:	bf 0b       	sbc	r27, r31
    5e46:	aa 23       	and	r26, r26
    5e48:	81 f0       	breq	.+32     	; 0x5e6a <lora_driver_sent_upload_message+0x122>
    5e4a:	bb 27       	eor	r27, r27
    5e4c:	11 97       	sbiw	r26, 0x01	; 1
    5e4e:	cd 01       	movw	r24, r26
    5e50:	0a f4       	brpl	.+2      	; 0x5e54 <lora_driver_sent_upload_message+0x10c>
    5e52:	01 96       	adiw	r24, 0x01	; 1
    5e54:	95 95       	asr	r25
    5e56:	87 95       	ror	r24
    5e58:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <_downlink_payload+0x1>
    5e5c:	af 01       	movw	r20, r30
    5e5e:	4f 5f       	subi	r20, 0xFF	; 255
    5e60:	5f 4f       	sbci	r21, 0xFF	; 255
    5e62:	64 e1       	ldi	r22, 0x14	; 20
    5e64:	82 ec       	ldi	r24, 0xC2	; 194
    5e66:	99 e0       	ldi	r25, 0x09	; 9
    5e68:	45 d1       	rcall	.+650    	; 0x60f4 <decode_hexadecimal_string_bytes>
    5e6a:	8e e0       	ldi	r24, 0x0E	; 14
    5e6c:	01 c0       	rjmp	.+2      	; 0x5e70 <lora_driver_sent_upload_message+0x128>
    5e6e:	84 e1       	ldi	r24, 0x14	; 20
    5e70:	0f 90       	pop	r0
    5e72:	df 91       	pop	r29
    5e74:	cf 91       	pop	r28
    5e76:	08 95       	ret

00005e78 <lora_driver_set_adaptive_data_rate>:
    5e78:	81 30       	cpi	r24, 0x01	; 1
    5e7a:	19 f0       	breq	.+6      	; 0x5e82 <lora_driver_set_adaptive_data_rate+0xa>
    5e7c:	63 e6       	ldi	r22, 0x63	; 99
    5e7e:	76 e0       	ldi	r23, 0x06	; 6
    5e80:	02 c0       	rjmp	.+4      	; 0x5e86 <lora_driver_set_adaptive_data_rate+0xe>
    5e82:	63 e2       	ldi	r22, 0x23	; 35
    5e84:	77 e0       	ldi	r23, 0x07	; 7
    5e86:	87 e6       	ldi	r24, 0x67	; 103
    5e88:	96 e0       	ldi	r25, 0x06	; 6
    5e8a:	7a ce       	rjmp	.-780    	; 0x5b80 <_upload_message_rc>
    5e8c:	08 95       	ret

00005e8e <lora_driver_configure_to_eu868>:
    5e8e:	2f 92       	push	r2
    5e90:	3f 92       	push	r3
    5e92:	4f 92       	push	r4
    5e94:	5f 92       	push	r5
    5e96:	6f 92       	push	r6
    5e98:	7f 92       	push	r7
    5e9a:	8f 92       	push	r8
    5e9c:	9f 92       	push	r9
    5e9e:	af 92       	push	r10
    5ea0:	bf 92       	push	r11
    5ea2:	cf 92       	push	r12
    5ea4:	df 92       	push	r13
    5ea6:	ef 92       	push	r14
    5ea8:	ff 92       	push	r15
    5eaa:	0f 93       	push	r16
    5eac:	1f 93       	push	r17
    5eae:	cf 93       	push	r28
    5eb0:	df 93       	push	r29
    5eb2:	cd b7       	in	r28, 0x3d	; 61
    5eb4:	de b7       	in	r29, 0x3e	; 62
    5eb6:	a0 97       	sbiw	r28, 0x20	; 32
    5eb8:	0f b6       	in	r0, 0x3f	; 63
    5eba:	f8 94       	cli
    5ebc:	de bf       	out	0x3e, r29	; 62
    5ebe:	0f be       	out	0x3f, r0	; 63
    5ec0:	cd bf       	out	0x3d, r28	; 61
    5ec2:	6c ea       	ldi	r22, 0xAC	; 172
    5ec4:	76 e0       	ldi	r23, 0x06	; 6
    5ec6:	88 eb       	ldi	r24, 0xB8	; 184
    5ec8:	96 e0       	ldi	r25, 0x06	; 6
    5eca:	c7 dd       	rcall	.-1138   	; 0x5a5a <_upload_message>
    5ecc:	1e de       	rcall	.-964    	; 0x5b0a <_reply2return_code>
    5ece:	81 11       	cpse	r24, r1
    5ed0:	9f c0       	rjmp	.+318    	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    5ed2:	80 e2       	ldi	r24, 0x20	; 32
    5ed4:	e4 e1       	ldi	r30, 0x14	; 20
    5ed6:	f5 e0       	ldi	r31, 0x05	; 5
    5ed8:	de 01       	movw	r26, r28
    5eda:	11 96       	adiw	r26, 0x01	; 1
    5edc:	01 90       	ld	r0, Z+
    5ede:	0d 92       	st	X+, r0
    5ee0:	8a 95       	dec	r24
    5ee2:	e1 f7       	brne	.-8      	; 0x5edc <lora_driver_configure_to_eu868+0x4e>
    5ee4:	9e 01       	movw	r18, r28
    5ee6:	2f 5f       	subi	r18, 0xFF	; 255
    5ee8:	3f 4f       	sbci	r19, 0xFF	; 255
    5eea:	69 01       	movw	r12, r18
    5eec:	e1 2c       	mov	r14, r1
    5eee:	f1 2c       	mov	r15, r1
    5ef0:	0f 2e       	mov	r0, r31
    5ef2:	f4 ec       	ldi	r31, 0xC4	; 196
    5ef4:	af 2e       	mov	r10, r31
    5ef6:	f6 e0       	ldi	r31, 0x06	; 6
    5ef8:	bf 2e       	mov	r11, r31
    5efa:	f0 2d       	mov	r31, r0
    5efc:	08 e1       	ldi	r16, 0x18	; 24
    5efe:	1a e0       	ldi	r17, 0x0A	; 10
    5f00:	0f 2e       	mov	r0, r31
    5f02:	fd ed       	ldi	r31, 0xDD	; 221
    5f04:	4f 2e       	mov	r4, r31
    5f06:	f6 e0       	ldi	r31, 0x06	; 6
    5f08:	5f 2e       	mov	r5, r31
    5f0a:	f0 2d       	mov	r31, r0
    5f0c:	0f 2e       	mov	r0, r31
    5f0e:	f4 ef       	ldi	r31, 0xF4	; 244
    5f10:	8f 2e       	mov	r8, r31
    5f12:	f6 e0       	ldi	r31, 0x06	; 6
    5f14:	9f 2e       	mov	r9, r31
    5f16:	f0 2d       	mov	r31, r0
    5f18:	0f 2e       	mov	r0, r31
    5f1a:	fe e0       	ldi	r31, 0x0E	; 14
    5f1c:	6f 2e       	mov	r6, r31
    5f1e:	f7 e0       	ldi	r31, 0x07	; 7
    5f20:	7f 2e       	mov	r7, r31
    5f22:	f0 2d       	mov	r31, r0
    5f24:	3e 2c       	mov	r3, r14
    5f26:	2f 2c       	mov	r2, r15
    5f28:	ff 92       	push	r15
    5f2a:	ef 92       	push	r14
    5f2c:	bf 92       	push	r11
    5f2e:	af 92       	push	r10
    5f30:	1f 93       	push	r17
    5f32:	0f 93       	push	r16
    5f34:	ce d7       	rcall	.+3996   	; 0x6ed2 <sprintf>
    5f36:	60 e0       	ldi	r22, 0x00	; 0
    5f38:	70 e0       	ldi	r23, 0x00	; 0
    5f3a:	c8 01       	movw	r24, r16
    5f3c:	8e dd       	rcall	.-1252   	; 0x5a5a <_upload_message>
    5f3e:	e5 dd       	rcall	.-1078   	; 0x5b0a <_reply2return_code>
    5f40:	0f 90       	pop	r0
    5f42:	0f 90       	pop	r0
    5f44:	0f 90       	pop	r0
    5f46:	0f 90       	pop	r0
    5f48:	0f 90       	pop	r0
    5f4a:	0f 90       	pop	r0
    5f4c:	81 11       	cpse	r24, r1
    5f4e:	60 c0       	rjmp	.+192    	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    5f50:	32 e0       	ldi	r19, 0x02	; 2
    5f52:	3e 15       	cp	r19, r14
    5f54:	e0 f4       	brcc	.+56     	; 0x5f8e <lora_driver_configure_to_eu868+0x100>
    5f56:	f6 01       	movw	r30, r12
    5f58:	83 81       	ldd	r24, Z+3	; 0x03
    5f5a:	8f 93       	push	r24
    5f5c:	82 81       	ldd	r24, Z+2	; 0x02
    5f5e:	8f 93       	push	r24
    5f60:	81 81       	ldd	r24, Z+1	; 0x01
    5f62:	8f 93       	push	r24
    5f64:	80 81       	ld	r24, Z
    5f66:	8f 93       	push	r24
    5f68:	ff 92       	push	r15
    5f6a:	ef 92       	push	r14
    5f6c:	5f 92       	push	r5
    5f6e:	4f 92       	push	r4
    5f70:	1f 93       	push	r17
    5f72:	0f 93       	push	r16
    5f74:	ae d7       	rcall	.+3932   	; 0x6ed2 <sprintf>
    5f76:	60 e0       	ldi	r22, 0x00	; 0
    5f78:	70 e0       	ldi	r23, 0x00	; 0
    5f7a:	c8 01       	movw	r24, r16
    5f7c:	6e dd       	rcall	.-1316   	; 0x5a5a <_upload_message>
    5f7e:	c5 dd       	rcall	.-1142   	; 0x5b0a <_reply2return_code>
    5f80:	0f b6       	in	r0, 0x3f	; 63
    5f82:	f8 94       	cli
    5f84:	de bf       	out	0x3e, r29	; 62
    5f86:	0f be       	out	0x3f, r0	; 63
    5f88:	cd bf       	out	0x3d, r28	; 61
    5f8a:	81 11       	cpse	r24, r1
    5f8c:	41 c0       	rjmp	.+130    	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    5f8e:	2f 92       	push	r2
    5f90:	3f 92       	push	r3
    5f92:	9f 92       	push	r9
    5f94:	8f 92       	push	r8
    5f96:	1f 93       	push	r17
    5f98:	0f 93       	push	r16
    5f9a:	9b d7       	rcall	.+3894   	; 0x6ed2 <sprintf>
    5f9c:	60 e0       	ldi	r22, 0x00	; 0
    5f9e:	70 e0       	ldi	r23, 0x00	; 0
    5fa0:	c8 01       	movw	r24, r16
    5fa2:	5b dd       	rcall	.-1354   	; 0x5a5a <_upload_message>
    5fa4:	b2 dd       	rcall	.-1180   	; 0x5b0a <_reply2return_code>
    5fa6:	0f 90       	pop	r0
    5fa8:	0f 90       	pop	r0
    5faa:	0f 90       	pop	r0
    5fac:	0f 90       	pop	r0
    5fae:	0f 90       	pop	r0
    5fb0:	0f 90       	pop	r0
    5fb2:	81 11       	cpse	r24, r1
    5fb4:	2d c0       	rjmp	.+90     	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    5fb6:	2f 92       	push	r2
    5fb8:	3f 92       	push	r3
    5fba:	7f 92       	push	r7
    5fbc:	6f 92       	push	r6
    5fbe:	1f 93       	push	r17
    5fc0:	0f 93       	push	r16
    5fc2:	87 d7       	rcall	.+3854   	; 0x6ed2 <sprintf>
    5fc4:	60 e0       	ldi	r22, 0x00	; 0
    5fc6:	70 e0       	ldi	r23, 0x00	; 0
    5fc8:	c8 01       	movw	r24, r16
    5fca:	47 dd       	rcall	.-1394   	; 0x5a5a <_upload_message>
    5fcc:	9e dd       	rcall	.-1220   	; 0x5b0a <_reply2return_code>
    5fce:	0f 90       	pop	r0
    5fd0:	0f 90       	pop	r0
    5fd2:	0f 90       	pop	r0
    5fd4:	0f 90       	pop	r0
    5fd6:	0f 90       	pop	r0
    5fd8:	0f 90       	pop	r0
    5fda:	81 11       	cpse	r24, r1
    5fdc:	19 c0       	rjmp	.+50     	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    5fde:	3f ef       	ldi	r19, 0xFF	; 255
    5fe0:	e3 1a       	sub	r14, r19
    5fe2:	f3 0a       	sbc	r15, r19
    5fe4:	84 e0       	ldi	r24, 0x04	; 4
    5fe6:	c8 0e       	add	r12, r24
    5fe8:	d1 1c       	adc	r13, r1
    5fea:	98 e0       	ldi	r25, 0x08	; 8
    5fec:	e9 16       	cp	r14, r25
    5fee:	f1 04       	cpc	r15, r1
    5ff0:	09 f0       	breq	.+2      	; 0x5ff4 <lora_driver_configure_to_eu868+0x166>
    5ff2:	98 cf       	rjmp	.-208    	; 0x5f24 <lora_driver_configure_to_eu868+0x96>
    5ff4:	60 e0       	ldi	r22, 0x00	; 0
    5ff6:	70 e0       	ldi	r23, 0x00	; 0
    5ff8:	86 e2       	ldi	r24, 0x26	; 38
    5ffa:	97 e0       	ldi	r25, 0x07	; 7
    5ffc:	2e dd       	rcall	.-1444   	; 0x5a5a <_upload_message>
    5ffe:	85 dd       	rcall	.-1270   	; 0x5b0a <_reply2return_code>
    6000:	81 11       	cpse	r24, r1
    6002:	06 c0       	rjmp	.+12     	; 0x6010 <lora_driver_configure_to_eu868+0x182>
    6004:	60 e0       	ldi	r22, 0x00	; 0
    6006:	70 e0       	ldi	r23, 0x00	; 0
    6008:	87 e3       	ldi	r24, 0x37	; 55
    600a:	97 e0       	ldi	r25, 0x07	; 7
    600c:	26 dd       	rcall	.-1460   	; 0x5a5a <_upload_message>
    600e:	7d dd       	rcall	.-1286   	; 0x5b0a <_reply2return_code>
    6010:	a0 96       	adiw	r28, 0x20	; 32
    6012:	0f b6       	in	r0, 0x3f	; 63
    6014:	f8 94       	cli
    6016:	de bf       	out	0x3e, r29	; 62
    6018:	0f be       	out	0x3f, r0	; 63
    601a:	cd bf       	out	0x3d, r28	; 61
    601c:	df 91       	pop	r29
    601e:	cf 91       	pop	r28
    6020:	1f 91       	pop	r17
    6022:	0f 91       	pop	r16
    6024:	ff 90       	pop	r15
    6026:	ef 90       	pop	r14
    6028:	df 90       	pop	r13
    602a:	cf 90       	pop	r12
    602c:	bf 90       	pop	r11
    602e:	af 90       	pop	r10
    6030:	9f 90       	pop	r9
    6032:	8f 90       	pop	r8
    6034:	7f 90       	pop	r7
    6036:	6f 90       	pop	r6
    6038:	5f 90       	pop	r5
    603a:	4f 90       	pop	r4
    603c:	3f 90       	pop	r3
    603e:	2f 90       	pop	r2
    6040:	08 95       	ret

00006042 <lora_driver_set_otaa_identity>:
    6042:	ef 92       	push	r14
    6044:	ff 92       	push	r15
    6046:	0f 93       	push	r16
    6048:	1f 93       	push	r17
    604a:	cf 93       	push	r28
    604c:	df 93       	push	r29
    604e:	ec 01       	movw	r28, r24
    6050:	8b 01       	movw	r16, r22
    6052:	7a 01       	movw	r14, r20
    6054:	81 e0       	ldi	r24, 0x01	; 1
    6056:	10 df       	rcall	.-480    	; 0x5e78 <lora_driver_set_adaptive_data_rate>
    6058:	81 11       	cpse	r24, r1
    605a:	0d c0       	rjmp	.+26     	; 0x6076 <lora_driver_set_otaa_identity+0x34>
    605c:	ce 01       	movw	r24, r28
    605e:	29 de       	rcall	.-942    	; 0x5cb2 <lora_driver_set_application_identifier>
    6060:	81 11       	cpse	r24, r1
    6062:	09 c0       	rjmp	.+18     	; 0x6076 <lora_driver_set_otaa_identity+0x34>
    6064:	c8 01       	movw	r24, r16
    6066:	36 de       	rcall	.-916    	; 0x5cd4 <lora_driver_set_application_key>
    6068:	81 11       	cpse	r24, r1
    606a:	05 c0       	rjmp	.+10     	; 0x6076 <lora_driver_set_otaa_identity+0x34>
    606c:	c7 01       	movw	r24, r14
    606e:	10 de       	rcall	.-992    	; 0x5c90 <lora_driver_set_device_identifier>
    6070:	81 11       	cpse	r24, r1
    6072:	01 c0       	rjmp	.+2      	; 0x6076 <lora_driver_set_otaa_identity+0x34>
    6074:	40 de       	rcall	.-896    	; 0x5cf6 <lora_driver_save_mac>
    6076:	df 91       	pop	r29
    6078:	cf 91       	pop	r28
    607a:	1f 91       	pop	r17
    607c:	0f 91       	pop	r16
    607e:	ff 90       	pop	r15
    6080:	ef 90       	pop	r14
    6082:	08 95       	ret

00006084 <lora_driver_map_return_code_to_text>:
    6084:	90 e0       	ldi	r25, 0x00	; 0
    6086:	fc 01       	movw	r30, r24
    6088:	ee 0f       	add	r30, r30
    608a:	ff 1f       	adc	r31, r31
    608c:	8e 0f       	add	r24, r30
    608e:	9f 1f       	adc	r25, r31
    6090:	fc 01       	movw	r30, r24
    6092:	ed 5f       	subi	r30, 0xFD	; 253
    6094:	f7 4f       	sbci	r31, 0xF7	; 247
    6096:	81 81       	ldd	r24, Z+1	; 0x01
    6098:	92 81       	ldd	r25, Z+2	; 0x02
    609a:	08 95       	ret

0000609c <decode_port_no>:
    609c:	dc 01       	movw	r26, r24
    609e:	00 97       	sbiw	r24, 0x00	; 0
    60a0:	29 f1       	breq	.+74     	; 0x60ec <decode_port_no+0x50>
    60a2:	fb 01       	movw	r30, r22
    60a4:	20 81       	ld	r18, Z
    60a6:	fc 01       	movw	r30, r24
    60a8:	01 90       	ld	r0, Z+
    60aa:	00 20       	and	r0, r0
    60ac:	e9 f7       	brne	.-6      	; 0x60a8 <decode_port_no+0xc>
    60ae:	31 97       	sbiw	r30, 0x01	; 1
    60b0:	e8 1b       	sub	r30, r24
    60b2:	f9 0b       	sbc	r31, r25
    60b4:	82 2f       	mov	r24, r18
    60b6:	90 e0       	ldi	r25, 0x00	; 0
    60b8:	e8 17       	cp	r30, r24
    60ba:	f9 07       	cpc	r31, r25
    60bc:	c8 f0       	brcs	.+50     	; 0x60f0 <decode_port_no+0x54>
    60be:	80 e0       	ldi	r24, 0x00	; 0
    60c0:	08 c0       	rjmp	.+16     	; 0x60d2 <decode_port_no+0x36>
    60c2:	88 0f       	add	r24, r24
    60c4:	38 2f       	mov	r19, r24
    60c6:	33 0f       	add	r19, r19
    60c8:	33 0f       	add	r19, r19
    60ca:	83 0f       	add	r24, r19
    60cc:	80 53       	subi	r24, 0x30	; 48
    60ce:	89 0f       	add	r24, r25
    60d0:	2f 5f       	subi	r18, 0xFF	; 255
    60d2:	fd 01       	movw	r30, r26
    60d4:	e2 0f       	add	r30, r18
    60d6:	f1 1d       	adc	r31, r1
    60d8:	90 81       	ld	r25, Z
    60da:	30 ed       	ldi	r19, 0xD0	; 208
    60dc:	39 0f       	add	r19, r25
    60de:	3a 30       	cpi	r19, 0x0A	; 10
    60e0:	10 f4       	brcc	.+4      	; 0x60e6 <decode_port_no+0x4a>
    60e2:	91 11       	cpse	r25, r1
    60e4:	ee cf       	rjmp	.-36     	; 0x60c2 <decode_port_no+0x26>
    60e6:	fb 01       	movw	r30, r22
    60e8:	20 83       	st	Z, r18
    60ea:	08 95       	ret
    60ec:	80 e0       	ldi	r24, 0x00	; 0
    60ee:	08 95       	ret
    60f0:	80 e0       	ldi	r24, 0x00	; 0
    60f2:	08 95       	ret

000060f4 <decode_hexadecimal_string_bytes>:
    60f4:	0f 93       	push	r16
    60f6:	1f 93       	push	r17
    60f8:	cf 93       	push	r28
    60fa:	df 93       	push	r29
    60fc:	dc 01       	movw	r26, r24
    60fe:	ea 01       	movw	r28, r20
    6100:	20 97       	sbiw	r28, 0x00	; 0
    6102:	e1 f1       	breq	.+120    	; 0x617c <decode_hexadecimal_string_bytes+0x88>
    6104:	fa 01       	movw	r30, r20
    6106:	01 90       	ld	r0, Z+
    6108:	00 20       	and	r0, r0
    610a:	e9 f7       	brne	.-6      	; 0x6106 <decode_hexadecimal_string_bytes+0x12>
    610c:	31 97       	sbiw	r30, 0x01	; 1
    610e:	e4 1b       	sub	r30, r20
    6110:	f5 0b       	sbc	r31, r21
    6112:	32 97       	sbiw	r30, 0x02	; 2
    6114:	10 f5       	brcc	.+68     	; 0x615a <decode_hexadecimal_string_bytes+0x66>
    6116:	32 c0       	rjmp	.+100    	; 0x617c <decode_hexadecimal_string_bytes+0x88>
    6118:	8d 01       	movw	r16, r26
    611a:	04 0f       	add	r16, r20
    611c:	15 1f       	adc	r17, r21
    611e:	30 e0       	ldi	r19, 0x00	; 0
    6120:	ae 01       	movw	r20, r28
    6122:	42 0f       	add	r20, r18
    6124:	53 1f       	adc	r21, r19
    6126:	fa 01       	movw	r30, r20
    6128:	90 81       	ld	r25, Z
    612a:	91 34       	cpi	r25, 0x41	; 65
    612c:	28 f0       	brcs	.+10     	; 0x6138 <decode_hexadecimal_string_bytes+0x44>
    612e:	97 53       	subi	r25, 0x37	; 55
    6130:	59 2f       	mov	r21, r25
    6132:	52 95       	swap	r21
    6134:	50 7f       	andi	r21, 0xF0	; 240
    6136:	03 c0       	rjmp	.+6      	; 0x613e <decode_hexadecimal_string_bytes+0x4a>
    6138:	59 2f       	mov	r21, r25
    613a:	52 95       	swap	r21
    613c:	50 7f       	andi	r21, 0xF0	; 240
    613e:	2c 0f       	add	r18, r28
    6140:	3d 1f       	adc	r19, r29
    6142:	f9 01       	movw	r30, r18
    6144:	91 81       	ldd	r25, Z+1	; 0x01
    6146:	91 34       	cpi	r25, 0x41	; 65
    6148:	10 f0       	brcs	.+4      	; 0x614e <decode_hexadecimal_string_bytes+0x5a>
    614a:	97 53       	subi	r25, 0x37	; 55
    614c:	01 c0       	rjmp	.+2      	; 0x6150 <decode_hexadecimal_string_bytes+0x5c>
    614e:	90 53       	subi	r25, 0x30	; 48
    6150:	95 0f       	add	r25, r21
    6152:	f8 01       	movw	r30, r16
    6154:	90 83       	st	Z, r25
    6156:	8f 5f       	subi	r24, 0xFF	; 255
    6158:	01 c0       	rjmp	.+2      	; 0x615c <decode_hexadecimal_string_bytes+0x68>
    615a:	80 e0       	ldi	r24, 0x00	; 0
    615c:	28 2f       	mov	r18, r24
    615e:	22 0f       	add	r18, r18
    6160:	48 2f       	mov	r20, r24
    6162:	50 e0       	ldi	r21, 0x00	; 0
    6164:	fe 01       	movw	r30, r28
    6166:	01 90       	ld	r0, Z+
    6168:	00 20       	and	r0, r0
    616a:	e9 f7       	brne	.-6      	; 0x6166 <decode_hexadecimal_string_bytes+0x72>
    616c:	31 97       	sbiw	r30, 0x01	; 1
    616e:	ec 1b       	sub	r30, r28
    6170:	fd 0b       	sbc	r31, r29
    6172:	4e 17       	cp	r20, r30
    6174:	5f 07       	cpc	r21, r31
    6176:	10 f4       	brcc	.+4      	; 0x617c <decode_hexadecimal_string_bytes+0x88>
    6178:	86 13       	cpse	r24, r22
    617a:	ce cf       	rjmp	.-100    	; 0x6118 <decode_hexadecimal_string_bytes+0x24>
    617c:	df 91       	pop	r29
    617e:	cf 91       	pop	r28
    6180:	1f 91       	pop	r17
    6182:	0f 91       	pop	r16
    6184:	08 95       	ret

00006186 <reg_read_register>:
    6186:	fc 01       	movw	r30, r24
    6188:	80 81       	ld	r24, Z
    618a:	08 95       	ret

0000618c <reg_read_bit>:
    618c:	fc 01       	movw	r30, r24
    618e:	20 81       	ld	r18, Z
    6190:	81 e0       	ldi	r24, 0x01	; 1
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	02 c0       	rjmp	.+4      	; 0x619a <reg_read_bit+0xe>
    6196:	88 0f       	add	r24, r24
    6198:	99 1f       	adc	r25, r25
    619a:	6a 95       	dec	r22
    619c:	e2 f7       	brpl	.-8      	; 0x6196 <reg_read_bit+0xa>
    619e:	82 23       	and	r24, r18
    61a0:	08 95       	ret

000061a2 <reg_read_bits>:
    61a2:	fc 01       	movw	r30, r24
    61a4:	80 81       	ld	r24, Z
    61a6:	86 23       	and	r24, r22
    61a8:	08 95       	ret

000061aa <reg_set_register>:
    61aa:	fc 01       	movw	r30, r24
    61ac:	60 83       	st	Z, r22
    61ae:	08 95       	ret

000061b0 <reg_clear_register>:
    61b0:	fc 01       	movw	r30, r24
    61b2:	10 82       	st	Z, r1
    61b4:	08 95       	ret

000061b6 <reg_set_bit>:
    61b6:	fc 01       	movw	r30, r24
    61b8:	40 81       	ld	r20, Z
    61ba:	21 e0       	ldi	r18, 0x01	; 1
    61bc:	30 e0       	ldi	r19, 0x00	; 0
    61be:	02 c0       	rjmp	.+4      	; 0x61c4 <reg_set_bit+0xe>
    61c0:	22 0f       	add	r18, r18
    61c2:	33 1f       	adc	r19, r19
    61c4:	6a 95       	dec	r22
    61c6:	e2 f7       	brpl	.-8      	; 0x61c0 <reg_set_bit+0xa>
    61c8:	24 2b       	or	r18, r20
    61ca:	20 83       	st	Z, r18
    61cc:	08 95       	ret

000061ce <reg_set_bits>:
    61ce:	fc 01       	movw	r30, r24
    61d0:	20 81       	ld	r18, Z
    61d2:	62 2b       	or	r22, r18
    61d4:	60 83       	st	Z, r22
    61d6:	08 95       	ret

000061d8 <reg_toggle_bit>:
    61d8:	fc 01       	movw	r30, r24
    61da:	40 81       	ld	r20, Z
    61dc:	21 e0       	ldi	r18, 0x01	; 1
    61de:	30 e0       	ldi	r19, 0x00	; 0
    61e0:	02 c0       	rjmp	.+4      	; 0x61e6 <reg_toggle_bit+0xe>
    61e2:	22 0f       	add	r18, r18
    61e4:	33 1f       	adc	r19, r19
    61e6:	6a 95       	dec	r22
    61e8:	e2 f7       	brpl	.-8      	; 0x61e2 <reg_toggle_bit+0xa>
    61ea:	24 27       	eor	r18, r20
    61ec:	20 83       	st	Z, r18
    61ee:	08 95       	ret

000061f0 <reg_toggle_bits>:
    61f0:	fc 01       	movw	r30, r24
    61f2:	20 81       	ld	r18, Z
    61f4:	62 27       	eor	r22, r18
    61f6:	60 83       	st	Z, r22
    61f8:	08 95       	ret

000061fa <reg_clear_bit>:
    61fa:	fc 01       	movw	r30, r24
    61fc:	90 81       	ld	r25, Z
    61fe:	21 e0       	ldi	r18, 0x01	; 1
    6200:	30 e0       	ldi	r19, 0x00	; 0
    6202:	02 c0       	rjmp	.+4      	; 0x6208 <reg_clear_bit+0xe>
    6204:	22 0f       	add	r18, r18
    6206:	33 1f       	adc	r19, r19
    6208:	6a 95       	dec	r22
    620a:	e2 f7       	brpl	.-8      	; 0x6204 <reg_clear_bit+0xa>
    620c:	20 95       	com	r18
    620e:	29 23       	and	r18, r25
    6210:	20 83       	st	Z, r18
    6212:	08 95       	ret

00006214 <reg_clear_bits>:
    6214:	fc 01       	movw	r30, r24
    6216:	90 81       	ld	r25, Z
    6218:	60 95       	com	r22
    621a:	69 23       	and	r22, r25
    621c:	60 83       	st	Z, r22
    621e:	08 95       	ret

00006220 <_serial_call_back>:
    6220:	80 91 75 0a 	lds	r24, 0x0A75	; 0x800a75 <crc_sum.1941>
    6224:	86 0f       	add	r24, r22
    6226:	80 93 75 0a 	sts	0x0A75, r24	; 0x800a75 <crc_sum.1941>
    622a:	90 91 78 0a 	lds	r25, 0x0A78	; 0x800a78 <_mh_state>
    622e:	91 30       	cpi	r25, 0x01	; 1
    6230:	79 f0       	breq	.+30     	; 0x6250 <_serial_call_back+0x30>
    6232:	28 f0       	brcs	.+10     	; 0x623e <_serial_call_back+0x1e>
    6234:	92 30       	cpi	r25, 0x02	; 2
    6236:	a9 f0       	breq	.+42     	; 0x6262 <_serial_call_back+0x42>
    6238:	93 30       	cpi	r25, 0x03	; 3
    623a:	19 f1       	breq	.+70     	; 0x6282 <_serial_call_back+0x62>
    623c:	08 95       	ret
    623e:	6f 3f       	cpi	r22, 0xFF	; 255
    6240:	09 f0       	breq	.+2      	; 0x6244 <_serial_call_back+0x24>
    6242:	48 c0       	rjmp	.+144    	; 0x62d4 <_serial_call_back+0xb4>
    6244:	10 92 75 0a 	sts	0x0A75, r1	; 0x800a75 <crc_sum.1941>
    6248:	81 e0       	ldi	r24, 0x01	; 1
    624a:	80 93 78 0a 	sts	0x0A78, r24	; 0x800a78 <_mh_state>
    624e:	08 95       	ret
    6250:	66 38       	cpi	r22, 0x86	; 134
    6252:	09 f0       	breq	.+2      	; 0x6256 <_serial_call_back+0x36>
    6254:	3f c0       	rjmp	.+126    	; 0x62d4 <_serial_call_back+0xb4>
    6256:	10 92 74 0a 	sts	0x0A74, r1	; 0x800a74 <inDex.1939>
    625a:	82 e0       	ldi	r24, 0x02	; 2
    625c:	80 93 78 0a 	sts	0x0A78, r24	; 0x800a78 <_mh_state>
    6260:	08 95       	ret
    6262:	e0 91 74 0a 	lds	r30, 0x0A74	; 0x800a74 <inDex.1939>
    6266:	81 e0       	ldi	r24, 0x01	; 1
    6268:	8e 0f       	add	r24, r30
    626a:	80 93 74 0a 	sts	0x0A74, r24	; 0x800a74 <inDex.1939>
    626e:	f0 e0       	ldi	r31, 0x00	; 0
    6270:	ee 58       	subi	r30, 0x8E	; 142
    6272:	f5 4f       	sbci	r31, 0xF5	; 245
    6274:	60 83       	st	Z, r22
    6276:	82 30       	cpi	r24, 0x02	; 2
    6278:	69 f5       	brne	.+90     	; 0x62d4 <_serial_call_back+0xb4>
    627a:	83 e0       	ldi	r24, 0x03	; 3
    627c:	80 93 78 0a 	sts	0x0A78, r24	; 0x800a78 <_mh_state>
    6280:	08 95       	ret
    6282:	90 91 74 0a 	lds	r25, 0x0A74	; 0x800a74 <inDex.1939>
    6286:	21 e0       	ldi	r18, 0x01	; 1
    6288:	29 0f       	add	r18, r25
    628a:	20 93 74 0a 	sts	0x0A74, r18	; 0x800a74 <inDex.1939>
    628e:	96 30       	cpi	r25, 0x06	; 6
    6290:	09 f5       	brne	.+66     	; 0x62d4 <_serial_call_back+0xb4>
    6292:	81 11       	cpse	r24, r1
    6294:	0e c0       	rjmp	.+28     	; 0x62b2 <_serial_call_back+0x92>
    6296:	e2 e7       	ldi	r30, 0x72	; 114
    6298:	fa e0       	ldi	r31, 0x0A	; 10
    629a:	80 81       	ld	r24, Z
    629c:	90 e0       	ldi	r25, 0x00	; 0
    629e:	98 2f       	mov	r25, r24
    62a0:	88 27       	eor	r24, r24
    62a2:	21 81       	ldd	r18, Z+1	; 0x01
    62a4:	82 0f       	add	r24, r18
    62a6:	91 1d       	adc	r25, r1
    62a8:	90 93 7a 0a 	sts	0x0A7A, r25	; 0x800a7a <_ppm+0x1>
    62ac:	80 93 79 0a 	sts	0x0A79, r24	; 0x800a79 <_ppm>
    62b0:	04 c0       	rjmp	.+8      	; 0x62ba <_serial_call_back+0x9a>
    62b2:	10 92 7a 0a 	sts	0x0A7A, r1	; 0x800a7a <_ppm+0x1>
    62b6:	10 92 79 0a 	sts	0x0A79, r1	; 0x800a79 <_ppm>
    62ba:	10 92 78 0a 	sts	0x0A78, r1	; 0x800a78 <_mh_state>
    62be:	e0 91 76 0a 	lds	r30, 0x0A76	; 0x800a76 <_app_call_back>
    62c2:	f0 91 77 0a 	lds	r31, 0x0A77	; 0x800a77 <_app_call_back+0x1>
    62c6:	30 97       	sbiw	r30, 0x00	; 0
    62c8:	29 f0       	breq	.+10     	; 0x62d4 <_serial_call_back+0xb4>
    62ca:	80 91 79 0a 	lds	r24, 0x0A79	; 0x800a79 <_ppm>
    62ce:	90 91 7a 0a 	lds	r25, 0x0A7A	; 0x800a7a <_ppm+0x1>
    62d2:	19 95       	eicall
    62d4:	08 95       	ret

000062d6 <mh_z19_create>:
    62d6:	8f 92       	push	r8
    62d8:	9f 92       	push	r9
    62da:	af 92       	push	r10
    62dc:	cf 92       	push	r12
    62de:	ef 92       	push	r14
    62e0:	0f 93       	push	r16
    62e2:	cf 93       	push	r28
    62e4:	df 93       	push	r29
    62e6:	eb 01       	movw	r28, r22
    62e8:	0f 2e       	mov	r0, r31
    62ea:	f0 e1       	ldi	r31, 0x10	; 16
    62ec:	8f 2e       	mov	r8, r31
    62ee:	f1 e3       	ldi	r31, 0x31	; 49
    62f0:	9f 2e       	mov	r9, r31
    62f2:	f0 2d       	mov	r31, r0
    62f4:	68 94       	set
    62f6:	aa 24       	eor	r10, r10
    62f8:	a4 f8       	bld	r10, 4
    62fa:	68 94       	set
    62fc:	cc 24       	eor	r12, r12
    62fe:	c4 f8       	bld	r12, 4
    6300:	e1 2c       	mov	r14, r1
    6302:	00 e0       	ldi	r16, 0x00	; 0
    6304:	23 e0       	ldi	r18, 0x03	; 3
    6306:	40 e8       	ldi	r20, 0x80	; 128
    6308:	55 e2       	ldi	r21, 0x25	; 37
    630a:	60 e0       	ldi	r22, 0x00	; 0
    630c:	70 e0       	ldi	r23, 0x00	; 0
    630e:	0e 94 ca 26 	call	0x4d94	; 0x4d94 <serial_new_instance>
    6312:	90 93 7c 0a 	sts	0x0A7C, r25	; 0x800a7c <_serial+0x1>
    6316:	80 93 7b 0a 	sts	0x0A7B, r24	; 0x800a7b <_serial>
    631a:	d0 93 77 0a 	sts	0x0A77, r29	; 0x800a77 <_app_call_back+0x1>
    631e:	c0 93 76 0a 	sts	0x0A76, r28	; 0x800a76 <_app_call_back>
    6322:	df 91       	pop	r29
    6324:	cf 91       	pop	r28
    6326:	0f 91       	pop	r16
    6328:	ef 90       	pop	r14
    632a:	cf 90       	pop	r12
    632c:	af 90       	pop	r10
    632e:	9f 90       	pop	r9
    6330:	8f 90       	pop	r8
    6332:	08 95       	ret

00006334 <mh_z19_take_meassuring>:
    6334:	cf 93       	push	r28
    6336:	df 93       	push	r29
    6338:	cd b7       	in	r28, 0x3d	; 61
    633a:	de b7       	in	r29, 0x3e	; 62
    633c:	29 97       	sbiw	r28, 0x09	; 9
    633e:	0f b6       	in	r0, 0x3f	; 63
    6340:	f8 94       	cli
    6342:	de bf       	out	0x3e, r29	; 62
    6344:	0f be       	out	0x3f, r0	; 63
    6346:	cd bf       	out	0x3d, r28	; 61
    6348:	89 e0       	ldi	r24, 0x09	; 9
    634a:	e4 e3       	ldi	r30, 0x34	; 52
    634c:	f5 e0       	ldi	r31, 0x05	; 5
    634e:	9e 01       	movw	r18, r28
    6350:	2f 5f       	subi	r18, 0xFF	; 255
    6352:	3f 4f       	sbci	r19, 0xFF	; 255
    6354:	d9 01       	movw	r26, r18
    6356:	01 90       	ld	r0, Z+
    6358:	0d 92       	st	X+, r0
    635a:	8a 95       	dec	r24
    635c:	e1 f7       	brne	.-8      	; 0x6356 <mh_z19_take_meassuring+0x22>
    635e:	10 92 7a 0a 	sts	0x0A7A, r1	; 0x800a7a <_ppm+0x1>
    6362:	10 92 79 0a 	sts	0x0A79, r1	; 0x800a79 <_ppm>
    6366:	80 91 7b 0a 	lds	r24, 0x0A7B	; 0x800a7b <_serial>
    636a:	90 91 7c 0a 	lds	r25, 0x0A7C	; 0x800a7c <_serial+0x1>
    636e:	00 97       	sbiw	r24, 0x00	; 0
    6370:	39 f0       	breq	.+14     	; 0x6380 <mh_z19_take_meassuring+0x4c>
    6372:	42 2f       	mov	r20, r18
    6374:	53 2f       	mov	r21, r19
    6376:	69 e0       	ldi	r22, 0x09	; 9
    6378:	0e 94 8f 27 	call	0x4f1e	; 0x4f1e <serial_send_bytes>
    637c:	80 e0       	ldi	r24, 0x00	; 0
    637e:	01 c0       	rjmp	.+2      	; 0x6382 <mh_z19_take_meassuring+0x4e>
    6380:	82 e0       	ldi	r24, 0x02	; 2
    6382:	29 96       	adiw	r28, 0x09	; 9
    6384:	0f b6       	in	r0, 0x3f	; 63
    6386:	f8 94       	cli
    6388:	de bf       	out	0x3e, r29	; 62
    638a:	0f be       	out	0x3f, r0	; 63
    638c:	cd bf       	out	0x3d, r28	; 61
    638e:	df 91       	pop	r29
    6390:	cf 91       	pop	r28
    6392:	08 95       	ret

00006394 <_initTwiInterface>:
    6394:	80 91 8b 0a 	lds	r24, 0x0A8B	; 0x800a8b <_twiIsInitiated>
    6398:	81 11       	cpse	r24, r1
    639a:	0c c0       	rjmp	.+24     	; 0x63b4 <_initTwiInterface+0x20>
    639c:	8c e0       	ldi	r24, 0x0C	; 12
    639e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    63a2:	8f ef       	ldi	r24, 0xFF	; 255
    63a4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    63a8:	84 e0       	ldi	r24, 0x04	; 4
    63aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    63ae:	81 e0       	ldi	r24, 0x01	; 1
    63b0:	80 93 8b 0a 	sts	0x0A8B, r24	; 0x800a8b <_twiIsInitiated>
    63b4:	08 95       	ret

000063b6 <twiCreate>:
    63b6:	af 92       	push	r10
    63b8:	bf 92       	push	r11
    63ba:	cf 92       	push	r12
    63bc:	df 92       	push	r13
    63be:	ef 92       	push	r14
    63c0:	ff 92       	push	r15
    63c2:	0f 93       	push	r16
    63c4:	1f 93       	push	r17
    63c6:	cf 93       	push	r28
    63c8:	df 93       	push	r29
    63ca:	a8 2e       	mov	r10, r24
    63cc:	b6 2e       	mov	r11, r22
    63ce:	69 01       	movw	r12, r18
    63d0:	7a 01       	movw	r14, r20
    63d2:	84 e0       	ldi	r24, 0x04	; 4
    63d4:	90 e0       	ldi	r25, 0x00	; 0
    63d6:	db d3       	rcall	.+1974   	; 0x6b8e <malloc>
    63d8:	ec 01       	movw	r28, r24
    63da:	89 2b       	or	r24, r25
    63dc:	61 f1       	breq	.+88     	; 0x6436 <twiCreate+0x80>
    63de:	a8 82       	st	Y, r10
    63e0:	81 e0       	ldi	r24, 0x01	; 1
    63e2:	b8 12       	cpse	r11, r24
    63e4:	12 c0       	rjmp	.+36     	; 0x640a <twiCreate+0x54>
    63e6:	c7 01       	movw	r24, r14
    63e8:	b6 01       	movw	r22, r12
    63ea:	20 ea       	ldi	r18, 0xA0	; 160
    63ec:	36 e8       	ldi	r19, 0x86	; 134
    63ee:	41 e0       	ldi	r20, 0x01	; 1
    63f0:	50 e0       	ldi	r21, 0x00	; 0
    63f2:	6e d1       	rcall	.+732    	; 0x66d0 <__udivmodsi4>
    63f4:	da 01       	movw	r26, r20
    63f6:	c9 01       	movw	r24, r18
    63f8:	40 97       	sbiw	r24, 0x10	; 16
    63fa:	a1 09       	sbc	r26, r1
    63fc:	b1 09       	sbc	r27, r1
    63fe:	b6 95       	lsr	r27
    6400:	a7 95       	ror	r26
    6402:	97 95       	ror	r25
    6404:	87 95       	ror	r24
    6406:	89 83       	std	Y+1, r24	; 0x01
    6408:	11 c0       	rjmp	.+34     	; 0x642c <twiCreate+0x76>
    640a:	c7 01       	movw	r24, r14
    640c:	b6 01       	movw	r22, r12
    640e:	20 e8       	ldi	r18, 0x80	; 128
    6410:	3a e1       	ldi	r19, 0x1A	; 26
    6412:	46 e0       	ldi	r20, 0x06	; 6
    6414:	50 e0       	ldi	r21, 0x00	; 0
    6416:	5c d1       	rcall	.+696    	; 0x66d0 <__udivmodsi4>
    6418:	da 01       	movw	r26, r20
    641a:	c9 01       	movw	r24, r18
    641c:	40 97       	sbiw	r24, 0x10	; 16
    641e:	a1 09       	sbc	r26, r1
    6420:	b1 09       	sbc	r27, r1
    6422:	b6 95       	lsr	r27
    6424:	a7 95       	ror	r26
    6426:	97 95       	ror	r25
    6428:	87 95       	ror	r24
    642a:	89 83       	std	Y+1, r24	; 0x01
    642c:	1b 83       	std	Y+3, r17	; 0x03
    642e:	0a 83       	std	Y+2, r16	; 0x02
    6430:	8c 2f       	mov	r24, r28
    6432:	9d 2f       	mov	r25, r29
    6434:	02 c0       	rjmp	.+4      	; 0x643a <twiCreate+0x84>
    6436:	80 e0       	ldi	r24, 0x00	; 0
    6438:	90 e0       	ldi	r25, 0x00	; 0
    643a:	df 91       	pop	r29
    643c:	cf 91       	pop	r28
    643e:	1f 91       	pop	r17
    6440:	0f 91       	pop	r16
    6442:	ff 90       	pop	r15
    6444:	ef 90       	pop	r14
    6446:	df 90       	pop	r13
    6448:	cf 90       	pop	r12
    644a:	bf 90       	pop	r11
    644c:	af 90       	pop	r10
    644e:	08 95       	ret

00006450 <twiIsBusy>:
    6450:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    6454:	81 70       	andi	r24, 0x01	; 1
    6456:	08 95       	ret

00006458 <twiTransmit>:
    6458:	ff 92       	push	r15
    645a:	0f 93       	push	r16
    645c:	1f 93       	push	r17
    645e:	cf 93       	push	r28
    6460:	df 93       	push	r29
    6462:	00 97       	sbiw	r24, 0x00	; 0
    6464:	d1 f1       	breq	.+116    	; 0x64da <twiTransmit+0x82>
    6466:	4a 30       	cpi	r20, 0x0A	; 10
    6468:	d0 f5       	brcc	.+116    	; 0x64de <twiTransmit+0x86>
    646a:	f4 2e       	mov	r15, r20
    646c:	8b 01       	movw	r16, r22
    646e:	ec 01       	movw	r28, r24
    6470:	ef df       	rcall	.-34     	; 0x6450 <twiIsBusy>
    6472:	81 11       	cpse	r24, r1
    6474:	36 c0       	rjmp	.+108    	; 0x64e2 <twiTransmit+0x8a>
    6476:	80 91 7e 0a 	lds	r24, 0x0A7E	; 0x800a7e <_twiCurrentHandler>
    647a:	90 91 7f 0a 	lds	r25, 0x0A7F	; 0x800a7f <_twiCurrentHandler+0x1>
    647e:	c8 17       	cp	r28, r24
    6480:	d9 07       	cpc	r29, r25
    6482:	41 f0       	breq	.+16     	; 0x6494 <twiTransmit+0x3c>
    6484:	87 df       	rcall	.-242    	; 0x6394 <_initTwiInterface>
    6486:	89 81       	ldd	r24, Y+1	; 0x01
    6488:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    648c:	d0 93 7f 0a 	sts	0x0A7F, r29	; 0x800a7f <_twiCurrentHandler+0x1>
    6490:	c0 93 7e 0a 	sts	0x0A7E, r28	; 0x800a7e <_twiCurrentHandler>
    6494:	81 e0       	ldi	r24, 0x01	; 1
    6496:	8f 0d       	add	r24, r15
    6498:	80 93 80 0a 	sts	0x0A80, r24	; 0x800a80 <_twiMessageLen>
    649c:	88 81       	ld	r24, Y
    649e:	88 0f       	add	r24, r24
    64a0:	80 93 81 0a 	sts	0x0A81, r24	; 0x800a81 <_twiMessageBuffer>
    64a4:	ff 20       	and	r15, r15
    64a6:	89 f0       	breq	.+34     	; 0x64ca <twiTransmit+0x72>
    64a8:	f8 01       	movw	r30, r16
    64aa:	a2 e8       	ldi	r26, 0x82	; 130
    64ac:	ba e0       	ldi	r27, 0x0A	; 10
    64ae:	4f ef       	ldi	r20, 0xFF	; 255
    64b0:	4f 0d       	add	r20, r15
    64b2:	64 2f       	mov	r22, r20
    64b4:	70 e0       	ldi	r23, 0x00	; 0
    64b6:	cb 01       	movw	r24, r22
    64b8:	01 96       	adiw	r24, 0x01	; 1
    64ba:	b8 01       	movw	r22, r16
    64bc:	68 0f       	add	r22, r24
    64be:	79 1f       	adc	r23, r25
    64c0:	81 91       	ld	r24, Z+
    64c2:	8d 93       	st	X+, r24
    64c4:	e6 17       	cp	r30, r22
    64c6:	f7 07       	cpc	r31, r23
    64c8:	d9 f7       	brne	.-10     	; 0x64c0 <twiTransmit+0x68>
    64ca:	88 ef       	ldi	r24, 0xF8	; 248
    64cc:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    64d0:	85 ea       	ldi	r24, 0xA5	; 165
    64d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    64d6:	84 e0       	ldi	r24, 0x04	; 4
    64d8:	05 c0       	rjmp	.+10     	; 0x64e4 <twiTransmit+0x8c>
    64da:	86 e0       	ldi	r24, 0x06	; 6
    64dc:	03 c0       	rjmp	.+6      	; 0x64e4 <twiTransmit+0x8c>
    64de:	87 e0       	ldi	r24, 0x07	; 7
    64e0:	01 c0       	rjmp	.+2      	; 0x64e4 <twiTransmit+0x8c>
    64e2:	82 e0       	ldi	r24, 0x02	; 2
    64e4:	df 91       	pop	r29
    64e6:	cf 91       	pop	r28
    64e8:	1f 91       	pop	r17
    64ea:	0f 91       	pop	r16
    64ec:	ff 90       	pop	r15
    64ee:	08 95       	ret

000064f0 <twiReceive>:
    64f0:	1f 93       	push	r17
    64f2:	cf 93       	push	r28
    64f4:	df 93       	push	r29
    64f6:	00 97       	sbiw	r24, 0x00	; 0
    64f8:	29 f1       	breq	.+74     	; 0x6544 <twiReceive+0x54>
    64fa:	6b 30       	cpi	r22, 0x0B	; 11
    64fc:	28 f5       	brcc	.+74     	; 0x6548 <twiReceive+0x58>
    64fe:	16 2f       	mov	r17, r22
    6500:	ec 01       	movw	r28, r24
    6502:	a6 df       	rcall	.-180    	; 0x6450 <twiIsBusy>
    6504:	81 11       	cpse	r24, r1
    6506:	22 c0       	rjmp	.+68     	; 0x654c <twiReceive+0x5c>
    6508:	80 91 7e 0a 	lds	r24, 0x0A7E	; 0x800a7e <_twiCurrentHandler>
    650c:	90 91 7f 0a 	lds	r25, 0x0A7F	; 0x800a7f <_twiCurrentHandler+0x1>
    6510:	c8 17       	cp	r28, r24
    6512:	d9 07       	cpc	r29, r25
    6514:	41 f0       	breq	.+16     	; 0x6526 <twiReceive+0x36>
    6516:	3e df       	rcall	.-388    	; 0x6394 <_initTwiInterface>
    6518:	89 81       	ldd	r24, Y+1	; 0x01
    651a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    651e:	d0 93 7f 0a 	sts	0x0A7F, r29	; 0x800a7f <_twiCurrentHandler+0x1>
    6522:	c0 93 7e 0a 	sts	0x0A7E, r28	; 0x800a7e <_twiCurrentHandler>
    6526:	10 93 80 0a 	sts	0x0A80, r17	; 0x800a80 <_twiMessageLen>
    652a:	88 81       	ld	r24, Y
    652c:	88 0f       	add	r24, r24
    652e:	81 60       	ori	r24, 0x01	; 1
    6530:	80 93 81 0a 	sts	0x0A81, r24	; 0x800a81 <_twiMessageBuffer>
    6534:	88 ef       	ldi	r24, 0xF8	; 248
    6536:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    653a:	85 ea       	ldi	r24, 0xA5	; 165
    653c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    6540:	85 e0       	ldi	r24, 0x05	; 5
    6542:	05 c0       	rjmp	.+10     	; 0x654e <twiReceive+0x5e>
    6544:	86 e0       	ldi	r24, 0x06	; 6
    6546:	03 c0       	rjmp	.+6      	; 0x654e <twiReceive+0x5e>
    6548:	87 e0       	ldi	r24, 0x07	; 7
    654a:	01 c0       	rjmp	.+2      	; 0x654e <twiReceive+0x5e>
    654c:	82 e0       	ldi	r24, 0x02	; 2
    654e:	df 91       	pop	r29
    6550:	cf 91       	pop	r28
    6552:	1f 91       	pop	r17
    6554:	08 95       	ret

00006556 <__vector_39>:
    6556:	1f 92       	push	r1
    6558:	0f 92       	push	r0
    655a:	0f b6       	in	r0, 0x3f	; 63
    655c:	0f 92       	push	r0
    655e:	11 24       	eor	r1, r1
    6560:	0b b6       	in	r0, 0x3b	; 59
    6562:	0f 92       	push	r0
    6564:	2f 93       	push	r18
    6566:	3f 93       	push	r19
    6568:	4f 93       	push	r20
    656a:	5f 93       	push	r21
    656c:	6f 93       	push	r22
    656e:	7f 93       	push	r23
    6570:	8f 93       	push	r24
    6572:	9f 93       	push	r25
    6574:	af 93       	push	r26
    6576:	bf 93       	push	r27
    6578:	ef 93       	push	r30
    657a:	ff 93       	push	r31
    657c:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    6580:	8e 2f       	mov	r24, r30
    6582:	90 e0       	ldi	r25, 0x00	; 0
    6584:	fc 01       	movw	r30, r24
    6586:	38 97       	sbiw	r30, 0x08	; 8
    6588:	e1 35       	cpi	r30, 0x51	; 81
    658a:	f1 05       	cpc	r31, r1
    658c:	08 f0       	brcs	.+2      	; 0x6590 <__vector_39+0x3a>
    658e:	75 c0       	rjmp	.+234    	; 0x667a <__vector_39+0x124>
    6590:	88 27       	eor	r24, r24
    6592:	e4 58       	subi	r30, 0x84	; 132
    6594:	ff 4f       	sbci	r31, 0xFF	; 255
    6596:	8f 4f       	sbci	r24, 0xFF	; 255
    6598:	bd c0       	rjmp	.+378    	; 0x6714 <__tablejump2__>
    659a:	10 92 7d 0a 	sts	0x0A7D, r1	; 0x800a7d <_index.1885>
    659e:	e0 91 7d 0a 	lds	r30, 0x0A7D	; 0x800a7d <_index.1885>
    65a2:	80 91 80 0a 	lds	r24, 0x0A80	; 0x800a80 <_twiMessageLen>
    65a6:	e8 17       	cp	r30, r24
    65a8:	70 f4       	brcc	.+28     	; 0x65c6 <__vector_39+0x70>
    65aa:	81 e0       	ldi	r24, 0x01	; 1
    65ac:	8e 0f       	add	r24, r30
    65ae:	80 93 7d 0a 	sts	0x0A7D, r24	; 0x800a7d <_index.1885>
    65b2:	f0 e0       	ldi	r31, 0x00	; 0
    65b4:	ef 57       	subi	r30, 0x7F	; 127
    65b6:	f5 4f       	sbci	r31, 0xF5	; 245
    65b8:	80 81       	ld	r24, Z
    65ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    65be:	85 e8       	ldi	r24, 0x85	; 133
    65c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    65c4:	72 c0       	rjmp	.+228    	; 0x66aa <__vector_39+0x154>
    65c6:	84 e9       	ldi	r24, 0x94	; 148
    65c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    65cc:	80 91 7e 0a 	lds	r24, 0x0A7E	; 0x800a7e <_twiCurrentHandler>
    65d0:	90 91 7f 0a 	lds	r25, 0x0A7F	; 0x800a7f <_twiCurrentHandler+0x1>
    65d4:	dc 01       	movw	r26, r24
    65d6:	12 96       	adiw	r26, 0x02	; 2
    65d8:	ed 91       	ld	r30, X+
    65da:	fc 91       	ld	r31, X
    65dc:	13 97       	sbiw	r26, 0x03	; 3
    65de:	30 97       	sbiw	r30, 0x00	; 0
    65e0:	09 f4       	brne	.+2      	; 0x65e4 <__vector_39+0x8e>
    65e2:	63 c0       	rjmp	.+198    	; 0x66aa <__vector_39+0x154>
    65e4:	20 e0       	ldi	r18, 0x00	; 0
    65e6:	40 e0       	ldi	r20, 0x00	; 0
    65e8:	50 e0       	ldi	r21, 0x00	; 0
    65ea:	64 e0       	ldi	r22, 0x04	; 4
    65ec:	19 95       	eicall
    65ee:	5d c0       	rjmp	.+186    	; 0x66aa <__vector_39+0x154>
    65f0:	e0 91 7d 0a 	lds	r30, 0x0A7D	; 0x800a7d <_index.1885>
    65f4:	81 e0       	ldi	r24, 0x01	; 1
    65f6:	8e 0f       	add	r24, r30
    65f8:	80 93 7d 0a 	sts	0x0A7D, r24	; 0x800a7d <_index.1885>
    65fc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    6600:	f0 e0       	ldi	r31, 0x00	; 0
    6602:	ef 57       	subi	r30, 0x7F	; 127
    6604:	f5 4f       	sbci	r31, 0xF5	; 245
    6606:	80 83       	st	Z, r24
    6608:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    660c:	80 34       	cpi	r24, 0x40	; 64
    660e:	11 f4       	brne	.+4      	; 0x6614 <__vector_39+0xbe>
    6610:	10 92 7d 0a 	sts	0x0A7D, r1	; 0x800a7d <_index.1885>
    6614:	20 91 7d 0a 	lds	r18, 0x0A7D	; 0x800a7d <_index.1885>
    6618:	30 e0       	ldi	r19, 0x00	; 0
    661a:	80 91 80 0a 	lds	r24, 0x0A80	; 0x800a80 <_twiMessageLen>
    661e:	90 e0       	ldi	r25, 0x00	; 0
    6620:	01 97       	sbiw	r24, 0x01	; 1
    6622:	28 17       	cp	r18, r24
    6624:	39 07       	cpc	r19, r25
    6626:	24 f4       	brge	.+8      	; 0x6630 <__vector_39+0xda>
    6628:	85 ec       	ldi	r24, 0xC5	; 197
    662a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    662e:	3d c0       	rjmp	.+122    	; 0x66aa <__vector_39+0x154>
    6630:	85 e8       	ldi	r24, 0x85	; 133
    6632:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    6636:	39 c0       	rjmp	.+114    	; 0x66aa <__vector_39+0x154>
    6638:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    663c:	e0 91 7d 0a 	lds	r30, 0x0A7D	; 0x800a7d <_index.1885>
    6640:	f0 e0       	ldi	r31, 0x00	; 0
    6642:	ef 57       	subi	r30, 0x7F	; 127
    6644:	f5 4f       	sbci	r31, 0xF5	; 245
    6646:	80 83       	st	Z, r24
    6648:	84 e9       	ldi	r24, 0x94	; 148
    664a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    664e:	80 91 7e 0a 	lds	r24, 0x0A7E	; 0x800a7e <_twiCurrentHandler>
    6652:	90 91 7f 0a 	lds	r25, 0x0A7F	; 0x800a7f <_twiCurrentHandler+0x1>
    6656:	dc 01       	movw	r26, r24
    6658:	12 96       	adiw	r26, 0x02	; 2
    665a:	ed 91       	ld	r30, X+
    665c:	fc 91       	ld	r31, X
    665e:	13 97       	sbiw	r26, 0x03	; 3
    6660:	30 97       	sbiw	r30, 0x00	; 0
    6662:	19 f1       	breq	.+70     	; 0x66aa <__vector_39+0x154>
    6664:	20 91 80 0a 	lds	r18, 0x0A80	; 0x800a80 <_twiMessageLen>
    6668:	41 e8       	ldi	r20, 0x81	; 129
    666a:	5a e0       	ldi	r21, 0x0A	; 10
    666c:	65 e0       	ldi	r22, 0x05	; 5
    666e:	19 95       	eicall
    6670:	1c c0       	rjmp	.+56     	; 0x66aa <__vector_39+0x154>
    6672:	85 ea       	ldi	r24, 0xA5	; 165
    6674:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    6678:	18 c0       	rjmp	.+48     	; 0x66aa <__vector_39+0x154>
    667a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    667e:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    6682:	84 e0       	ldi	r24, 0x04	; 4
    6684:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    6688:	80 91 7e 0a 	lds	r24, 0x0A7E	; 0x800a7e <_twiCurrentHandler>
    668c:	90 91 7f 0a 	lds	r25, 0x0A7F	; 0x800a7f <_twiCurrentHandler+0x1>
    6690:	dc 01       	movw	r26, r24
    6692:	12 96       	adiw	r26, 0x02	; 2
    6694:	ed 91       	ld	r30, X+
    6696:	fc 91       	ld	r31, X
    6698:	13 97       	sbiw	r26, 0x03	; 3
    669a:	30 97       	sbiw	r30, 0x00	; 0
    669c:	31 f0       	breq	.+12     	; 0x66aa <__vector_39+0x154>
    669e:	20 e0       	ldi	r18, 0x00	; 0
    66a0:	40 e0       	ldi	r20, 0x00	; 0
    66a2:	50 e0       	ldi	r21, 0x00	; 0
    66a4:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <_twiCurrentState>
    66a8:	19 95       	eicall
    66aa:	ff 91       	pop	r31
    66ac:	ef 91       	pop	r30
    66ae:	bf 91       	pop	r27
    66b0:	af 91       	pop	r26
    66b2:	9f 91       	pop	r25
    66b4:	8f 91       	pop	r24
    66b6:	7f 91       	pop	r23
    66b8:	6f 91       	pop	r22
    66ba:	5f 91       	pop	r21
    66bc:	4f 91       	pop	r20
    66be:	3f 91       	pop	r19
    66c0:	2f 91       	pop	r18
    66c2:	0f 90       	pop	r0
    66c4:	0b be       	out	0x3b, r0	; 59
    66c6:	0f 90       	pop	r0
    66c8:	0f be       	out	0x3f, r0	; 63
    66ca:	0f 90       	pop	r0
    66cc:	1f 90       	pop	r1
    66ce:	18 95       	reti

000066d0 <__udivmodsi4>:
    66d0:	a1 e2       	ldi	r26, 0x21	; 33
    66d2:	1a 2e       	mov	r1, r26
    66d4:	aa 1b       	sub	r26, r26
    66d6:	bb 1b       	sub	r27, r27
    66d8:	fd 01       	movw	r30, r26
    66da:	0d c0       	rjmp	.+26     	; 0x66f6 <__udivmodsi4_ep>

000066dc <__udivmodsi4_loop>:
    66dc:	aa 1f       	adc	r26, r26
    66de:	bb 1f       	adc	r27, r27
    66e0:	ee 1f       	adc	r30, r30
    66e2:	ff 1f       	adc	r31, r31
    66e4:	a2 17       	cp	r26, r18
    66e6:	b3 07       	cpc	r27, r19
    66e8:	e4 07       	cpc	r30, r20
    66ea:	f5 07       	cpc	r31, r21
    66ec:	20 f0       	brcs	.+8      	; 0x66f6 <__udivmodsi4_ep>
    66ee:	a2 1b       	sub	r26, r18
    66f0:	b3 0b       	sbc	r27, r19
    66f2:	e4 0b       	sbc	r30, r20
    66f4:	f5 0b       	sbc	r31, r21

000066f6 <__udivmodsi4_ep>:
    66f6:	66 1f       	adc	r22, r22
    66f8:	77 1f       	adc	r23, r23
    66fa:	88 1f       	adc	r24, r24
    66fc:	99 1f       	adc	r25, r25
    66fe:	1a 94       	dec	r1
    6700:	69 f7       	brne	.-38     	; 0x66dc <__udivmodsi4_loop>
    6702:	60 95       	com	r22
    6704:	70 95       	com	r23
    6706:	80 95       	com	r24
    6708:	90 95       	com	r25
    670a:	9b 01       	movw	r18, r22
    670c:	ac 01       	movw	r20, r24
    670e:	bd 01       	movw	r22, r26
    6710:	cf 01       	movw	r24, r30
    6712:	08 95       	ret

00006714 <__tablejump2__>:
    6714:	ee 0f       	add	r30, r30
    6716:	ff 1f       	adc	r31, r31
    6718:	88 1f       	adc	r24, r24
    671a:	8b bf       	out	0x3b, r24	; 59
    671c:	07 90       	elpm	r0, Z+
    671e:	f6 91       	elpm	r31, Z
    6720:	e0 2d       	mov	r30, r0
    6722:	19 94       	eijmp

00006724 <__subsf3>:
    6724:	50 58       	subi	r21, 0x80	; 128

00006726 <__addsf3>:
    6726:	bb 27       	eor	r27, r27
    6728:	aa 27       	eor	r26, r26
    672a:	0e d0       	rcall	.+28     	; 0x6748 <__addsf3x>
    672c:	75 c1       	rjmp	.+746    	; 0x6a18 <__fp_round>
    672e:	66 d1       	rcall	.+716    	; 0x69fc <__fp_pscA>
    6730:	30 f0       	brcs	.+12     	; 0x673e <__addsf3+0x18>
    6732:	6b d1       	rcall	.+726    	; 0x6a0a <__fp_pscB>
    6734:	20 f0       	brcs	.+8      	; 0x673e <__addsf3+0x18>
    6736:	31 f4       	brne	.+12     	; 0x6744 <__addsf3+0x1e>
    6738:	9f 3f       	cpi	r25, 0xFF	; 255
    673a:	11 f4       	brne	.+4      	; 0x6740 <__addsf3+0x1a>
    673c:	1e f4       	brtc	.+6      	; 0x6744 <__addsf3+0x1e>
    673e:	5b c1       	rjmp	.+694    	; 0x69f6 <__fp_nan>
    6740:	0e f4       	brtc	.+2      	; 0x6744 <__addsf3+0x1e>
    6742:	e0 95       	com	r30
    6744:	e7 fb       	bst	r30, 7
    6746:	51 c1       	rjmp	.+674    	; 0x69ea <__fp_inf>

00006748 <__addsf3x>:
    6748:	e9 2f       	mov	r30, r25
    674a:	77 d1       	rcall	.+750    	; 0x6a3a <__fp_split3>
    674c:	80 f3       	brcs	.-32     	; 0x672e <__addsf3+0x8>
    674e:	ba 17       	cp	r27, r26
    6750:	62 07       	cpc	r22, r18
    6752:	73 07       	cpc	r23, r19
    6754:	84 07       	cpc	r24, r20
    6756:	95 07       	cpc	r25, r21
    6758:	18 f0       	brcs	.+6      	; 0x6760 <__addsf3x+0x18>
    675a:	71 f4       	brne	.+28     	; 0x6778 <__addsf3x+0x30>
    675c:	9e f5       	brtc	.+102    	; 0x67c4 <__addsf3x+0x7c>
    675e:	8f c1       	rjmp	.+798    	; 0x6a7e <__fp_zero>
    6760:	0e f4       	brtc	.+2      	; 0x6764 <__addsf3x+0x1c>
    6762:	e0 95       	com	r30
    6764:	0b 2e       	mov	r0, r27
    6766:	ba 2f       	mov	r27, r26
    6768:	a0 2d       	mov	r26, r0
    676a:	0b 01       	movw	r0, r22
    676c:	b9 01       	movw	r22, r18
    676e:	90 01       	movw	r18, r0
    6770:	0c 01       	movw	r0, r24
    6772:	ca 01       	movw	r24, r20
    6774:	a0 01       	movw	r20, r0
    6776:	11 24       	eor	r1, r1
    6778:	ff 27       	eor	r31, r31
    677a:	59 1b       	sub	r21, r25
    677c:	99 f0       	breq	.+38     	; 0x67a4 <__addsf3x+0x5c>
    677e:	59 3f       	cpi	r21, 0xF9	; 249
    6780:	50 f4       	brcc	.+20     	; 0x6796 <__addsf3x+0x4e>
    6782:	50 3e       	cpi	r21, 0xE0	; 224
    6784:	68 f1       	brcs	.+90     	; 0x67e0 <__addsf3x+0x98>
    6786:	1a 16       	cp	r1, r26
    6788:	f0 40       	sbci	r31, 0x00	; 0
    678a:	a2 2f       	mov	r26, r18
    678c:	23 2f       	mov	r18, r19
    678e:	34 2f       	mov	r19, r20
    6790:	44 27       	eor	r20, r20
    6792:	58 5f       	subi	r21, 0xF8	; 248
    6794:	f3 cf       	rjmp	.-26     	; 0x677c <__addsf3x+0x34>
    6796:	46 95       	lsr	r20
    6798:	37 95       	ror	r19
    679a:	27 95       	ror	r18
    679c:	a7 95       	ror	r26
    679e:	f0 40       	sbci	r31, 0x00	; 0
    67a0:	53 95       	inc	r21
    67a2:	c9 f7       	brne	.-14     	; 0x6796 <__addsf3x+0x4e>
    67a4:	7e f4       	brtc	.+30     	; 0x67c4 <__addsf3x+0x7c>
    67a6:	1f 16       	cp	r1, r31
    67a8:	ba 0b       	sbc	r27, r26
    67aa:	62 0b       	sbc	r22, r18
    67ac:	73 0b       	sbc	r23, r19
    67ae:	84 0b       	sbc	r24, r20
    67b0:	ba f0       	brmi	.+46     	; 0x67e0 <__addsf3x+0x98>
    67b2:	91 50       	subi	r25, 0x01	; 1
    67b4:	a1 f0       	breq	.+40     	; 0x67de <__addsf3x+0x96>
    67b6:	ff 0f       	add	r31, r31
    67b8:	bb 1f       	adc	r27, r27
    67ba:	66 1f       	adc	r22, r22
    67bc:	77 1f       	adc	r23, r23
    67be:	88 1f       	adc	r24, r24
    67c0:	c2 f7       	brpl	.-16     	; 0x67b2 <__addsf3x+0x6a>
    67c2:	0e c0       	rjmp	.+28     	; 0x67e0 <__addsf3x+0x98>
    67c4:	ba 0f       	add	r27, r26
    67c6:	62 1f       	adc	r22, r18
    67c8:	73 1f       	adc	r23, r19
    67ca:	84 1f       	adc	r24, r20
    67cc:	48 f4       	brcc	.+18     	; 0x67e0 <__addsf3x+0x98>
    67ce:	87 95       	ror	r24
    67d0:	77 95       	ror	r23
    67d2:	67 95       	ror	r22
    67d4:	b7 95       	ror	r27
    67d6:	f7 95       	ror	r31
    67d8:	9e 3f       	cpi	r25, 0xFE	; 254
    67da:	08 f0       	brcs	.+2      	; 0x67de <__addsf3x+0x96>
    67dc:	b3 cf       	rjmp	.-154    	; 0x6744 <__addsf3+0x1e>
    67de:	93 95       	inc	r25
    67e0:	88 0f       	add	r24, r24
    67e2:	08 f0       	brcs	.+2      	; 0x67e6 <__addsf3x+0x9e>
    67e4:	99 27       	eor	r25, r25
    67e6:	ee 0f       	add	r30, r30
    67e8:	97 95       	ror	r25
    67ea:	87 95       	ror	r24
    67ec:	08 95       	ret

000067ee <__cmpsf2>:
    67ee:	d9 d0       	rcall	.+434    	; 0x69a2 <__fp_cmp>
    67f0:	08 f4       	brcc	.+2      	; 0x67f4 <__cmpsf2+0x6>
    67f2:	81 e0       	ldi	r24, 0x01	; 1
    67f4:	08 95       	ret

000067f6 <__divsf3>:
    67f6:	0c d0       	rcall	.+24     	; 0x6810 <__divsf3x>
    67f8:	0f c1       	rjmp	.+542    	; 0x6a18 <__fp_round>
    67fa:	07 d1       	rcall	.+526    	; 0x6a0a <__fp_pscB>
    67fc:	40 f0       	brcs	.+16     	; 0x680e <__divsf3+0x18>
    67fe:	fe d0       	rcall	.+508    	; 0x69fc <__fp_pscA>
    6800:	30 f0       	brcs	.+12     	; 0x680e <__divsf3+0x18>
    6802:	21 f4       	brne	.+8      	; 0x680c <__divsf3+0x16>
    6804:	5f 3f       	cpi	r21, 0xFF	; 255
    6806:	19 f0       	breq	.+6      	; 0x680e <__divsf3+0x18>
    6808:	f0 c0       	rjmp	.+480    	; 0x69ea <__fp_inf>
    680a:	51 11       	cpse	r21, r1
    680c:	39 c1       	rjmp	.+626    	; 0x6a80 <__fp_szero>
    680e:	f3 c0       	rjmp	.+486    	; 0x69f6 <__fp_nan>

00006810 <__divsf3x>:
    6810:	14 d1       	rcall	.+552    	; 0x6a3a <__fp_split3>
    6812:	98 f3       	brcs	.-26     	; 0x67fa <__divsf3+0x4>

00006814 <__divsf3_pse>:
    6814:	99 23       	and	r25, r25
    6816:	c9 f3       	breq	.-14     	; 0x680a <__divsf3+0x14>
    6818:	55 23       	and	r21, r21
    681a:	b1 f3       	breq	.-20     	; 0x6808 <__divsf3+0x12>
    681c:	95 1b       	sub	r25, r21
    681e:	55 0b       	sbc	r21, r21
    6820:	bb 27       	eor	r27, r27
    6822:	aa 27       	eor	r26, r26
    6824:	62 17       	cp	r22, r18
    6826:	73 07       	cpc	r23, r19
    6828:	84 07       	cpc	r24, r20
    682a:	38 f0       	brcs	.+14     	; 0x683a <__divsf3_pse+0x26>
    682c:	9f 5f       	subi	r25, 0xFF	; 255
    682e:	5f 4f       	sbci	r21, 0xFF	; 255
    6830:	22 0f       	add	r18, r18
    6832:	33 1f       	adc	r19, r19
    6834:	44 1f       	adc	r20, r20
    6836:	aa 1f       	adc	r26, r26
    6838:	a9 f3       	breq	.-22     	; 0x6824 <__divsf3_pse+0x10>
    683a:	33 d0       	rcall	.+102    	; 0x68a2 <__divsf3_pse+0x8e>
    683c:	0e 2e       	mov	r0, r30
    683e:	3a f0       	brmi	.+14     	; 0x684e <__divsf3_pse+0x3a>
    6840:	e0 e8       	ldi	r30, 0x80	; 128
    6842:	30 d0       	rcall	.+96     	; 0x68a4 <__divsf3_pse+0x90>
    6844:	91 50       	subi	r25, 0x01	; 1
    6846:	50 40       	sbci	r21, 0x00	; 0
    6848:	e6 95       	lsr	r30
    684a:	00 1c       	adc	r0, r0
    684c:	ca f7       	brpl	.-14     	; 0x6840 <__divsf3_pse+0x2c>
    684e:	29 d0       	rcall	.+82     	; 0x68a2 <__divsf3_pse+0x8e>
    6850:	fe 2f       	mov	r31, r30
    6852:	27 d0       	rcall	.+78     	; 0x68a2 <__divsf3_pse+0x8e>
    6854:	66 0f       	add	r22, r22
    6856:	77 1f       	adc	r23, r23
    6858:	88 1f       	adc	r24, r24
    685a:	bb 1f       	adc	r27, r27
    685c:	26 17       	cp	r18, r22
    685e:	37 07       	cpc	r19, r23
    6860:	48 07       	cpc	r20, r24
    6862:	ab 07       	cpc	r26, r27
    6864:	b0 e8       	ldi	r27, 0x80	; 128
    6866:	09 f0       	breq	.+2      	; 0x686a <__divsf3_pse+0x56>
    6868:	bb 0b       	sbc	r27, r27
    686a:	80 2d       	mov	r24, r0
    686c:	bf 01       	movw	r22, r30
    686e:	ff 27       	eor	r31, r31
    6870:	93 58       	subi	r25, 0x83	; 131
    6872:	5f 4f       	sbci	r21, 0xFF	; 255
    6874:	2a f0       	brmi	.+10     	; 0x6880 <__divsf3_pse+0x6c>
    6876:	9e 3f       	cpi	r25, 0xFE	; 254
    6878:	51 05       	cpc	r21, r1
    687a:	68 f0       	brcs	.+26     	; 0x6896 <__divsf3_pse+0x82>
    687c:	b6 c0       	rjmp	.+364    	; 0x69ea <__fp_inf>
    687e:	00 c1       	rjmp	.+512    	; 0x6a80 <__fp_szero>
    6880:	5f 3f       	cpi	r21, 0xFF	; 255
    6882:	ec f3       	brlt	.-6      	; 0x687e <__divsf3_pse+0x6a>
    6884:	98 3e       	cpi	r25, 0xE8	; 232
    6886:	dc f3       	brlt	.-10     	; 0x687e <__divsf3_pse+0x6a>
    6888:	86 95       	lsr	r24
    688a:	77 95       	ror	r23
    688c:	67 95       	ror	r22
    688e:	b7 95       	ror	r27
    6890:	f7 95       	ror	r31
    6892:	9f 5f       	subi	r25, 0xFF	; 255
    6894:	c9 f7       	brne	.-14     	; 0x6888 <__divsf3_pse+0x74>
    6896:	88 0f       	add	r24, r24
    6898:	91 1d       	adc	r25, r1
    689a:	96 95       	lsr	r25
    689c:	87 95       	ror	r24
    689e:	97 f9       	bld	r25, 7
    68a0:	08 95       	ret
    68a2:	e1 e0       	ldi	r30, 0x01	; 1
    68a4:	66 0f       	add	r22, r22
    68a6:	77 1f       	adc	r23, r23
    68a8:	88 1f       	adc	r24, r24
    68aa:	bb 1f       	adc	r27, r27
    68ac:	62 17       	cp	r22, r18
    68ae:	73 07       	cpc	r23, r19
    68b0:	84 07       	cpc	r24, r20
    68b2:	ba 07       	cpc	r27, r26
    68b4:	20 f0       	brcs	.+8      	; 0x68be <__divsf3_pse+0xaa>
    68b6:	62 1b       	sub	r22, r18
    68b8:	73 0b       	sbc	r23, r19
    68ba:	84 0b       	sbc	r24, r20
    68bc:	ba 0b       	sbc	r27, r26
    68be:	ee 1f       	adc	r30, r30
    68c0:	88 f7       	brcc	.-30     	; 0x68a4 <__divsf3_pse+0x90>
    68c2:	e0 95       	com	r30
    68c4:	08 95       	ret

000068c6 <__fixsfsi>:
    68c6:	04 d0       	rcall	.+8      	; 0x68d0 <__fixunssfsi>
    68c8:	68 94       	set
    68ca:	b1 11       	cpse	r27, r1
    68cc:	d9 c0       	rjmp	.+434    	; 0x6a80 <__fp_szero>
    68ce:	08 95       	ret

000068d0 <__fixunssfsi>:
    68d0:	bc d0       	rcall	.+376    	; 0x6a4a <__fp_splitA>
    68d2:	88 f0       	brcs	.+34     	; 0x68f6 <__fixunssfsi+0x26>
    68d4:	9f 57       	subi	r25, 0x7F	; 127
    68d6:	90 f0       	brcs	.+36     	; 0x68fc <__fixunssfsi+0x2c>
    68d8:	b9 2f       	mov	r27, r25
    68da:	99 27       	eor	r25, r25
    68dc:	b7 51       	subi	r27, 0x17	; 23
    68de:	a0 f0       	brcs	.+40     	; 0x6908 <__fixunssfsi+0x38>
    68e0:	d1 f0       	breq	.+52     	; 0x6916 <__fixunssfsi+0x46>
    68e2:	66 0f       	add	r22, r22
    68e4:	77 1f       	adc	r23, r23
    68e6:	88 1f       	adc	r24, r24
    68e8:	99 1f       	adc	r25, r25
    68ea:	1a f0       	brmi	.+6      	; 0x68f2 <__fixunssfsi+0x22>
    68ec:	ba 95       	dec	r27
    68ee:	c9 f7       	brne	.-14     	; 0x68e2 <__fixunssfsi+0x12>
    68f0:	12 c0       	rjmp	.+36     	; 0x6916 <__fixunssfsi+0x46>
    68f2:	b1 30       	cpi	r27, 0x01	; 1
    68f4:	81 f0       	breq	.+32     	; 0x6916 <__fixunssfsi+0x46>
    68f6:	c3 d0       	rcall	.+390    	; 0x6a7e <__fp_zero>
    68f8:	b1 e0       	ldi	r27, 0x01	; 1
    68fa:	08 95       	ret
    68fc:	c0 c0       	rjmp	.+384    	; 0x6a7e <__fp_zero>
    68fe:	67 2f       	mov	r22, r23
    6900:	78 2f       	mov	r23, r24
    6902:	88 27       	eor	r24, r24
    6904:	b8 5f       	subi	r27, 0xF8	; 248
    6906:	39 f0       	breq	.+14     	; 0x6916 <__fixunssfsi+0x46>
    6908:	b9 3f       	cpi	r27, 0xF9	; 249
    690a:	cc f3       	brlt	.-14     	; 0x68fe <__fixunssfsi+0x2e>
    690c:	86 95       	lsr	r24
    690e:	77 95       	ror	r23
    6910:	67 95       	ror	r22
    6912:	b3 95       	inc	r27
    6914:	d9 f7       	brne	.-10     	; 0x690c <__fixunssfsi+0x3c>
    6916:	3e f4       	brtc	.+14     	; 0x6926 <__fixunssfsi+0x56>
    6918:	90 95       	com	r25
    691a:	80 95       	com	r24
    691c:	70 95       	com	r23
    691e:	61 95       	neg	r22
    6920:	7f 4f       	sbci	r23, 0xFF	; 255
    6922:	8f 4f       	sbci	r24, 0xFF	; 255
    6924:	9f 4f       	sbci	r25, 0xFF	; 255
    6926:	08 95       	ret

00006928 <__floatunsisf>:
    6928:	e8 94       	clt
    692a:	09 c0       	rjmp	.+18     	; 0x693e <__floatsisf+0x12>

0000692c <__floatsisf>:
    692c:	97 fb       	bst	r25, 7
    692e:	3e f4       	brtc	.+14     	; 0x693e <__floatsisf+0x12>
    6930:	90 95       	com	r25
    6932:	80 95       	com	r24
    6934:	70 95       	com	r23
    6936:	61 95       	neg	r22
    6938:	7f 4f       	sbci	r23, 0xFF	; 255
    693a:	8f 4f       	sbci	r24, 0xFF	; 255
    693c:	9f 4f       	sbci	r25, 0xFF	; 255
    693e:	99 23       	and	r25, r25
    6940:	a9 f0       	breq	.+42     	; 0x696c <__floatsisf+0x40>
    6942:	f9 2f       	mov	r31, r25
    6944:	96 e9       	ldi	r25, 0x96	; 150
    6946:	bb 27       	eor	r27, r27
    6948:	93 95       	inc	r25
    694a:	f6 95       	lsr	r31
    694c:	87 95       	ror	r24
    694e:	77 95       	ror	r23
    6950:	67 95       	ror	r22
    6952:	b7 95       	ror	r27
    6954:	f1 11       	cpse	r31, r1
    6956:	f8 cf       	rjmp	.-16     	; 0x6948 <__floatsisf+0x1c>
    6958:	fa f4       	brpl	.+62     	; 0x6998 <__floatsisf+0x6c>
    695a:	bb 0f       	add	r27, r27
    695c:	11 f4       	brne	.+4      	; 0x6962 <__floatsisf+0x36>
    695e:	60 ff       	sbrs	r22, 0
    6960:	1b c0       	rjmp	.+54     	; 0x6998 <__floatsisf+0x6c>
    6962:	6f 5f       	subi	r22, 0xFF	; 255
    6964:	7f 4f       	sbci	r23, 0xFF	; 255
    6966:	8f 4f       	sbci	r24, 0xFF	; 255
    6968:	9f 4f       	sbci	r25, 0xFF	; 255
    696a:	16 c0       	rjmp	.+44     	; 0x6998 <__floatsisf+0x6c>
    696c:	88 23       	and	r24, r24
    696e:	11 f0       	breq	.+4      	; 0x6974 <__floatsisf+0x48>
    6970:	96 e9       	ldi	r25, 0x96	; 150
    6972:	11 c0       	rjmp	.+34     	; 0x6996 <__floatsisf+0x6a>
    6974:	77 23       	and	r23, r23
    6976:	21 f0       	breq	.+8      	; 0x6980 <__floatsisf+0x54>
    6978:	9e e8       	ldi	r25, 0x8E	; 142
    697a:	87 2f       	mov	r24, r23
    697c:	76 2f       	mov	r23, r22
    697e:	05 c0       	rjmp	.+10     	; 0x698a <__floatsisf+0x5e>
    6980:	66 23       	and	r22, r22
    6982:	71 f0       	breq	.+28     	; 0x69a0 <__floatsisf+0x74>
    6984:	96 e8       	ldi	r25, 0x86	; 134
    6986:	86 2f       	mov	r24, r22
    6988:	70 e0       	ldi	r23, 0x00	; 0
    698a:	60 e0       	ldi	r22, 0x00	; 0
    698c:	2a f0       	brmi	.+10     	; 0x6998 <__floatsisf+0x6c>
    698e:	9a 95       	dec	r25
    6990:	66 0f       	add	r22, r22
    6992:	77 1f       	adc	r23, r23
    6994:	88 1f       	adc	r24, r24
    6996:	da f7       	brpl	.-10     	; 0x698e <__floatsisf+0x62>
    6998:	88 0f       	add	r24, r24
    699a:	96 95       	lsr	r25
    699c:	87 95       	ror	r24
    699e:	97 f9       	bld	r25, 7
    69a0:	08 95       	ret

000069a2 <__fp_cmp>:
    69a2:	99 0f       	add	r25, r25
    69a4:	00 08       	sbc	r0, r0
    69a6:	55 0f       	add	r21, r21
    69a8:	aa 0b       	sbc	r26, r26
    69aa:	e0 e8       	ldi	r30, 0x80	; 128
    69ac:	fe ef       	ldi	r31, 0xFE	; 254
    69ae:	16 16       	cp	r1, r22
    69b0:	17 06       	cpc	r1, r23
    69b2:	e8 07       	cpc	r30, r24
    69b4:	f9 07       	cpc	r31, r25
    69b6:	c0 f0       	brcs	.+48     	; 0x69e8 <__fp_cmp+0x46>
    69b8:	12 16       	cp	r1, r18
    69ba:	13 06       	cpc	r1, r19
    69bc:	e4 07       	cpc	r30, r20
    69be:	f5 07       	cpc	r31, r21
    69c0:	98 f0       	brcs	.+38     	; 0x69e8 <__fp_cmp+0x46>
    69c2:	62 1b       	sub	r22, r18
    69c4:	73 0b       	sbc	r23, r19
    69c6:	84 0b       	sbc	r24, r20
    69c8:	95 0b       	sbc	r25, r21
    69ca:	39 f4       	brne	.+14     	; 0x69da <__fp_cmp+0x38>
    69cc:	0a 26       	eor	r0, r26
    69ce:	61 f0       	breq	.+24     	; 0x69e8 <__fp_cmp+0x46>
    69d0:	23 2b       	or	r18, r19
    69d2:	24 2b       	or	r18, r20
    69d4:	25 2b       	or	r18, r21
    69d6:	21 f4       	brne	.+8      	; 0x69e0 <__fp_cmp+0x3e>
    69d8:	08 95       	ret
    69da:	0a 26       	eor	r0, r26
    69dc:	09 f4       	brne	.+2      	; 0x69e0 <__fp_cmp+0x3e>
    69de:	a1 40       	sbci	r26, 0x01	; 1
    69e0:	a6 95       	lsr	r26
    69e2:	8f ef       	ldi	r24, 0xFF	; 255
    69e4:	81 1d       	adc	r24, r1
    69e6:	81 1d       	adc	r24, r1
    69e8:	08 95       	ret

000069ea <__fp_inf>:
    69ea:	97 f9       	bld	r25, 7
    69ec:	9f 67       	ori	r25, 0x7F	; 127
    69ee:	80 e8       	ldi	r24, 0x80	; 128
    69f0:	70 e0       	ldi	r23, 0x00	; 0
    69f2:	60 e0       	ldi	r22, 0x00	; 0
    69f4:	08 95       	ret

000069f6 <__fp_nan>:
    69f6:	9f ef       	ldi	r25, 0xFF	; 255
    69f8:	80 ec       	ldi	r24, 0xC0	; 192
    69fa:	08 95       	ret

000069fc <__fp_pscA>:
    69fc:	00 24       	eor	r0, r0
    69fe:	0a 94       	dec	r0
    6a00:	16 16       	cp	r1, r22
    6a02:	17 06       	cpc	r1, r23
    6a04:	18 06       	cpc	r1, r24
    6a06:	09 06       	cpc	r0, r25
    6a08:	08 95       	ret

00006a0a <__fp_pscB>:
    6a0a:	00 24       	eor	r0, r0
    6a0c:	0a 94       	dec	r0
    6a0e:	12 16       	cp	r1, r18
    6a10:	13 06       	cpc	r1, r19
    6a12:	14 06       	cpc	r1, r20
    6a14:	05 06       	cpc	r0, r21
    6a16:	08 95       	ret

00006a18 <__fp_round>:
    6a18:	09 2e       	mov	r0, r25
    6a1a:	03 94       	inc	r0
    6a1c:	00 0c       	add	r0, r0
    6a1e:	11 f4       	brne	.+4      	; 0x6a24 <__fp_round+0xc>
    6a20:	88 23       	and	r24, r24
    6a22:	52 f0       	brmi	.+20     	; 0x6a38 <__fp_round+0x20>
    6a24:	bb 0f       	add	r27, r27
    6a26:	40 f4       	brcc	.+16     	; 0x6a38 <__fp_round+0x20>
    6a28:	bf 2b       	or	r27, r31
    6a2a:	11 f4       	brne	.+4      	; 0x6a30 <__fp_round+0x18>
    6a2c:	60 ff       	sbrs	r22, 0
    6a2e:	04 c0       	rjmp	.+8      	; 0x6a38 <__fp_round+0x20>
    6a30:	6f 5f       	subi	r22, 0xFF	; 255
    6a32:	7f 4f       	sbci	r23, 0xFF	; 255
    6a34:	8f 4f       	sbci	r24, 0xFF	; 255
    6a36:	9f 4f       	sbci	r25, 0xFF	; 255
    6a38:	08 95       	ret

00006a3a <__fp_split3>:
    6a3a:	57 fd       	sbrc	r21, 7
    6a3c:	90 58       	subi	r25, 0x80	; 128
    6a3e:	44 0f       	add	r20, r20
    6a40:	55 1f       	adc	r21, r21
    6a42:	59 f0       	breq	.+22     	; 0x6a5a <__fp_splitA+0x10>
    6a44:	5f 3f       	cpi	r21, 0xFF	; 255
    6a46:	71 f0       	breq	.+28     	; 0x6a64 <__fp_splitA+0x1a>
    6a48:	47 95       	ror	r20

00006a4a <__fp_splitA>:
    6a4a:	88 0f       	add	r24, r24
    6a4c:	97 fb       	bst	r25, 7
    6a4e:	99 1f       	adc	r25, r25
    6a50:	61 f0       	breq	.+24     	; 0x6a6a <__fp_splitA+0x20>
    6a52:	9f 3f       	cpi	r25, 0xFF	; 255
    6a54:	79 f0       	breq	.+30     	; 0x6a74 <__fp_splitA+0x2a>
    6a56:	87 95       	ror	r24
    6a58:	08 95       	ret
    6a5a:	12 16       	cp	r1, r18
    6a5c:	13 06       	cpc	r1, r19
    6a5e:	14 06       	cpc	r1, r20
    6a60:	55 1f       	adc	r21, r21
    6a62:	f2 cf       	rjmp	.-28     	; 0x6a48 <__fp_split3+0xe>
    6a64:	46 95       	lsr	r20
    6a66:	f1 df       	rcall	.-30     	; 0x6a4a <__fp_splitA>
    6a68:	08 c0       	rjmp	.+16     	; 0x6a7a <__fp_splitA+0x30>
    6a6a:	16 16       	cp	r1, r22
    6a6c:	17 06       	cpc	r1, r23
    6a6e:	18 06       	cpc	r1, r24
    6a70:	99 1f       	adc	r25, r25
    6a72:	f1 cf       	rjmp	.-30     	; 0x6a56 <__fp_splitA+0xc>
    6a74:	86 95       	lsr	r24
    6a76:	71 05       	cpc	r23, r1
    6a78:	61 05       	cpc	r22, r1
    6a7a:	08 94       	sec
    6a7c:	08 95       	ret

00006a7e <__fp_zero>:
    6a7e:	e8 94       	clt

00006a80 <__fp_szero>:
    6a80:	bb 27       	eor	r27, r27
    6a82:	66 27       	eor	r22, r22
    6a84:	77 27       	eor	r23, r23
    6a86:	cb 01       	movw	r24, r22
    6a88:	97 f9       	bld	r25, 7
    6a8a:	08 95       	ret

00006a8c <__gesf2>:
    6a8c:	8a df       	rcall	.-236    	; 0x69a2 <__fp_cmp>
    6a8e:	08 f4       	brcc	.+2      	; 0x6a92 <__gesf2+0x6>
    6a90:	8f ef       	ldi	r24, 0xFF	; 255
    6a92:	08 95       	ret

00006a94 <__mulsf3>:
    6a94:	0b d0       	rcall	.+22     	; 0x6aac <__mulsf3x>
    6a96:	c0 cf       	rjmp	.-128    	; 0x6a18 <__fp_round>
    6a98:	b1 df       	rcall	.-158    	; 0x69fc <__fp_pscA>
    6a9a:	28 f0       	brcs	.+10     	; 0x6aa6 <__mulsf3+0x12>
    6a9c:	b6 df       	rcall	.-148    	; 0x6a0a <__fp_pscB>
    6a9e:	18 f0       	brcs	.+6      	; 0x6aa6 <__mulsf3+0x12>
    6aa0:	95 23       	and	r25, r21
    6aa2:	09 f0       	breq	.+2      	; 0x6aa6 <__mulsf3+0x12>
    6aa4:	a2 cf       	rjmp	.-188    	; 0x69ea <__fp_inf>
    6aa6:	a7 cf       	rjmp	.-178    	; 0x69f6 <__fp_nan>
    6aa8:	11 24       	eor	r1, r1
    6aaa:	ea cf       	rjmp	.-44     	; 0x6a80 <__fp_szero>

00006aac <__mulsf3x>:
    6aac:	c6 df       	rcall	.-116    	; 0x6a3a <__fp_split3>
    6aae:	a0 f3       	brcs	.-24     	; 0x6a98 <__mulsf3+0x4>

00006ab0 <__mulsf3_pse>:
    6ab0:	95 9f       	mul	r25, r21
    6ab2:	d1 f3       	breq	.-12     	; 0x6aa8 <__mulsf3+0x14>
    6ab4:	95 0f       	add	r25, r21
    6ab6:	50 e0       	ldi	r21, 0x00	; 0
    6ab8:	55 1f       	adc	r21, r21
    6aba:	62 9f       	mul	r22, r18
    6abc:	f0 01       	movw	r30, r0
    6abe:	72 9f       	mul	r23, r18
    6ac0:	bb 27       	eor	r27, r27
    6ac2:	f0 0d       	add	r31, r0
    6ac4:	b1 1d       	adc	r27, r1
    6ac6:	63 9f       	mul	r22, r19
    6ac8:	aa 27       	eor	r26, r26
    6aca:	f0 0d       	add	r31, r0
    6acc:	b1 1d       	adc	r27, r1
    6ace:	aa 1f       	adc	r26, r26
    6ad0:	64 9f       	mul	r22, r20
    6ad2:	66 27       	eor	r22, r22
    6ad4:	b0 0d       	add	r27, r0
    6ad6:	a1 1d       	adc	r26, r1
    6ad8:	66 1f       	adc	r22, r22
    6ada:	82 9f       	mul	r24, r18
    6adc:	22 27       	eor	r18, r18
    6ade:	b0 0d       	add	r27, r0
    6ae0:	a1 1d       	adc	r26, r1
    6ae2:	62 1f       	adc	r22, r18
    6ae4:	73 9f       	mul	r23, r19
    6ae6:	b0 0d       	add	r27, r0
    6ae8:	a1 1d       	adc	r26, r1
    6aea:	62 1f       	adc	r22, r18
    6aec:	83 9f       	mul	r24, r19
    6aee:	a0 0d       	add	r26, r0
    6af0:	61 1d       	adc	r22, r1
    6af2:	22 1f       	adc	r18, r18
    6af4:	74 9f       	mul	r23, r20
    6af6:	33 27       	eor	r19, r19
    6af8:	a0 0d       	add	r26, r0
    6afa:	61 1d       	adc	r22, r1
    6afc:	23 1f       	adc	r18, r19
    6afe:	84 9f       	mul	r24, r20
    6b00:	60 0d       	add	r22, r0
    6b02:	21 1d       	adc	r18, r1
    6b04:	82 2f       	mov	r24, r18
    6b06:	76 2f       	mov	r23, r22
    6b08:	6a 2f       	mov	r22, r26
    6b0a:	11 24       	eor	r1, r1
    6b0c:	9f 57       	subi	r25, 0x7F	; 127
    6b0e:	50 40       	sbci	r21, 0x00	; 0
    6b10:	8a f0       	brmi	.+34     	; 0x6b34 <__mulsf3_pse+0x84>
    6b12:	e1 f0       	breq	.+56     	; 0x6b4c <__mulsf3_pse+0x9c>
    6b14:	88 23       	and	r24, r24
    6b16:	4a f0       	brmi	.+18     	; 0x6b2a <__mulsf3_pse+0x7a>
    6b18:	ee 0f       	add	r30, r30
    6b1a:	ff 1f       	adc	r31, r31
    6b1c:	bb 1f       	adc	r27, r27
    6b1e:	66 1f       	adc	r22, r22
    6b20:	77 1f       	adc	r23, r23
    6b22:	88 1f       	adc	r24, r24
    6b24:	91 50       	subi	r25, 0x01	; 1
    6b26:	50 40       	sbci	r21, 0x00	; 0
    6b28:	a9 f7       	brne	.-22     	; 0x6b14 <__mulsf3_pse+0x64>
    6b2a:	9e 3f       	cpi	r25, 0xFE	; 254
    6b2c:	51 05       	cpc	r21, r1
    6b2e:	70 f0       	brcs	.+28     	; 0x6b4c <__mulsf3_pse+0x9c>
    6b30:	5c cf       	rjmp	.-328    	; 0x69ea <__fp_inf>
    6b32:	a6 cf       	rjmp	.-180    	; 0x6a80 <__fp_szero>
    6b34:	5f 3f       	cpi	r21, 0xFF	; 255
    6b36:	ec f3       	brlt	.-6      	; 0x6b32 <__mulsf3_pse+0x82>
    6b38:	98 3e       	cpi	r25, 0xE8	; 232
    6b3a:	dc f3       	brlt	.-10     	; 0x6b32 <__mulsf3_pse+0x82>
    6b3c:	86 95       	lsr	r24
    6b3e:	77 95       	ror	r23
    6b40:	67 95       	ror	r22
    6b42:	b7 95       	ror	r27
    6b44:	f7 95       	ror	r31
    6b46:	e7 95       	ror	r30
    6b48:	9f 5f       	subi	r25, 0xFF	; 255
    6b4a:	c1 f7       	brne	.-16     	; 0x6b3c <__mulsf3_pse+0x8c>
    6b4c:	fe 2b       	or	r31, r30
    6b4e:	88 0f       	add	r24, r24
    6b50:	91 1d       	adc	r25, r1
    6b52:	96 95       	lsr	r25
    6b54:	87 95       	ror	r24
    6b56:	97 f9       	bld	r25, 7
    6b58:	08 95       	ret

00006b5a <calloc>:
    6b5a:	0f 93       	push	r16
    6b5c:	1f 93       	push	r17
    6b5e:	cf 93       	push	r28
    6b60:	df 93       	push	r29
    6b62:	86 9f       	mul	r24, r22
    6b64:	80 01       	movw	r16, r0
    6b66:	87 9f       	mul	r24, r23
    6b68:	10 0d       	add	r17, r0
    6b6a:	96 9f       	mul	r25, r22
    6b6c:	10 0d       	add	r17, r0
    6b6e:	11 24       	eor	r1, r1
    6b70:	c8 01       	movw	r24, r16
    6b72:	0d d0       	rcall	.+26     	; 0x6b8e <malloc>
    6b74:	ec 01       	movw	r28, r24
    6b76:	00 97       	sbiw	r24, 0x00	; 0
    6b78:	21 f0       	breq	.+8      	; 0x6b82 <calloc+0x28>
    6b7a:	a8 01       	movw	r20, r16
    6b7c:	60 e0       	ldi	r22, 0x00	; 0
    6b7e:	70 e0       	ldi	r23, 0x00	; 0
    6b80:	34 d1       	rcall	.+616    	; 0x6dea <memset>
    6b82:	ce 01       	movw	r24, r28
    6b84:	df 91       	pop	r29
    6b86:	cf 91       	pop	r28
    6b88:	1f 91       	pop	r17
    6b8a:	0f 91       	pop	r16
    6b8c:	08 95       	ret

00006b8e <malloc>:
    6b8e:	0f 93       	push	r16
    6b90:	1f 93       	push	r17
    6b92:	cf 93       	push	r28
    6b94:	df 93       	push	r29
    6b96:	82 30       	cpi	r24, 0x02	; 2
    6b98:	91 05       	cpc	r25, r1
    6b9a:	10 f4       	brcc	.+4      	; 0x6ba0 <malloc+0x12>
    6b9c:	82 e0       	ldi	r24, 0x02	; 2
    6b9e:	90 e0       	ldi	r25, 0x00	; 0
    6ba0:	e0 91 b4 0a 	lds	r30, 0x0AB4	; 0x800ab4 <__flp>
    6ba4:	f0 91 b5 0a 	lds	r31, 0x0AB5	; 0x800ab5 <__flp+0x1>
    6ba8:	20 e0       	ldi	r18, 0x00	; 0
    6baa:	30 e0       	ldi	r19, 0x00	; 0
    6bac:	a0 e0       	ldi	r26, 0x00	; 0
    6bae:	b0 e0       	ldi	r27, 0x00	; 0
    6bb0:	30 97       	sbiw	r30, 0x00	; 0
    6bb2:	19 f1       	breq	.+70     	; 0x6bfa <malloc+0x6c>
    6bb4:	40 81       	ld	r20, Z
    6bb6:	51 81       	ldd	r21, Z+1	; 0x01
    6bb8:	02 81       	ldd	r16, Z+2	; 0x02
    6bba:	13 81       	ldd	r17, Z+3	; 0x03
    6bbc:	48 17       	cp	r20, r24
    6bbe:	59 07       	cpc	r21, r25
    6bc0:	c8 f0       	brcs	.+50     	; 0x6bf4 <malloc+0x66>
    6bc2:	84 17       	cp	r24, r20
    6bc4:	95 07       	cpc	r25, r21
    6bc6:	69 f4       	brne	.+26     	; 0x6be2 <malloc+0x54>
    6bc8:	10 97       	sbiw	r26, 0x00	; 0
    6bca:	31 f0       	breq	.+12     	; 0x6bd8 <malloc+0x4a>
    6bcc:	12 96       	adiw	r26, 0x02	; 2
    6bce:	0c 93       	st	X, r16
    6bd0:	12 97       	sbiw	r26, 0x02	; 2
    6bd2:	13 96       	adiw	r26, 0x03	; 3
    6bd4:	1c 93       	st	X, r17
    6bd6:	27 c0       	rjmp	.+78     	; 0x6c26 <malloc+0x98>
    6bd8:	00 93 b4 0a 	sts	0x0AB4, r16	; 0x800ab4 <__flp>
    6bdc:	10 93 b5 0a 	sts	0x0AB5, r17	; 0x800ab5 <__flp+0x1>
    6be0:	22 c0       	rjmp	.+68     	; 0x6c26 <malloc+0x98>
    6be2:	21 15       	cp	r18, r1
    6be4:	31 05       	cpc	r19, r1
    6be6:	19 f0       	breq	.+6      	; 0x6bee <malloc+0x60>
    6be8:	42 17       	cp	r20, r18
    6bea:	53 07       	cpc	r21, r19
    6bec:	18 f4       	brcc	.+6      	; 0x6bf4 <malloc+0x66>
    6bee:	9a 01       	movw	r18, r20
    6bf0:	bd 01       	movw	r22, r26
    6bf2:	ef 01       	movw	r28, r30
    6bf4:	df 01       	movw	r26, r30
    6bf6:	f8 01       	movw	r30, r16
    6bf8:	db cf       	rjmp	.-74     	; 0x6bb0 <malloc+0x22>
    6bfa:	21 15       	cp	r18, r1
    6bfc:	31 05       	cpc	r19, r1
    6bfe:	f9 f0       	breq	.+62     	; 0x6c3e <malloc+0xb0>
    6c00:	28 1b       	sub	r18, r24
    6c02:	39 0b       	sbc	r19, r25
    6c04:	24 30       	cpi	r18, 0x04	; 4
    6c06:	31 05       	cpc	r19, r1
    6c08:	80 f4       	brcc	.+32     	; 0x6c2a <malloc+0x9c>
    6c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    6c0c:	9b 81       	ldd	r25, Y+3	; 0x03
    6c0e:	61 15       	cp	r22, r1
    6c10:	71 05       	cpc	r23, r1
    6c12:	21 f0       	breq	.+8      	; 0x6c1c <malloc+0x8e>
    6c14:	fb 01       	movw	r30, r22
    6c16:	93 83       	std	Z+3, r25	; 0x03
    6c18:	82 83       	std	Z+2, r24	; 0x02
    6c1a:	04 c0       	rjmp	.+8      	; 0x6c24 <malloc+0x96>
    6c1c:	90 93 b5 0a 	sts	0x0AB5, r25	; 0x800ab5 <__flp+0x1>
    6c20:	80 93 b4 0a 	sts	0x0AB4, r24	; 0x800ab4 <__flp>
    6c24:	fe 01       	movw	r30, r28
    6c26:	32 96       	adiw	r30, 0x02	; 2
    6c28:	44 c0       	rjmp	.+136    	; 0x6cb2 <malloc+0x124>
    6c2a:	fe 01       	movw	r30, r28
    6c2c:	e2 0f       	add	r30, r18
    6c2e:	f3 1f       	adc	r31, r19
    6c30:	81 93       	st	Z+, r24
    6c32:	91 93       	st	Z+, r25
    6c34:	22 50       	subi	r18, 0x02	; 2
    6c36:	31 09       	sbc	r19, r1
    6c38:	39 83       	std	Y+1, r19	; 0x01
    6c3a:	28 83       	st	Y, r18
    6c3c:	3a c0       	rjmp	.+116    	; 0x6cb2 <malloc+0x124>
    6c3e:	20 91 b2 0a 	lds	r18, 0x0AB2	; 0x800ab2 <__brkval>
    6c42:	30 91 b3 0a 	lds	r19, 0x0AB3	; 0x800ab3 <__brkval+0x1>
    6c46:	23 2b       	or	r18, r19
    6c48:	41 f4       	brne	.+16     	; 0x6c5a <malloc+0xcc>
    6c4a:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    6c4e:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    6c52:	30 93 b3 0a 	sts	0x0AB3, r19	; 0x800ab3 <__brkval+0x1>
    6c56:	20 93 b2 0a 	sts	0x0AB2, r18	; 0x800ab2 <__brkval>
    6c5a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    6c5e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    6c62:	21 15       	cp	r18, r1
    6c64:	31 05       	cpc	r19, r1
    6c66:	41 f4       	brne	.+16     	; 0x6c78 <malloc+0xea>
    6c68:	2d b7       	in	r18, 0x3d	; 61
    6c6a:	3e b7       	in	r19, 0x3e	; 62
    6c6c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    6c70:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    6c74:	24 1b       	sub	r18, r20
    6c76:	35 0b       	sbc	r19, r21
    6c78:	e0 91 b2 0a 	lds	r30, 0x0AB2	; 0x800ab2 <__brkval>
    6c7c:	f0 91 b3 0a 	lds	r31, 0x0AB3	; 0x800ab3 <__brkval+0x1>
    6c80:	e2 17       	cp	r30, r18
    6c82:	f3 07       	cpc	r31, r19
    6c84:	a0 f4       	brcc	.+40     	; 0x6cae <malloc+0x120>
    6c86:	2e 1b       	sub	r18, r30
    6c88:	3f 0b       	sbc	r19, r31
    6c8a:	28 17       	cp	r18, r24
    6c8c:	39 07       	cpc	r19, r25
    6c8e:	78 f0       	brcs	.+30     	; 0x6cae <malloc+0x120>
    6c90:	ac 01       	movw	r20, r24
    6c92:	4e 5f       	subi	r20, 0xFE	; 254
    6c94:	5f 4f       	sbci	r21, 0xFF	; 255
    6c96:	24 17       	cp	r18, r20
    6c98:	35 07       	cpc	r19, r21
    6c9a:	48 f0       	brcs	.+18     	; 0x6cae <malloc+0x120>
    6c9c:	4e 0f       	add	r20, r30
    6c9e:	5f 1f       	adc	r21, r31
    6ca0:	50 93 b3 0a 	sts	0x0AB3, r21	; 0x800ab3 <__brkval+0x1>
    6ca4:	40 93 b2 0a 	sts	0x0AB2, r20	; 0x800ab2 <__brkval>
    6ca8:	81 93       	st	Z+, r24
    6caa:	91 93       	st	Z+, r25
    6cac:	02 c0       	rjmp	.+4      	; 0x6cb2 <malloc+0x124>
    6cae:	e0 e0       	ldi	r30, 0x00	; 0
    6cb0:	f0 e0       	ldi	r31, 0x00	; 0
    6cb2:	cf 01       	movw	r24, r30
    6cb4:	df 91       	pop	r29
    6cb6:	cf 91       	pop	r28
    6cb8:	1f 91       	pop	r17
    6cba:	0f 91       	pop	r16
    6cbc:	08 95       	ret

00006cbe <free>:
    6cbe:	cf 93       	push	r28
    6cc0:	df 93       	push	r29
    6cc2:	00 97       	sbiw	r24, 0x00	; 0
    6cc4:	09 f4       	brne	.+2      	; 0x6cc8 <free+0xa>
    6cc6:	81 c0       	rjmp	.+258    	; 0x6dca <free+0x10c>
    6cc8:	fc 01       	movw	r30, r24
    6cca:	32 97       	sbiw	r30, 0x02	; 2
    6ccc:	13 82       	std	Z+3, r1	; 0x03
    6cce:	12 82       	std	Z+2, r1	; 0x02
    6cd0:	a0 91 b4 0a 	lds	r26, 0x0AB4	; 0x800ab4 <__flp>
    6cd4:	b0 91 b5 0a 	lds	r27, 0x0AB5	; 0x800ab5 <__flp+0x1>
    6cd8:	10 97       	sbiw	r26, 0x00	; 0
    6cda:	81 f4       	brne	.+32     	; 0x6cfc <free+0x3e>
    6cdc:	20 81       	ld	r18, Z
    6cde:	31 81       	ldd	r19, Z+1	; 0x01
    6ce0:	82 0f       	add	r24, r18
    6ce2:	93 1f       	adc	r25, r19
    6ce4:	20 91 b2 0a 	lds	r18, 0x0AB2	; 0x800ab2 <__brkval>
    6ce8:	30 91 b3 0a 	lds	r19, 0x0AB3	; 0x800ab3 <__brkval+0x1>
    6cec:	28 17       	cp	r18, r24
    6cee:	39 07       	cpc	r19, r25
    6cf0:	51 f5       	brne	.+84     	; 0x6d46 <free+0x88>
    6cf2:	f0 93 b3 0a 	sts	0x0AB3, r31	; 0x800ab3 <__brkval+0x1>
    6cf6:	e0 93 b2 0a 	sts	0x0AB2, r30	; 0x800ab2 <__brkval>
    6cfa:	67 c0       	rjmp	.+206    	; 0x6dca <free+0x10c>
    6cfc:	ed 01       	movw	r28, r26
    6cfe:	20 e0       	ldi	r18, 0x00	; 0
    6d00:	30 e0       	ldi	r19, 0x00	; 0
    6d02:	ce 17       	cp	r28, r30
    6d04:	df 07       	cpc	r29, r31
    6d06:	40 f4       	brcc	.+16     	; 0x6d18 <free+0x5a>
    6d08:	4a 81       	ldd	r20, Y+2	; 0x02
    6d0a:	5b 81       	ldd	r21, Y+3	; 0x03
    6d0c:	9e 01       	movw	r18, r28
    6d0e:	41 15       	cp	r20, r1
    6d10:	51 05       	cpc	r21, r1
    6d12:	f1 f0       	breq	.+60     	; 0x6d50 <free+0x92>
    6d14:	ea 01       	movw	r28, r20
    6d16:	f5 cf       	rjmp	.-22     	; 0x6d02 <free+0x44>
    6d18:	d3 83       	std	Z+3, r29	; 0x03
    6d1a:	c2 83       	std	Z+2, r28	; 0x02
    6d1c:	40 81       	ld	r20, Z
    6d1e:	51 81       	ldd	r21, Z+1	; 0x01
    6d20:	84 0f       	add	r24, r20
    6d22:	95 1f       	adc	r25, r21
    6d24:	c8 17       	cp	r28, r24
    6d26:	d9 07       	cpc	r29, r25
    6d28:	59 f4       	brne	.+22     	; 0x6d40 <free+0x82>
    6d2a:	88 81       	ld	r24, Y
    6d2c:	99 81       	ldd	r25, Y+1	; 0x01
    6d2e:	84 0f       	add	r24, r20
    6d30:	95 1f       	adc	r25, r21
    6d32:	02 96       	adiw	r24, 0x02	; 2
    6d34:	91 83       	std	Z+1, r25	; 0x01
    6d36:	80 83       	st	Z, r24
    6d38:	8a 81       	ldd	r24, Y+2	; 0x02
    6d3a:	9b 81       	ldd	r25, Y+3	; 0x03
    6d3c:	93 83       	std	Z+3, r25	; 0x03
    6d3e:	82 83       	std	Z+2, r24	; 0x02
    6d40:	21 15       	cp	r18, r1
    6d42:	31 05       	cpc	r19, r1
    6d44:	29 f4       	brne	.+10     	; 0x6d50 <free+0x92>
    6d46:	f0 93 b5 0a 	sts	0x0AB5, r31	; 0x800ab5 <__flp+0x1>
    6d4a:	e0 93 b4 0a 	sts	0x0AB4, r30	; 0x800ab4 <__flp>
    6d4e:	3d c0       	rjmp	.+122    	; 0x6dca <free+0x10c>
    6d50:	e9 01       	movw	r28, r18
    6d52:	fb 83       	std	Y+3, r31	; 0x03
    6d54:	ea 83       	std	Y+2, r30	; 0x02
    6d56:	49 91       	ld	r20, Y+
    6d58:	59 91       	ld	r21, Y+
    6d5a:	c4 0f       	add	r28, r20
    6d5c:	d5 1f       	adc	r29, r21
    6d5e:	ec 17       	cp	r30, r28
    6d60:	fd 07       	cpc	r31, r29
    6d62:	61 f4       	brne	.+24     	; 0x6d7c <free+0xbe>
    6d64:	80 81       	ld	r24, Z
    6d66:	91 81       	ldd	r25, Z+1	; 0x01
    6d68:	84 0f       	add	r24, r20
    6d6a:	95 1f       	adc	r25, r21
    6d6c:	02 96       	adiw	r24, 0x02	; 2
    6d6e:	e9 01       	movw	r28, r18
    6d70:	99 83       	std	Y+1, r25	; 0x01
    6d72:	88 83       	st	Y, r24
    6d74:	82 81       	ldd	r24, Z+2	; 0x02
    6d76:	93 81       	ldd	r25, Z+3	; 0x03
    6d78:	9b 83       	std	Y+3, r25	; 0x03
    6d7a:	8a 83       	std	Y+2, r24	; 0x02
    6d7c:	e0 e0       	ldi	r30, 0x00	; 0
    6d7e:	f0 e0       	ldi	r31, 0x00	; 0
    6d80:	12 96       	adiw	r26, 0x02	; 2
    6d82:	8d 91       	ld	r24, X+
    6d84:	9c 91       	ld	r25, X
    6d86:	13 97       	sbiw	r26, 0x03	; 3
    6d88:	00 97       	sbiw	r24, 0x00	; 0
    6d8a:	19 f0       	breq	.+6      	; 0x6d92 <free+0xd4>
    6d8c:	fd 01       	movw	r30, r26
    6d8e:	dc 01       	movw	r26, r24
    6d90:	f7 cf       	rjmp	.-18     	; 0x6d80 <free+0xc2>
    6d92:	8d 91       	ld	r24, X+
    6d94:	9c 91       	ld	r25, X
    6d96:	11 97       	sbiw	r26, 0x01	; 1
    6d98:	9d 01       	movw	r18, r26
    6d9a:	2e 5f       	subi	r18, 0xFE	; 254
    6d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    6d9e:	82 0f       	add	r24, r18
    6da0:	93 1f       	adc	r25, r19
    6da2:	20 91 b2 0a 	lds	r18, 0x0AB2	; 0x800ab2 <__brkval>
    6da6:	30 91 b3 0a 	lds	r19, 0x0AB3	; 0x800ab3 <__brkval+0x1>
    6daa:	28 17       	cp	r18, r24
    6dac:	39 07       	cpc	r19, r25
    6dae:	69 f4       	brne	.+26     	; 0x6dca <free+0x10c>
    6db0:	30 97       	sbiw	r30, 0x00	; 0
    6db2:	29 f4       	brne	.+10     	; 0x6dbe <free+0x100>
    6db4:	10 92 b5 0a 	sts	0x0AB5, r1	; 0x800ab5 <__flp+0x1>
    6db8:	10 92 b4 0a 	sts	0x0AB4, r1	; 0x800ab4 <__flp>
    6dbc:	02 c0       	rjmp	.+4      	; 0x6dc2 <free+0x104>
    6dbe:	13 82       	std	Z+3, r1	; 0x03
    6dc0:	12 82       	std	Z+2, r1	; 0x02
    6dc2:	b0 93 b3 0a 	sts	0x0AB3, r27	; 0x800ab3 <__brkval+0x1>
    6dc6:	a0 93 b2 0a 	sts	0x0AB2, r26	; 0x800ab2 <__brkval>
    6dca:	df 91       	pop	r29
    6dcc:	cf 91       	pop	r28
    6dce:	08 95       	ret

00006dd0 <abort>:
    6dd0:	81 e0       	ldi	r24, 0x01	; 1
    6dd2:	90 e0       	ldi	r25, 0x00	; 0
    6dd4:	f8 94       	cli
    6dd6:	58 c3       	rjmp	.+1712   	; 0x7488 <_exit>

00006dd8 <memcpy>:
    6dd8:	fb 01       	movw	r30, r22
    6dda:	dc 01       	movw	r26, r24
    6ddc:	02 c0       	rjmp	.+4      	; 0x6de2 <memcpy+0xa>
    6dde:	01 90       	ld	r0, Z+
    6de0:	0d 92       	st	X+, r0
    6de2:	41 50       	subi	r20, 0x01	; 1
    6de4:	50 40       	sbci	r21, 0x00	; 0
    6de6:	d8 f7       	brcc	.-10     	; 0x6dde <memcpy+0x6>
    6de8:	08 95       	ret

00006dea <memset>:
    6dea:	dc 01       	movw	r26, r24
    6dec:	01 c0       	rjmp	.+2      	; 0x6df0 <memset+0x6>
    6dee:	6d 93       	st	X+, r22
    6df0:	41 50       	subi	r20, 0x01	; 1
    6df2:	50 40       	sbci	r21, 0x00	; 0
    6df4:	e0 f7       	brcc	.-8      	; 0x6dee <memset+0x4>
    6df6:	08 95       	ret

00006df8 <strcat>:
    6df8:	fb 01       	movw	r30, r22
    6dfa:	dc 01       	movw	r26, r24
    6dfc:	0d 90       	ld	r0, X+
    6dfe:	00 20       	and	r0, r0
    6e00:	e9 f7       	brne	.-6      	; 0x6dfc <strcat+0x4>
    6e02:	11 97       	sbiw	r26, 0x01	; 1
    6e04:	01 90       	ld	r0, Z+
    6e06:	0d 92       	st	X+, r0
    6e08:	00 20       	and	r0, r0
    6e0a:	e1 f7       	brne	.-8      	; 0x6e04 <strcat+0xc>
    6e0c:	08 95       	ret

00006e0e <strcpy>:
    6e0e:	fb 01       	movw	r30, r22
    6e10:	dc 01       	movw	r26, r24
    6e12:	01 90       	ld	r0, Z+
    6e14:	0d 92       	st	X+, r0
    6e16:	00 20       	and	r0, r0
    6e18:	e1 f7       	brne	.-8      	; 0x6e12 <strcpy+0x4>
    6e1a:	08 95       	ret

00006e1c <strncasecmp>:
    6e1c:	fb 01       	movw	r30, r22
    6e1e:	dc 01       	movw	r26, r24
    6e20:	41 50       	subi	r20, 0x01	; 1
    6e22:	50 40       	sbci	r21, 0x00	; 0
    6e24:	88 f0       	brcs	.+34     	; 0x6e48 <strncasecmp+0x2c>
    6e26:	8d 91       	ld	r24, X+
    6e28:	81 34       	cpi	r24, 0x41	; 65
    6e2a:	1c f0       	brlt	.+6      	; 0x6e32 <strncasecmp+0x16>
    6e2c:	8b 35       	cpi	r24, 0x5B	; 91
    6e2e:	0c f4       	brge	.+2      	; 0x6e32 <strncasecmp+0x16>
    6e30:	80 5e       	subi	r24, 0xE0	; 224
    6e32:	61 91       	ld	r22, Z+
    6e34:	61 34       	cpi	r22, 0x41	; 65
    6e36:	1c f0       	brlt	.+6      	; 0x6e3e <strncasecmp+0x22>
    6e38:	6b 35       	cpi	r22, 0x5B	; 91
    6e3a:	0c f4       	brge	.+2      	; 0x6e3e <strncasecmp+0x22>
    6e3c:	60 5e       	subi	r22, 0xE0	; 224
    6e3e:	86 1b       	sub	r24, r22
    6e40:	61 11       	cpse	r22, r1
    6e42:	71 f3       	breq	.-36     	; 0x6e20 <strncasecmp+0x4>
    6e44:	99 0b       	sbc	r25, r25
    6e46:	08 95       	ret
    6e48:	88 1b       	sub	r24, r24
    6e4a:	fc cf       	rjmp	.-8      	; 0x6e44 <strncasecmp+0x28>

00006e4c <printf>:
    6e4c:	cf 93       	push	r28
    6e4e:	df 93       	push	r29
    6e50:	cd b7       	in	r28, 0x3d	; 61
    6e52:	de b7       	in	r29, 0x3e	; 62
    6e54:	ae 01       	movw	r20, r28
    6e56:	4a 5f       	subi	r20, 0xFA	; 250
    6e58:	5f 4f       	sbci	r21, 0xFF	; 255
    6e5a:	fa 01       	movw	r30, r20
    6e5c:	61 91       	ld	r22, Z+
    6e5e:	71 91       	ld	r23, Z+
    6e60:	af 01       	movw	r20, r30
    6e62:	80 91 b8 0a 	lds	r24, 0x0AB8	; 0x800ab8 <__iob+0x2>
    6e66:	90 91 b9 0a 	lds	r25, 0x0AB9	; 0x800ab9 <__iob+0x3>
    6e6a:	61 d0       	rcall	.+194    	; 0x6f2e <vfprintf>
    6e6c:	df 91       	pop	r29
    6e6e:	cf 91       	pop	r28
    6e70:	08 95       	ret

00006e72 <puts>:
    6e72:	0f 93       	push	r16
    6e74:	1f 93       	push	r17
    6e76:	cf 93       	push	r28
    6e78:	df 93       	push	r29
    6e7a:	e0 91 b8 0a 	lds	r30, 0x0AB8	; 0x800ab8 <__iob+0x2>
    6e7e:	f0 91 b9 0a 	lds	r31, 0x0AB9	; 0x800ab9 <__iob+0x3>
    6e82:	23 81       	ldd	r18, Z+3	; 0x03
    6e84:	21 ff       	sbrs	r18, 1
    6e86:	1b c0       	rjmp	.+54     	; 0x6ebe <puts+0x4c>
    6e88:	8c 01       	movw	r16, r24
    6e8a:	d0 e0       	ldi	r29, 0x00	; 0
    6e8c:	c0 e0       	ldi	r28, 0x00	; 0
    6e8e:	f8 01       	movw	r30, r16
    6e90:	81 91       	ld	r24, Z+
    6e92:	8f 01       	movw	r16, r30
    6e94:	60 91 b8 0a 	lds	r22, 0x0AB8	; 0x800ab8 <__iob+0x2>
    6e98:	70 91 b9 0a 	lds	r23, 0x0AB9	; 0x800ab9 <__iob+0x3>
    6e9c:	db 01       	movw	r26, r22
    6e9e:	18 96       	adiw	r26, 0x08	; 8
    6ea0:	ed 91       	ld	r30, X+
    6ea2:	fc 91       	ld	r31, X
    6ea4:	19 97       	sbiw	r26, 0x09	; 9
    6ea6:	88 23       	and	r24, r24
    6ea8:	31 f0       	breq	.+12     	; 0x6eb6 <puts+0x44>
    6eaa:	19 95       	eicall
    6eac:	89 2b       	or	r24, r25
    6eae:	79 f3       	breq	.-34     	; 0x6e8e <puts+0x1c>
    6eb0:	df ef       	ldi	r29, 0xFF	; 255
    6eb2:	cf ef       	ldi	r28, 0xFF	; 255
    6eb4:	ec cf       	rjmp	.-40     	; 0x6e8e <puts+0x1c>
    6eb6:	8a e0       	ldi	r24, 0x0A	; 10
    6eb8:	19 95       	eicall
    6eba:	89 2b       	or	r24, r25
    6ebc:	19 f0       	breq	.+6      	; 0x6ec4 <puts+0x52>
    6ebe:	8f ef       	ldi	r24, 0xFF	; 255
    6ec0:	9f ef       	ldi	r25, 0xFF	; 255
    6ec2:	02 c0       	rjmp	.+4      	; 0x6ec8 <puts+0x56>
    6ec4:	8d 2f       	mov	r24, r29
    6ec6:	9c 2f       	mov	r25, r28
    6ec8:	df 91       	pop	r29
    6eca:	cf 91       	pop	r28
    6ecc:	1f 91       	pop	r17
    6ece:	0f 91       	pop	r16
    6ed0:	08 95       	ret

00006ed2 <sprintf>:
    6ed2:	0f 93       	push	r16
    6ed4:	1f 93       	push	r17
    6ed6:	cf 93       	push	r28
    6ed8:	df 93       	push	r29
    6eda:	cd b7       	in	r28, 0x3d	; 61
    6edc:	de b7       	in	r29, 0x3e	; 62
    6ede:	2e 97       	sbiw	r28, 0x0e	; 14
    6ee0:	0f b6       	in	r0, 0x3f	; 63
    6ee2:	f8 94       	cli
    6ee4:	de bf       	out	0x3e, r29	; 62
    6ee6:	0f be       	out	0x3f, r0	; 63
    6ee8:	cd bf       	out	0x3d, r28	; 61
    6eea:	0e 89       	ldd	r16, Y+22	; 0x16
    6eec:	1f 89       	ldd	r17, Y+23	; 0x17
    6eee:	86 e0       	ldi	r24, 0x06	; 6
    6ef0:	8c 83       	std	Y+4, r24	; 0x04
    6ef2:	1a 83       	std	Y+2, r17	; 0x02
    6ef4:	09 83       	std	Y+1, r16	; 0x01
    6ef6:	8f ef       	ldi	r24, 0xFF	; 255
    6ef8:	9f e7       	ldi	r25, 0x7F	; 127
    6efa:	9e 83       	std	Y+6, r25	; 0x06
    6efc:	8d 83       	std	Y+5, r24	; 0x05
    6efe:	ae 01       	movw	r20, r28
    6f00:	46 5e       	subi	r20, 0xE6	; 230
    6f02:	5f 4f       	sbci	r21, 0xFF	; 255
    6f04:	68 8d       	ldd	r22, Y+24	; 0x18
    6f06:	79 8d       	ldd	r23, Y+25	; 0x19
    6f08:	ce 01       	movw	r24, r28
    6f0a:	01 96       	adiw	r24, 0x01	; 1
    6f0c:	10 d0       	rcall	.+32     	; 0x6f2e <vfprintf>
    6f0e:	ef 81       	ldd	r30, Y+7	; 0x07
    6f10:	f8 85       	ldd	r31, Y+8	; 0x08
    6f12:	e0 0f       	add	r30, r16
    6f14:	f1 1f       	adc	r31, r17
    6f16:	10 82       	st	Z, r1
    6f18:	2e 96       	adiw	r28, 0x0e	; 14
    6f1a:	0f b6       	in	r0, 0x3f	; 63
    6f1c:	f8 94       	cli
    6f1e:	de bf       	out	0x3e, r29	; 62
    6f20:	0f be       	out	0x3f, r0	; 63
    6f22:	cd bf       	out	0x3d, r28	; 61
    6f24:	df 91       	pop	r29
    6f26:	cf 91       	pop	r28
    6f28:	1f 91       	pop	r17
    6f2a:	0f 91       	pop	r16
    6f2c:	08 95       	ret

00006f2e <vfprintf>:
    6f2e:	2f 92       	push	r2
    6f30:	3f 92       	push	r3
    6f32:	4f 92       	push	r4
    6f34:	5f 92       	push	r5
    6f36:	6f 92       	push	r6
    6f38:	7f 92       	push	r7
    6f3a:	8f 92       	push	r8
    6f3c:	9f 92       	push	r9
    6f3e:	af 92       	push	r10
    6f40:	bf 92       	push	r11
    6f42:	cf 92       	push	r12
    6f44:	df 92       	push	r13
    6f46:	ef 92       	push	r14
    6f48:	ff 92       	push	r15
    6f4a:	0f 93       	push	r16
    6f4c:	1f 93       	push	r17
    6f4e:	cf 93       	push	r28
    6f50:	df 93       	push	r29
    6f52:	cd b7       	in	r28, 0x3d	; 61
    6f54:	de b7       	in	r29, 0x3e	; 62
    6f56:	2b 97       	sbiw	r28, 0x0b	; 11
    6f58:	0f b6       	in	r0, 0x3f	; 63
    6f5a:	f8 94       	cli
    6f5c:	de bf       	out	0x3e, r29	; 62
    6f5e:	0f be       	out	0x3f, r0	; 63
    6f60:	cd bf       	out	0x3d, r28	; 61
    6f62:	6c 01       	movw	r12, r24
    6f64:	7b 01       	movw	r14, r22
    6f66:	8a 01       	movw	r16, r20
    6f68:	fc 01       	movw	r30, r24
    6f6a:	17 82       	std	Z+7, r1	; 0x07
    6f6c:	16 82       	std	Z+6, r1	; 0x06
    6f6e:	83 81       	ldd	r24, Z+3	; 0x03
    6f70:	81 ff       	sbrs	r24, 1
    6f72:	bf c1       	rjmp	.+894    	; 0x72f2 <vfprintf+0x3c4>
    6f74:	ce 01       	movw	r24, r28
    6f76:	01 96       	adiw	r24, 0x01	; 1
    6f78:	3c 01       	movw	r6, r24
    6f7a:	f6 01       	movw	r30, r12
    6f7c:	93 81       	ldd	r25, Z+3	; 0x03
    6f7e:	f7 01       	movw	r30, r14
    6f80:	93 fd       	sbrc	r25, 3
    6f82:	85 91       	lpm	r24, Z+
    6f84:	93 ff       	sbrs	r25, 3
    6f86:	81 91       	ld	r24, Z+
    6f88:	7f 01       	movw	r14, r30
    6f8a:	88 23       	and	r24, r24
    6f8c:	09 f4       	brne	.+2      	; 0x6f90 <vfprintf+0x62>
    6f8e:	ad c1       	rjmp	.+858    	; 0x72ea <vfprintf+0x3bc>
    6f90:	85 32       	cpi	r24, 0x25	; 37
    6f92:	39 f4       	brne	.+14     	; 0x6fa2 <vfprintf+0x74>
    6f94:	93 fd       	sbrc	r25, 3
    6f96:	85 91       	lpm	r24, Z+
    6f98:	93 ff       	sbrs	r25, 3
    6f9a:	81 91       	ld	r24, Z+
    6f9c:	7f 01       	movw	r14, r30
    6f9e:	85 32       	cpi	r24, 0x25	; 37
    6fa0:	21 f4       	brne	.+8      	; 0x6faa <vfprintf+0x7c>
    6fa2:	b6 01       	movw	r22, r12
    6fa4:	90 e0       	ldi	r25, 0x00	; 0
    6fa6:	d6 d1       	rcall	.+940    	; 0x7354 <fputc>
    6fa8:	e8 cf       	rjmp	.-48     	; 0x6f7a <vfprintf+0x4c>
    6faa:	91 2c       	mov	r9, r1
    6fac:	21 2c       	mov	r2, r1
    6fae:	31 2c       	mov	r3, r1
    6fb0:	ff e1       	ldi	r31, 0x1F	; 31
    6fb2:	f3 15       	cp	r31, r3
    6fb4:	d8 f0       	brcs	.+54     	; 0x6fec <vfprintf+0xbe>
    6fb6:	8b 32       	cpi	r24, 0x2B	; 43
    6fb8:	79 f0       	breq	.+30     	; 0x6fd8 <vfprintf+0xaa>
    6fba:	38 f4       	brcc	.+14     	; 0x6fca <vfprintf+0x9c>
    6fbc:	80 32       	cpi	r24, 0x20	; 32
    6fbe:	79 f0       	breq	.+30     	; 0x6fde <vfprintf+0xb0>
    6fc0:	83 32       	cpi	r24, 0x23	; 35
    6fc2:	a1 f4       	brne	.+40     	; 0x6fec <vfprintf+0xbe>
    6fc4:	23 2d       	mov	r18, r3
    6fc6:	20 61       	ori	r18, 0x10	; 16
    6fc8:	1d c0       	rjmp	.+58     	; 0x7004 <vfprintf+0xd6>
    6fca:	8d 32       	cpi	r24, 0x2D	; 45
    6fcc:	61 f0       	breq	.+24     	; 0x6fe6 <vfprintf+0xb8>
    6fce:	80 33       	cpi	r24, 0x30	; 48
    6fd0:	69 f4       	brne	.+26     	; 0x6fec <vfprintf+0xbe>
    6fd2:	23 2d       	mov	r18, r3
    6fd4:	21 60       	ori	r18, 0x01	; 1
    6fd6:	16 c0       	rjmp	.+44     	; 0x7004 <vfprintf+0xd6>
    6fd8:	83 2d       	mov	r24, r3
    6fda:	82 60       	ori	r24, 0x02	; 2
    6fdc:	38 2e       	mov	r3, r24
    6fde:	e3 2d       	mov	r30, r3
    6fe0:	e4 60       	ori	r30, 0x04	; 4
    6fe2:	3e 2e       	mov	r3, r30
    6fe4:	2a c0       	rjmp	.+84     	; 0x703a <vfprintf+0x10c>
    6fe6:	f3 2d       	mov	r31, r3
    6fe8:	f8 60       	ori	r31, 0x08	; 8
    6fea:	1d c0       	rjmp	.+58     	; 0x7026 <vfprintf+0xf8>
    6fec:	37 fc       	sbrc	r3, 7
    6fee:	2d c0       	rjmp	.+90     	; 0x704a <vfprintf+0x11c>
    6ff0:	20 ed       	ldi	r18, 0xD0	; 208
    6ff2:	28 0f       	add	r18, r24
    6ff4:	2a 30       	cpi	r18, 0x0A	; 10
    6ff6:	40 f0       	brcs	.+16     	; 0x7008 <vfprintf+0xda>
    6ff8:	8e 32       	cpi	r24, 0x2E	; 46
    6ffa:	b9 f4       	brne	.+46     	; 0x702a <vfprintf+0xfc>
    6ffc:	36 fc       	sbrc	r3, 6
    6ffe:	75 c1       	rjmp	.+746    	; 0x72ea <vfprintf+0x3bc>
    7000:	23 2d       	mov	r18, r3
    7002:	20 64       	ori	r18, 0x40	; 64
    7004:	32 2e       	mov	r3, r18
    7006:	19 c0       	rjmp	.+50     	; 0x703a <vfprintf+0x10c>
    7008:	36 fe       	sbrs	r3, 6
    700a:	06 c0       	rjmp	.+12     	; 0x7018 <vfprintf+0xea>
    700c:	8a e0       	ldi	r24, 0x0A	; 10
    700e:	98 9e       	mul	r9, r24
    7010:	20 0d       	add	r18, r0
    7012:	11 24       	eor	r1, r1
    7014:	92 2e       	mov	r9, r18
    7016:	11 c0       	rjmp	.+34     	; 0x703a <vfprintf+0x10c>
    7018:	ea e0       	ldi	r30, 0x0A	; 10
    701a:	2e 9e       	mul	r2, r30
    701c:	20 0d       	add	r18, r0
    701e:	11 24       	eor	r1, r1
    7020:	22 2e       	mov	r2, r18
    7022:	f3 2d       	mov	r31, r3
    7024:	f0 62       	ori	r31, 0x20	; 32
    7026:	3f 2e       	mov	r3, r31
    7028:	08 c0       	rjmp	.+16     	; 0x703a <vfprintf+0x10c>
    702a:	8c 36       	cpi	r24, 0x6C	; 108
    702c:	21 f4       	brne	.+8      	; 0x7036 <vfprintf+0x108>
    702e:	83 2d       	mov	r24, r3
    7030:	80 68       	ori	r24, 0x80	; 128
    7032:	38 2e       	mov	r3, r24
    7034:	02 c0       	rjmp	.+4      	; 0x703a <vfprintf+0x10c>
    7036:	88 36       	cpi	r24, 0x68	; 104
    7038:	41 f4       	brne	.+16     	; 0x704a <vfprintf+0x11c>
    703a:	f7 01       	movw	r30, r14
    703c:	93 fd       	sbrc	r25, 3
    703e:	85 91       	lpm	r24, Z+
    7040:	93 ff       	sbrs	r25, 3
    7042:	81 91       	ld	r24, Z+
    7044:	7f 01       	movw	r14, r30
    7046:	81 11       	cpse	r24, r1
    7048:	b3 cf       	rjmp	.-154    	; 0x6fb0 <vfprintf+0x82>
    704a:	98 2f       	mov	r25, r24
    704c:	9f 7d       	andi	r25, 0xDF	; 223
    704e:	95 54       	subi	r25, 0x45	; 69
    7050:	93 30       	cpi	r25, 0x03	; 3
    7052:	28 f4       	brcc	.+10     	; 0x705e <vfprintf+0x130>
    7054:	0c 5f       	subi	r16, 0xFC	; 252
    7056:	1f 4f       	sbci	r17, 0xFF	; 255
    7058:	9f e3       	ldi	r25, 0x3F	; 63
    705a:	99 83       	std	Y+1, r25	; 0x01
    705c:	0d c0       	rjmp	.+26     	; 0x7078 <vfprintf+0x14a>
    705e:	83 36       	cpi	r24, 0x63	; 99
    7060:	31 f0       	breq	.+12     	; 0x706e <vfprintf+0x140>
    7062:	83 37       	cpi	r24, 0x73	; 115
    7064:	71 f0       	breq	.+28     	; 0x7082 <vfprintf+0x154>
    7066:	83 35       	cpi	r24, 0x53	; 83
    7068:	09 f0       	breq	.+2      	; 0x706c <vfprintf+0x13e>
    706a:	55 c0       	rjmp	.+170    	; 0x7116 <vfprintf+0x1e8>
    706c:	20 c0       	rjmp	.+64     	; 0x70ae <vfprintf+0x180>
    706e:	f8 01       	movw	r30, r16
    7070:	80 81       	ld	r24, Z
    7072:	89 83       	std	Y+1, r24	; 0x01
    7074:	0e 5f       	subi	r16, 0xFE	; 254
    7076:	1f 4f       	sbci	r17, 0xFF	; 255
    7078:	88 24       	eor	r8, r8
    707a:	83 94       	inc	r8
    707c:	91 2c       	mov	r9, r1
    707e:	53 01       	movw	r10, r6
    7080:	12 c0       	rjmp	.+36     	; 0x70a6 <vfprintf+0x178>
    7082:	28 01       	movw	r4, r16
    7084:	f2 e0       	ldi	r31, 0x02	; 2
    7086:	4f 0e       	add	r4, r31
    7088:	51 1c       	adc	r5, r1
    708a:	f8 01       	movw	r30, r16
    708c:	a0 80       	ld	r10, Z
    708e:	b1 80       	ldd	r11, Z+1	; 0x01
    7090:	36 fe       	sbrs	r3, 6
    7092:	03 c0       	rjmp	.+6      	; 0x709a <vfprintf+0x16c>
    7094:	69 2d       	mov	r22, r9
    7096:	70 e0       	ldi	r23, 0x00	; 0
    7098:	02 c0       	rjmp	.+4      	; 0x709e <vfprintf+0x170>
    709a:	6f ef       	ldi	r22, 0xFF	; 255
    709c:	7f ef       	ldi	r23, 0xFF	; 255
    709e:	c5 01       	movw	r24, r10
    70a0:	4e d1       	rcall	.+668    	; 0x733e <strnlen>
    70a2:	4c 01       	movw	r8, r24
    70a4:	82 01       	movw	r16, r4
    70a6:	f3 2d       	mov	r31, r3
    70a8:	ff 77       	andi	r31, 0x7F	; 127
    70aa:	3f 2e       	mov	r3, r31
    70ac:	15 c0       	rjmp	.+42     	; 0x70d8 <vfprintf+0x1aa>
    70ae:	28 01       	movw	r4, r16
    70b0:	22 e0       	ldi	r18, 0x02	; 2
    70b2:	42 0e       	add	r4, r18
    70b4:	51 1c       	adc	r5, r1
    70b6:	f8 01       	movw	r30, r16
    70b8:	a0 80       	ld	r10, Z
    70ba:	b1 80       	ldd	r11, Z+1	; 0x01
    70bc:	36 fe       	sbrs	r3, 6
    70be:	03 c0       	rjmp	.+6      	; 0x70c6 <vfprintf+0x198>
    70c0:	69 2d       	mov	r22, r9
    70c2:	70 e0       	ldi	r23, 0x00	; 0
    70c4:	02 c0       	rjmp	.+4      	; 0x70ca <vfprintf+0x19c>
    70c6:	6f ef       	ldi	r22, 0xFF	; 255
    70c8:	7f ef       	ldi	r23, 0xFF	; 255
    70ca:	c5 01       	movw	r24, r10
    70cc:	2d d1       	rcall	.+602    	; 0x7328 <strnlen_P>
    70ce:	4c 01       	movw	r8, r24
    70d0:	f3 2d       	mov	r31, r3
    70d2:	f0 68       	ori	r31, 0x80	; 128
    70d4:	3f 2e       	mov	r3, r31
    70d6:	82 01       	movw	r16, r4
    70d8:	33 fc       	sbrc	r3, 3
    70da:	19 c0       	rjmp	.+50     	; 0x710e <vfprintf+0x1e0>
    70dc:	82 2d       	mov	r24, r2
    70de:	90 e0       	ldi	r25, 0x00	; 0
    70e0:	88 16       	cp	r8, r24
    70e2:	99 06       	cpc	r9, r25
    70e4:	a0 f4       	brcc	.+40     	; 0x710e <vfprintf+0x1e0>
    70e6:	b6 01       	movw	r22, r12
    70e8:	80 e2       	ldi	r24, 0x20	; 32
    70ea:	90 e0       	ldi	r25, 0x00	; 0
    70ec:	33 d1       	rcall	.+614    	; 0x7354 <fputc>
    70ee:	2a 94       	dec	r2
    70f0:	f5 cf       	rjmp	.-22     	; 0x70dc <vfprintf+0x1ae>
    70f2:	f5 01       	movw	r30, r10
    70f4:	37 fc       	sbrc	r3, 7
    70f6:	85 91       	lpm	r24, Z+
    70f8:	37 fe       	sbrs	r3, 7
    70fa:	81 91       	ld	r24, Z+
    70fc:	5f 01       	movw	r10, r30
    70fe:	b6 01       	movw	r22, r12
    7100:	90 e0       	ldi	r25, 0x00	; 0
    7102:	28 d1       	rcall	.+592    	; 0x7354 <fputc>
    7104:	21 10       	cpse	r2, r1
    7106:	2a 94       	dec	r2
    7108:	21 e0       	ldi	r18, 0x01	; 1
    710a:	82 1a       	sub	r8, r18
    710c:	91 08       	sbc	r9, r1
    710e:	81 14       	cp	r8, r1
    7110:	91 04       	cpc	r9, r1
    7112:	79 f7       	brne	.-34     	; 0x70f2 <vfprintf+0x1c4>
    7114:	e1 c0       	rjmp	.+450    	; 0x72d8 <vfprintf+0x3aa>
    7116:	84 36       	cpi	r24, 0x64	; 100
    7118:	11 f0       	breq	.+4      	; 0x711e <vfprintf+0x1f0>
    711a:	89 36       	cpi	r24, 0x69	; 105
    711c:	39 f5       	brne	.+78     	; 0x716c <vfprintf+0x23e>
    711e:	f8 01       	movw	r30, r16
    7120:	37 fe       	sbrs	r3, 7
    7122:	07 c0       	rjmp	.+14     	; 0x7132 <vfprintf+0x204>
    7124:	60 81       	ld	r22, Z
    7126:	71 81       	ldd	r23, Z+1	; 0x01
    7128:	82 81       	ldd	r24, Z+2	; 0x02
    712a:	93 81       	ldd	r25, Z+3	; 0x03
    712c:	0c 5f       	subi	r16, 0xFC	; 252
    712e:	1f 4f       	sbci	r17, 0xFF	; 255
    7130:	08 c0       	rjmp	.+16     	; 0x7142 <vfprintf+0x214>
    7132:	60 81       	ld	r22, Z
    7134:	71 81       	ldd	r23, Z+1	; 0x01
    7136:	07 2e       	mov	r0, r23
    7138:	00 0c       	add	r0, r0
    713a:	88 0b       	sbc	r24, r24
    713c:	99 0b       	sbc	r25, r25
    713e:	0e 5f       	subi	r16, 0xFE	; 254
    7140:	1f 4f       	sbci	r17, 0xFF	; 255
    7142:	f3 2d       	mov	r31, r3
    7144:	ff 76       	andi	r31, 0x6F	; 111
    7146:	3f 2e       	mov	r3, r31
    7148:	97 ff       	sbrs	r25, 7
    714a:	09 c0       	rjmp	.+18     	; 0x715e <vfprintf+0x230>
    714c:	90 95       	com	r25
    714e:	80 95       	com	r24
    7150:	70 95       	com	r23
    7152:	61 95       	neg	r22
    7154:	7f 4f       	sbci	r23, 0xFF	; 255
    7156:	8f 4f       	sbci	r24, 0xFF	; 255
    7158:	9f 4f       	sbci	r25, 0xFF	; 255
    715a:	f0 68       	ori	r31, 0x80	; 128
    715c:	3f 2e       	mov	r3, r31
    715e:	2a e0       	ldi	r18, 0x0A	; 10
    7160:	30 e0       	ldi	r19, 0x00	; 0
    7162:	a3 01       	movw	r20, r6
    7164:	33 d1       	rcall	.+614    	; 0x73cc <__ultoa_invert>
    7166:	88 2e       	mov	r8, r24
    7168:	86 18       	sub	r8, r6
    716a:	44 c0       	rjmp	.+136    	; 0x71f4 <vfprintf+0x2c6>
    716c:	85 37       	cpi	r24, 0x75	; 117
    716e:	31 f4       	brne	.+12     	; 0x717c <vfprintf+0x24e>
    7170:	23 2d       	mov	r18, r3
    7172:	2f 7e       	andi	r18, 0xEF	; 239
    7174:	b2 2e       	mov	r11, r18
    7176:	2a e0       	ldi	r18, 0x0A	; 10
    7178:	30 e0       	ldi	r19, 0x00	; 0
    717a:	25 c0       	rjmp	.+74     	; 0x71c6 <vfprintf+0x298>
    717c:	93 2d       	mov	r25, r3
    717e:	99 7f       	andi	r25, 0xF9	; 249
    7180:	b9 2e       	mov	r11, r25
    7182:	8f 36       	cpi	r24, 0x6F	; 111
    7184:	c1 f0       	breq	.+48     	; 0x71b6 <vfprintf+0x288>
    7186:	18 f4       	brcc	.+6      	; 0x718e <vfprintf+0x260>
    7188:	88 35       	cpi	r24, 0x58	; 88
    718a:	79 f0       	breq	.+30     	; 0x71aa <vfprintf+0x27c>
    718c:	ae c0       	rjmp	.+348    	; 0x72ea <vfprintf+0x3bc>
    718e:	80 37       	cpi	r24, 0x70	; 112
    7190:	19 f0       	breq	.+6      	; 0x7198 <vfprintf+0x26a>
    7192:	88 37       	cpi	r24, 0x78	; 120
    7194:	21 f0       	breq	.+8      	; 0x719e <vfprintf+0x270>
    7196:	a9 c0       	rjmp	.+338    	; 0x72ea <vfprintf+0x3bc>
    7198:	e9 2f       	mov	r30, r25
    719a:	e0 61       	ori	r30, 0x10	; 16
    719c:	be 2e       	mov	r11, r30
    719e:	b4 fe       	sbrs	r11, 4
    71a0:	0d c0       	rjmp	.+26     	; 0x71bc <vfprintf+0x28e>
    71a2:	fb 2d       	mov	r31, r11
    71a4:	f4 60       	ori	r31, 0x04	; 4
    71a6:	bf 2e       	mov	r11, r31
    71a8:	09 c0       	rjmp	.+18     	; 0x71bc <vfprintf+0x28e>
    71aa:	34 fe       	sbrs	r3, 4
    71ac:	0a c0       	rjmp	.+20     	; 0x71c2 <vfprintf+0x294>
    71ae:	29 2f       	mov	r18, r25
    71b0:	26 60       	ori	r18, 0x06	; 6
    71b2:	b2 2e       	mov	r11, r18
    71b4:	06 c0       	rjmp	.+12     	; 0x71c2 <vfprintf+0x294>
    71b6:	28 e0       	ldi	r18, 0x08	; 8
    71b8:	30 e0       	ldi	r19, 0x00	; 0
    71ba:	05 c0       	rjmp	.+10     	; 0x71c6 <vfprintf+0x298>
    71bc:	20 e1       	ldi	r18, 0x10	; 16
    71be:	30 e0       	ldi	r19, 0x00	; 0
    71c0:	02 c0       	rjmp	.+4      	; 0x71c6 <vfprintf+0x298>
    71c2:	20 e1       	ldi	r18, 0x10	; 16
    71c4:	32 e0       	ldi	r19, 0x02	; 2
    71c6:	f8 01       	movw	r30, r16
    71c8:	b7 fe       	sbrs	r11, 7
    71ca:	07 c0       	rjmp	.+14     	; 0x71da <vfprintf+0x2ac>
    71cc:	60 81       	ld	r22, Z
    71ce:	71 81       	ldd	r23, Z+1	; 0x01
    71d0:	82 81       	ldd	r24, Z+2	; 0x02
    71d2:	93 81       	ldd	r25, Z+3	; 0x03
    71d4:	0c 5f       	subi	r16, 0xFC	; 252
    71d6:	1f 4f       	sbci	r17, 0xFF	; 255
    71d8:	06 c0       	rjmp	.+12     	; 0x71e6 <vfprintf+0x2b8>
    71da:	60 81       	ld	r22, Z
    71dc:	71 81       	ldd	r23, Z+1	; 0x01
    71de:	80 e0       	ldi	r24, 0x00	; 0
    71e0:	90 e0       	ldi	r25, 0x00	; 0
    71e2:	0e 5f       	subi	r16, 0xFE	; 254
    71e4:	1f 4f       	sbci	r17, 0xFF	; 255
    71e6:	a3 01       	movw	r20, r6
    71e8:	f1 d0       	rcall	.+482    	; 0x73cc <__ultoa_invert>
    71ea:	88 2e       	mov	r8, r24
    71ec:	86 18       	sub	r8, r6
    71ee:	fb 2d       	mov	r31, r11
    71f0:	ff 77       	andi	r31, 0x7F	; 127
    71f2:	3f 2e       	mov	r3, r31
    71f4:	36 fe       	sbrs	r3, 6
    71f6:	0d c0       	rjmp	.+26     	; 0x7212 <vfprintf+0x2e4>
    71f8:	23 2d       	mov	r18, r3
    71fa:	2e 7f       	andi	r18, 0xFE	; 254
    71fc:	a2 2e       	mov	r10, r18
    71fe:	89 14       	cp	r8, r9
    7200:	58 f4       	brcc	.+22     	; 0x7218 <vfprintf+0x2ea>
    7202:	34 fe       	sbrs	r3, 4
    7204:	0b c0       	rjmp	.+22     	; 0x721c <vfprintf+0x2ee>
    7206:	32 fc       	sbrc	r3, 2
    7208:	09 c0       	rjmp	.+18     	; 0x721c <vfprintf+0x2ee>
    720a:	83 2d       	mov	r24, r3
    720c:	8e 7e       	andi	r24, 0xEE	; 238
    720e:	a8 2e       	mov	r10, r24
    7210:	05 c0       	rjmp	.+10     	; 0x721c <vfprintf+0x2ee>
    7212:	b8 2c       	mov	r11, r8
    7214:	a3 2c       	mov	r10, r3
    7216:	03 c0       	rjmp	.+6      	; 0x721e <vfprintf+0x2f0>
    7218:	b8 2c       	mov	r11, r8
    721a:	01 c0       	rjmp	.+2      	; 0x721e <vfprintf+0x2f0>
    721c:	b9 2c       	mov	r11, r9
    721e:	a4 fe       	sbrs	r10, 4
    7220:	0f c0       	rjmp	.+30     	; 0x7240 <vfprintf+0x312>
    7222:	fe 01       	movw	r30, r28
    7224:	e8 0d       	add	r30, r8
    7226:	f1 1d       	adc	r31, r1
    7228:	80 81       	ld	r24, Z
    722a:	80 33       	cpi	r24, 0x30	; 48
    722c:	21 f4       	brne	.+8      	; 0x7236 <vfprintf+0x308>
    722e:	9a 2d       	mov	r25, r10
    7230:	99 7e       	andi	r25, 0xE9	; 233
    7232:	a9 2e       	mov	r10, r25
    7234:	09 c0       	rjmp	.+18     	; 0x7248 <vfprintf+0x31a>
    7236:	a2 fe       	sbrs	r10, 2
    7238:	06 c0       	rjmp	.+12     	; 0x7246 <vfprintf+0x318>
    723a:	b3 94       	inc	r11
    723c:	b3 94       	inc	r11
    723e:	04 c0       	rjmp	.+8      	; 0x7248 <vfprintf+0x31a>
    7240:	8a 2d       	mov	r24, r10
    7242:	86 78       	andi	r24, 0x86	; 134
    7244:	09 f0       	breq	.+2      	; 0x7248 <vfprintf+0x31a>
    7246:	b3 94       	inc	r11
    7248:	a3 fc       	sbrc	r10, 3
    724a:	10 c0       	rjmp	.+32     	; 0x726c <vfprintf+0x33e>
    724c:	a0 fe       	sbrs	r10, 0
    724e:	06 c0       	rjmp	.+12     	; 0x725c <vfprintf+0x32e>
    7250:	b2 14       	cp	r11, r2
    7252:	80 f4       	brcc	.+32     	; 0x7274 <vfprintf+0x346>
    7254:	28 0c       	add	r2, r8
    7256:	92 2c       	mov	r9, r2
    7258:	9b 18       	sub	r9, r11
    725a:	0d c0       	rjmp	.+26     	; 0x7276 <vfprintf+0x348>
    725c:	b2 14       	cp	r11, r2
    725e:	58 f4       	brcc	.+22     	; 0x7276 <vfprintf+0x348>
    7260:	b6 01       	movw	r22, r12
    7262:	80 e2       	ldi	r24, 0x20	; 32
    7264:	90 e0       	ldi	r25, 0x00	; 0
    7266:	76 d0       	rcall	.+236    	; 0x7354 <fputc>
    7268:	b3 94       	inc	r11
    726a:	f8 cf       	rjmp	.-16     	; 0x725c <vfprintf+0x32e>
    726c:	b2 14       	cp	r11, r2
    726e:	18 f4       	brcc	.+6      	; 0x7276 <vfprintf+0x348>
    7270:	2b 18       	sub	r2, r11
    7272:	02 c0       	rjmp	.+4      	; 0x7278 <vfprintf+0x34a>
    7274:	98 2c       	mov	r9, r8
    7276:	21 2c       	mov	r2, r1
    7278:	a4 fe       	sbrs	r10, 4
    727a:	0f c0       	rjmp	.+30     	; 0x729a <vfprintf+0x36c>
    727c:	b6 01       	movw	r22, r12
    727e:	80 e3       	ldi	r24, 0x30	; 48
    7280:	90 e0       	ldi	r25, 0x00	; 0
    7282:	68 d0       	rcall	.+208    	; 0x7354 <fputc>
    7284:	a2 fe       	sbrs	r10, 2
    7286:	16 c0       	rjmp	.+44     	; 0x72b4 <vfprintf+0x386>
    7288:	a1 fc       	sbrc	r10, 1
    728a:	03 c0       	rjmp	.+6      	; 0x7292 <vfprintf+0x364>
    728c:	88 e7       	ldi	r24, 0x78	; 120
    728e:	90 e0       	ldi	r25, 0x00	; 0
    7290:	02 c0       	rjmp	.+4      	; 0x7296 <vfprintf+0x368>
    7292:	88 e5       	ldi	r24, 0x58	; 88
    7294:	90 e0       	ldi	r25, 0x00	; 0
    7296:	b6 01       	movw	r22, r12
    7298:	0c c0       	rjmp	.+24     	; 0x72b2 <vfprintf+0x384>
    729a:	8a 2d       	mov	r24, r10
    729c:	86 78       	andi	r24, 0x86	; 134
    729e:	51 f0       	breq	.+20     	; 0x72b4 <vfprintf+0x386>
    72a0:	a1 fe       	sbrs	r10, 1
    72a2:	02 c0       	rjmp	.+4      	; 0x72a8 <vfprintf+0x37a>
    72a4:	8b e2       	ldi	r24, 0x2B	; 43
    72a6:	01 c0       	rjmp	.+2      	; 0x72aa <vfprintf+0x37c>
    72a8:	80 e2       	ldi	r24, 0x20	; 32
    72aa:	a7 fc       	sbrc	r10, 7
    72ac:	8d e2       	ldi	r24, 0x2D	; 45
    72ae:	b6 01       	movw	r22, r12
    72b0:	90 e0       	ldi	r25, 0x00	; 0
    72b2:	50 d0       	rcall	.+160    	; 0x7354 <fputc>
    72b4:	89 14       	cp	r8, r9
    72b6:	30 f4       	brcc	.+12     	; 0x72c4 <vfprintf+0x396>
    72b8:	b6 01       	movw	r22, r12
    72ba:	80 e3       	ldi	r24, 0x30	; 48
    72bc:	90 e0       	ldi	r25, 0x00	; 0
    72be:	4a d0       	rcall	.+148    	; 0x7354 <fputc>
    72c0:	9a 94       	dec	r9
    72c2:	f8 cf       	rjmp	.-16     	; 0x72b4 <vfprintf+0x386>
    72c4:	8a 94       	dec	r8
    72c6:	f3 01       	movw	r30, r6
    72c8:	e8 0d       	add	r30, r8
    72ca:	f1 1d       	adc	r31, r1
    72cc:	80 81       	ld	r24, Z
    72ce:	b6 01       	movw	r22, r12
    72d0:	90 e0       	ldi	r25, 0x00	; 0
    72d2:	40 d0       	rcall	.+128    	; 0x7354 <fputc>
    72d4:	81 10       	cpse	r8, r1
    72d6:	f6 cf       	rjmp	.-20     	; 0x72c4 <vfprintf+0x396>
    72d8:	22 20       	and	r2, r2
    72da:	09 f4       	brne	.+2      	; 0x72de <vfprintf+0x3b0>
    72dc:	4e ce       	rjmp	.-868    	; 0x6f7a <vfprintf+0x4c>
    72de:	b6 01       	movw	r22, r12
    72e0:	80 e2       	ldi	r24, 0x20	; 32
    72e2:	90 e0       	ldi	r25, 0x00	; 0
    72e4:	37 d0       	rcall	.+110    	; 0x7354 <fputc>
    72e6:	2a 94       	dec	r2
    72e8:	f7 cf       	rjmp	.-18     	; 0x72d8 <vfprintf+0x3aa>
    72ea:	f6 01       	movw	r30, r12
    72ec:	86 81       	ldd	r24, Z+6	; 0x06
    72ee:	97 81       	ldd	r25, Z+7	; 0x07
    72f0:	02 c0       	rjmp	.+4      	; 0x72f6 <vfprintf+0x3c8>
    72f2:	8f ef       	ldi	r24, 0xFF	; 255
    72f4:	9f ef       	ldi	r25, 0xFF	; 255
    72f6:	2b 96       	adiw	r28, 0x0b	; 11
    72f8:	0f b6       	in	r0, 0x3f	; 63
    72fa:	f8 94       	cli
    72fc:	de bf       	out	0x3e, r29	; 62
    72fe:	0f be       	out	0x3f, r0	; 63
    7300:	cd bf       	out	0x3d, r28	; 61
    7302:	df 91       	pop	r29
    7304:	cf 91       	pop	r28
    7306:	1f 91       	pop	r17
    7308:	0f 91       	pop	r16
    730a:	ff 90       	pop	r15
    730c:	ef 90       	pop	r14
    730e:	df 90       	pop	r13
    7310:	cf 90       	pop	r12
    7312:	bf 90       	pop	r11
    7314:	af 90       	pop	r10
    7316:	9f 90       	pop	r9
    7318:	8f 90       	pop	r8
    731a:	7f 90       	pop	r7
    731c:	6f 90       	pop	r6
    731e:	5f 90       	pop	r5
    7320:	4f 90       	pop	r4
    7322:	3f 90       	pop	r3
    7324:	2f 90       	pop	r2
    7326:	08 95       	ret

00007328 <strnlen_P>:
    7328:	fc 01       	movw	r30, r24
    732a:	05 90       	lpm	r0, Z+
    732c:	61 50       	subi	r22, 0x01	; 1
    732e:	70 40       	sbci	r23, 0x00	; 0
    7330:	01 10       	cpse	r0, r1
    7332:	d8 f7       	brcc	.-10     	; 0x732a <strnlen_P+0x2>
    7334:	80 95       	com	r24
    7336:	90 95       	com	r25
    7338:	8e 0f       	add	r24, r30
    733a:	9f 1f       	adc	r25, r31
    733c:	08 95       	ret

0000733e <strnlen>:
    733e:	fc 01       	movw	r30, r24
    7340:	61 50       	subi	r22, 0x01	; 1
    7342:	70 40       	sbci	r23, 0x00	; 0
    7344:	01 90       	ld	r0, Z+
    7346:	01 10       	cpse	r0, r1
    7348:	d8 f7       	brcc	.-10     	; 0x7340 <strnlen+0x2>
    734a:	80 95       	com	r24
    734c:	90 95       	com	r25
    734e:	8e 0f       	add	r24, r30
    7350:	9f 1f       	adc	r25, r31
    7352:	08 95       	ret

00007354 <fputc>:
    7354:	0f 93       	push	r16
    7356:	1f 93       	push	r17
    7358:	cf 93       	push	r28
    735a:	df 93       	push	r29
    735c:	fb 01       	movw	r30, r22
    735e:	23 81       	ldd	r18, Z+3	; 0x03
    7360:	21 fd       	sbrc	r18, 1
    7362:	03 c0       	rjmp	.+6      	; 0x736a <fputc+0x16>
    7364:	8f ef       	ldi	r24, 0xFF	; 255
    7366:	9f ef       	ldi	r25, 0xFF	; 255
    7368:	2c c0       	rjmp	.+88     	; 0x73c2 <fputc+0x6e>
    736a:	22 ff       	sbrs	r18, 2
    736c:	16 c0       	rjmp	.+44     	; 0x739a <fputc+0x46>
    736e:	46 81       	ldd	r20, Z+6	; 0x06
    7370:	57 81       	ldd	r21, Z+7	; 0x07
    7372:	24 81       	ldd	r18, Z+4	; 0x04
    7374:	35 81       	ldd	r19, Z+5	; 0x05
    7376:	42 17       	cp	r20, r18
    7378:	53 07       	cpc	r21, r19
    737a:	44 f4       	brge	.+16     	; 0x738c <fputc+0x38>
    737c:	a0 81       	ld	r26, Z
    737e:	b1 81       	ldd	r27, Z+1	; 0x01
    7380:	9d 01       	movw	r18, r26
    7382:	2f 5f       	subi	r18, 0xFF	; 255
    7384:	3f 4f       	sbci	r19, 0xFF	; 255
    7386:	31 83       	std	Z+1, r19	; 0x01
    7388:	20 83       	st	Z, r18
    738a:	8c 93       	st	X, r24
    738c:	26 81       	ldd	r18, Z+6	; 0x06
    738e:	37 81       	ldd	r19, Z+7	; 0x07
    7390:	2f 5f       	subi	r18, 0xFF	; 255
    7392:	3f 4f       	sbci	r19, 0xFF	; 255
    7394:	37 83       	std	Z+7, r19	; 0x07
    7396:	26 83       	std	Z+6, r18	; 0x06
    7398:	14 c0       	rjmp	.+40     	; 0x73c2 <fputc+0x6e>
    739a:	8b 01       	movw	r16, r22
    739c:	ec 01       	movw	r28, r24
    739e:	fb 01       	movw	r30, r22
    73a0:	00 84       	ldd	r0, Z+8	; 0x08
    73a2:	f1 85       	ldd	r31, Z+9	; 0x09
    73a4:	e0 2d       	mov	r30, r0
    73a6:	19 95       	eicall
    73a8:	89 2b       	or	r24, r25
    73aa:	e1 f6       	brne	.-72     	; 0x7364 <fputc+0x10>
    73ac:	d8 01       	movw	r26, r16
    73ae:	16 96       	adiw	r26, 0x06	; 6
    73b0:	8d 91       	ld	r24, X+
    73b2:	9c 91       	ld	r25, X
    73b4:	17 97       	sbiw	r26, 0x07	; 7
    73b6:	01 96       	adiw	r24, 0x01	; 1
    73b8:	17 96       	adiw	r26, 0x07	; 7
    73ba:	9c 93       	st	X, r25
    73bc:	8e 93       	st	-X, r24
    73be:	16 97       	sbiw	r26, 0x06	; 6
    73c0:	ce 01       	movw	r24, r28
    73c2:	df 91       	pop	r29
    73c4:	cf 91       	pop	r28
    73c6:	1f 91       	pop	r17
    73c8:	0f 91       	pop	r16
    73ca:	08 95       	ret

000073cc <__ultoa_invert>:
    73cc:	fa 01       	movw	r30, r20
    73ce:	aa 27       	eor	r26, r26
    73d0:	28 30       	cpi	r18, 0x08	; 8
    73d2:	51 f1       	breq	.+84     	; 0x7428 <__ultoa_invert+0x5c>
    73d4:	20 31       	cpi	r18, 0x10	; 16
    73d6:	81 f1       	breq	.+96     	; 0x7438 <__ultoa_invert+0x6c>
    73d8:	e8 94       	clt
    73da:	6f 93       	push	r22
    73dc:	6e 7f       	andi	r22, 0xFE	; 254
    73de:	6e 5f       	subi	r22, 0xFE	; 254
    73e0:	7f 4f       	sbci	r23, 0xFF	; 255
    73e2:	8f 4f       	sbci	r24, 0xFF	; 255
    73e4:	9f 4f       	sbci	r25, 0xFF	; 255
    73e6:	af 4f       	sbci	r26, 0xFF	; 255
    73e8:	b1 e0       	ldi	r27, 0x01	; 1
    73ea:	3e d0       	rcall	.+124    	; 0x7468 <__ultoa_invert+0x9c>
    73ec:	b4 e0       	ldi	r27, 0x04	; 4
    73ee:	3c d0       	rcall	.+120    	; 0x7468 <__ultoa_invert+0x9c>
    73f0:	67 0f       	add	r22, r23
    73f2:	78 1f       	adc	r23, r24
    73f4:	89 1f       	adc	r24, r25
    73f6:	9a 1f       	adc	r25, r26
    73f8:	a1 1d       	adc	r26, r1
    73fa:	68 0f       	add	r22, r24
    73fc:	79 1f       	adc	r23, r25
    73fe:	8a 1f       	adc	r24, r26
    7400:	91 1d       	adc	r25, r1
    7402:	a1 1d       	adc	r26, r1
    7404:	6a 0f       	add	r22, r26
    7406:	71 1d       	adc	r23, r1
    7408:	81 1d       	adc	r24, r1
    740a:	91 1d       	adc	r25, r1
    740c:	a1 1d       	adc	r26, r1
    740e:	20 d0       	rcall	.+64     	; 0x7450 <__ultoa_invert+0x84>
    7410:	09 f4       	brne	.+2      	; 0x7414 <__ultoa_invert+0x48>
    7412:	68 94       	set
    7414:	3f 91       	pop	r19
    7416:	2a e0       	ldi	r18, 0x0A	; 10
    7418:	26 9f       	mul	r18, r22
    741a:	11 24       	eor	r1, r1
    741c:	30 19       	sub	r19, r0
    741e:	30 5d       	subi	r19, 0xD0	; 208
    7420:	31 93       	st	Z+, r19
    7422:	de f6       	brtc	.-74     	; 0x73da <__ultoa_invert+0xe>
    7424:	cf 01       	movw	r24, r30
    7426:	08 95       	ret
    7428:	46 2f       	mov	r20, r22
    742a:	47 70       	andi	r20, 0x07	; 7
    742c:	40 5d       	subi	r20, 0xD0	; 208
    742e:	41 93       	st	Z+, r20
    7430:	b3 e0       	ldi	r27, 0x03	; 3
    7432:	0f d0       	rcall	.+30     	; 0x7452 <__ultoa_invert+0x86>
    7434:	c9 f7       	brne	.-14     	; 0x7428 <__ultoa_invert+0x5c>
    7436:	f6 cf       	rjmp	.-20     	; 0x7424 <__ultoa_invert+0x58>
    7438:	46 2f       	mov	r20, r22
    743a:	4f 70       	andi	r20, 0x0F	; 15
    743c:	40 5d       	subi	r20, 0xD0	; 208
    743e:	4a 33       	cpi	r20, 0x3A	; 58
    7440:	18 f0       	brcs	.+6      	; 0x7448 <__ultoa_invert+0x7c>
    7442:	49 5d       	subi	r20, 0xD9	; 217
    7444:	31 fd       	sbrc	r19, 1
    7446:	40 52       	subi	r20, 0x20	; 32
    7448:	41 93       	st	Z+, r20
    744a:	02 d0       	rcall	.+4      	; 0x7450 <__ultoa_invert+0x84>
    744c:	a9 f7       	brne	.-22     	; 0x7438 <__ultoa_invert+0x6c>
    744e:	ea cf       	rjmp	.-44     	; 0x7424 <__ultoa_invert+0x58>
    7450:	b4 e0       	ldi	r27, 0x04	; 4
    7452:	a6 95       	lsr	r26
    7454:	97 95       	ror	r25
    7456:	87 95       	ror	r24
    7458:	77 95       	ror	r23
    745a:	67 95       	ror	r22
    745c:	ba 95       	dec	r27
    745e:	c9 f7       	brne	.-14     	; 0x7452 <__ultoa_invert+0x86>
    7460:	00 97       	sbiw	r24, 0x00	; 0
    7462:	61 05       	cpc	r22, r1
    7464:	71 05       	cpc	r23, r1
    7466:	08 95       	ret
    7468:	9b 01       	movw	r18, r22
    746a:	ac 01       	movw	r20, r24
    746c:	0a 2e       	mov	r0, r26
    746e:	06 94       	lsr	r0
    7470:	57 95       	ror	r21
    7472:	47 95       	ror	r20
    7474:	37 95       	ror	r19
    7476:	27 95       	ror	r18
    7478:	ba 95       	dec	r27
    747a:	c9 f7       	brne	.-14     	; 0x746e <__ultoa_invert+0xa2>
    747c:	62 0f       	add	r22, r18
    747e:	73 1f       	adc	r23, r19
    7480:	84 1f       	adc	r24, r20
    7482:	95 1f       	adc	r25, r21
    7484:	a0 1d       	adc	r26, r0
    7486:	08 95       	ret

00007488 <_exit>:
    7488:	f8 94       	cli

0000748a <__stop_program>:
    748a:	ff cf       	rjmp	.-2      	; 0x748a <__stop_program>
