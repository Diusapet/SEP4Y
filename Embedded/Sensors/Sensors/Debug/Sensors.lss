
Sensors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800200  0000143c  000014d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000143c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000049  00800264  00800264  00001534  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001534  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001564  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000468  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005553  00000000  00000000  00001a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001bb5  00000000  00000000  00006f5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002cc3  00000000  00000000  00008b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d94  00000000  00000000  0000b7d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001da8  00000000  00000000  0000c56c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048bb  00000000  00000000  0000e314  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000448  00000000  00000000  00012bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	35 c1       	rjmp	.+618    	; 0x29c <__vector_12>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	d6 c3       	rjmp	.+1964   	; 0x812 <__vector_25>
      66:	00 00       	nop
      68:	26 c4       	rjmp	.+2124   	; 0x8b6 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	56 c4       	rjmp	.+2220   	; 0x93e <__vector_36>
      92:	00 00       	nop
      94:	a6 c4       	rjmp	.+2380   	; 0x9e2 <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ce c4       	rjmp	.+2460   	; 0xa6a <__vector_51>
      ce:	00 00       	nop
      d0:	1e c5       	rjmp	.+2620   	; 0xb0e <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	5e c5       	rjmp	.+2748   	; 0xb96 <__vector_54>
      da:	00 00       	nop
      dc:	ae c5       	rjmp	.+2908   	; 0xc3a <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e3       	ldi	r30, 0x3C	; 60
      fc:	f4 e1       	ldi	r31, 0x14	; 20
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 36       	cpi	r26, 0x64	; 100
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a4 e6       	ldi	r26, 0x64	; 100
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ad 3a       	cpi	r26, 0xAD	; 173
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	2f d2       	rcall	.+1118   	; 0x57e <main>
     120:	0c 94 1c 0a 	jmp	0x1438	; 0x1438 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <task_switch_in>:
	void task_switch_in(uint8_t task_no) {
		 #ifdef HAL_DEFS_H_

		 #else
		 // Used on VIA MEGA Shield rev. 2.0.0
		 PORTK &= 0b11110000;
     126:	e8 e0       	ldi	r30, 0x08	; 8
     128:	f1 e0       	ldi	r31, 0x01	; 1
     12a:	90 81       	ld	r25, Z
     12c:	90 7f       	andi	r25, 0xF0	; 240
     12e:	90 83       	st	Z, r25
		 PORTK |= (task_no & 0b00001111);
     130:	90 81       	ld	r25, Z
     132:	8f 70       	andi	r24, 0x0F	; 15
     134:	98 2b       	or	r25, r24
     136:	90 83       	st	Z, r25
     138:	08 95       	ret

0000013a <task_switch_out>:
	void task_switch_out(uint8_t task_no) {
		#ifdef HAL_DEFS_H_

		#else
		// Used on VIA MEGA Shield rev. 2.0.0
		PORTK &= 0b11110000;
     13a:	e8 e0       	ldi	r30, 0x08	; 8
     13c:	f1 e0       	ldi	r31, 0x01	; 1
     13e:	80 81       	ld	r24, Z
     140:	80 7f       	andi	r24, 0xF0	; 240
     142:	80 83       	st	Z, r24
     144:	08 95       	ret

00000146 <vListInsertEnd>:
    /* Remember which list the item is in.  This allows fast removal of the
    item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
}
     146:	cf 93       	push	r28
     148:	df 93       	push	r29
     14a:	9c 01       	movw	r18, r24
     14c:	fb 01       	movw	r30, r22
     14e:	dc 01       	movw	r26, r24
     150:	11 96       	adiw	r26, 0x01	; 1
     152:	cd 91       	ld	r28, X+
     154:	dc 91       	ld	r29, X
     156:	12 97       	sbiw	r26, 0x02	; 2
     158:	d3 83       	std	Z+3, r29	; 0x03
     15a:	c2 83       	std	Z+2, r28	; 0x02
     15c:	8c 81       	ldd	r24, Y+4	; 0x04
     15e:	9d 81       	ldd	r25, Y+5	; 0x05
     160:	95 83       	std	Z+5, r25	; 0x05
     162:	84 83       	std	Z+4, r24	; 0x04
     164:	8c 81       	ldd	r24, Y+4	; 0x04
     166:	9d 81       	ldd	r25, Y+5	; 0x05
     168:	dc 01       	movw	r26, r24
     16a:	13 96       	adiw	r26, 0x03	; 3
     16c:	7c 93       	st	X, r23
     16e:	6e 93       	st	-X, r22
     170:	12 97       	sbiw	r26, 0x02	; 2
     172:	7d 83       	std	Y+5, r23	; 0x05
     174:	6c 83       	std	Y+4, r22	; 0x04
     176:	31 87       	std	Z+9, r19	; 0x09
     178:	20 87       	std	Z+8, r18	; 0x08
     17a:	f9 01       	movw	r30, r18
     17c:	80 81       	ld	r24, Z
     17e:	8f 5f       	subi	r24, 0xFF	; 255
     180:	80 83       	st	Z, r24
     182:	df 91       	pop	r29
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	fc 01       	movw	r30, r24
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
     18e:	a0 85       	ldd	r26, Z+8	; 0x08
     190:	b1 85       	ldd	r27, Z+9	; 0x09

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     192:	c2 81       	ldd	r28, Z+2	; 0x02
     194:	d3 81       	ldd	r29, Z+3	; 0x03
     196:	84 81       	ldd	r24, Z+4	; 0x04
     198:	95 81       	ldd	r25, Z+5	; 0x05
     19a:	9d 83       	std	Y+5, r25	; 0x05
     19c:	8c 83       	std	Y+4, r24	; 0x04
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     19e:	c4 81       	ldd	r28, Z+4	; 0x04
     1a0:	d5 81       	ldd	r29, Z+5	; 0x05
     1a2:	82 81       	ldd	r24, Z+2	; 0x02
     1a4:	93 81       	ldd	r25, Z+3	; 0x03
     1a6:	9b 83       	std	Y+3, r25	; 0x03
     1a8:	8a 83       	std	Y+2, r24	; 0x02

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
     1aa:	11 96       	adiw	r26, 0x01	; 1
     1ac:	8d 91       	ld	r24, X+
     1ae:	9c 91       	ld	r25, X
     1b0:	12 97       	sbiw	r26, 0x02	; 2
     1b2:	e8 17       	cp	r30, r24
     1b4:	f9 07       	cpc	r31, r25
     1b6:	31 f4       	brne	.+12     	; 0x1c4 <uxListRemove+0x3c>
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
     1b8:	84 81       	ldd	r24, Z+4	; 0x04
     1ba:	95 81       	ldd	r25, Z+5	; 0x05
     1bc:	12 96       	adiw	r26, 0x02	; 2
     1be:	9c 93       	st	X, r25
     1c0:	8e 93       	st	-X, r24
     1c2:	11 97       	sbiw	r26, 0x01	; 1
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
     1c4:	11 86       	std	Z+9, r1	; 0x09
     1c6:	10 86       	std	Z+8, r1	; 0x08
    ( pxList->uxNumberOfItems )--;
     1c8:	8c 91       	ld	r24, X
     1ca:	81 50       	subi	r24, 0x01	; 1
     1cc:	8c 93       	st	X, r24

    return pxList->uxNumberOfItems;
     1ce:	8c 91       	ld	r24, X
}
     1d0:	df 91       	pop	r29
     1d2:	cf 91       	pop	r28
     1d4:	08 95       	ret

000001d6 <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( hot, flatten, naked ) );
void vPortYieldFromTick( void )
{
    portSAVE_CONTEXT();
     1d6:	0f 92       	push	r0
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	f8 94       	cli
     1dc:	0f 92       	push	r0
     1de:	0b b6       	in	r0, 0x3b	; 59
     1e0:	0f 92       	push	r0
     1e2:	0c b6       	in	r0, 0x3c	; 60
     1e4:	0f 92       	push	r0
     1e6:	1f 92       	push	r1
     1e8:	11 24       	eor	r1, r1
     1ea:	2f 92       	push	r2
     1ec:	3f 92       	push	r3
     1ee:	4f 92       	push	r4
     1f0:	5f 92       	push	r5
     1f2:	6f 92       	push	r6
     1f4:	7f 92       	push	r7
     1f6:	8f 92       	push	r8
     1f8:	9f 92       	push	r9
     1fa:	af 92       	push	r10
     1fc:	bf 92       	push	r11
     1fe:	cf 92       	push	r12
     200:	df 92       	push	r13
     202:	ef 92       	push	r14
     204:	ff 92       	push	r15
     206:	0f 93       	push	r16
     208:	1f 93       	push	r17
     20a:	2f 93       	push	r18
     20c:	3f 93       	push	r19
     20e:	4f 93       	push	r20
     210:	5f 93       	push	r21
     212:	6f 93       	push	r22
     214:	7f 93       	push	r23
     216:	8f 93       	push	r24
     218:	9f 93       	push	r25
     21a:	af 93       	push	r26
     21c:	bf 93       	push	r27
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	ef 93       	push	r30
     224:	ff 93       	push	r31
     226:	a0 91 95 02 	lds	r26, 0x0295	; 0x800295 <pxCurrentTCB>
     22a:	b0 91 96 02 	lds	r27, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     22e:	0d b6       	in	r0, 0x3d	; 61
     230:	0d 92       	st	X+, r0
     232:	0e b6       	in	r0, 0x3e	; 62
     234:	0d 92       	st	X+, r0

    sleep_reset();        //     reset the sleep_mode() faster than sleep_disable();
     236:	13 be       	out	0x33, r1	; 51

    if( xTaskIncrementTick() != pdFALSE )
     238:	52 d0       	rcall	.+164    	; 0x2de <xTaskIncrementTick>
     23a:	81 11       	cpse	r24, r1
    {
        vTaskSwitchContext();
     23c:	07 d1       	rcall	.+526    	; 0x44c <vTaskSwitchContext>
     23e:	a0 91 95 02 	lds	r26, 0x0295	; 0x800295 <pxCurrentTCB>
    }

    portRESTORE_CONTEXT();
     242:	b0 91 96 02 	lds	r27, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     246:	cd 91       	ld	r28, X+
     248:	cd bf       	out	0x3d, r28	; 61
     24a:	dd 91       	ld	r29, X+
     24c:	de bf       	out	0x3e, r29	; 62
     24e:	ff 91       	pop	r31
     250:	ef 91       	pop	r30
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	bf 91       	pop	r27
     258:	af 91       	pop	r26
     25a:	9f 91       	pop	r25
     25c:	8f 91       	pop	r24
     25e:	7f 91       	pop	r23
     260:	6f 91       	pop	r22
     262:	5f 91       	pop	r21
     264:	4f 91       	pop	r20
     266:	3f 91       	pop	r19
     268:	2f 91       	pop	r18
     26a:	1f 91       	pop	r17
     26c:	0f 91       	pop	r16
     26e:	ff 90       	pop	r15
     270:	ef 90       	pop	r14
     272:	df 90       	pop	r13
     274:	cf 90       	pop	r12
     276:	bf 90       	pop	r11
     278:	af 90       	pop	r10
     27a:	9f 90       	pop	r9
     27c:	8f 90       	pop	r8
     27e:	7f 90       	pop	r7
     280:	6f 90       	pop	r6
     282:	5f 90       	pop	r5
     284:	4f 90       	pop	r4
     286:	3f 90       	pop	r3
     288:	2f 90       	pop	r2
     28a:	1f 90       	pop	r1
     28c:	0f 90       	pop	r0
     28e:	0c be       	out	0x3c, r0	; 60
     290:	0f 90       	pop	r0
     292:	0b be       	out	0x3b, r0	; 59
     294:	0f 90       	pop	r0
     296:	0f be       	out	0x3f, r0	; 63
     298:	0f 90       	pop	r0
     29a:	08 95       	ret

0000029c <__vector_12>:

    __asm__ __volatile__ ( "ret" );
     29c:	9c df       	rcall	.-200    	; 0x1d6 <vPortYieldFromTick>
    ISR(portSCHEDULER_ISR, ISR_NAKED) __attribute__ ((hot, flatten));
//  ISR(portSCHEDULER_ISR, ISR_NAKED ISR_NOBLOCK) __attribute__ ((hot, flatten));
    ISR(portSCHEDULER_ISR)
    {
        vPortYieldFromTick();
        __asm__ __volatile__ ( "reti" );
     29e:	18 95       	reti

000002a0 <prvResetNextTaskUnblockTime>:
        {
            xReturn = pdFAIL;
        }

        return xReturn;
    }
     2a0:	e0 91 6f 02 	lds	r30, 0x026F	; 0x80026f <pxDelayedTaskList>
     2a4:	f0 91 70 02 	lds	r31, 0x0270	; 0x800270 <pxDelayedTaskList+0x1>
     2a8:	80 81       	ld	r24, Z
     2aa:	81 11       	cpse	r24, r1
     2ac:	07 c0       	rjmp	.+14     	; 0x2bc <prvResetNextTaskUnblockTime+0x1c>
     2ae:	8f ef       	ldi	r24, 0xFF	; 255
     2b0:	9f ef       	ldi	r25, 0xFF	; 255
     2b2:	90 93 66 02 	sts	0x0266, r25	; 0x800266 <xNextTaskUnblockTime+0x1>
     2b6:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <xNextTaskUnblockTime>
     2ba:	08 95       	ret
     2bc:	e0 91 6f 02 	lds	r30, 0x026F	; 0x80026f <pxDelayedTaskList>
     2c0:	f0 91 70 02 	lds	r31, 0x0270	; 0x800270 <pxDelayedTaskList+0x1>
     2c4:	05 80       	ldd	r0, Z+5	; 0x05
     2c6:	f6 81       	ldd	r31, Z+6	; 0x06
     2c8:	e0 2d       	mov	r30, r0
     2ca:	06 80       	ldd	r0, Z+6	; 0x06
     2cc:	f7 81       	ldd	r31, Z+7	; 0x07
     2ce:	e0 2d       	mov	r30, r0
     2d0:	82 81       	ldd	r24, Z+2	; 0x02
     2d2:	93 81       	ldd	r25, Z+3	; 0x03
     2d4:	90 93 66 02 	sts	0x0266, r25	; 0x800266 <xNextTaskUnblockTime+0x1>
     2d8:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <xNextTaskUnblockTime>
     2dc:	08 95       	ret

000002de <xTaskIncrementTick>:
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <__data_end>
     2f2:	81 11       	cpse	r24, r1
     2f4:	95 c0       	rjmp	.+298    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     2f6:	e0 90 6b 02 	lds	r14, 0x026B	; 0x80026b <xTickCount>
     2fa:	f0 90 6c 02 	lds	r15, 0x026C	; 0x80026c <xTickCount+0x1>
     2fe:	8f ef       	ldi	r24, 0xFF	; 255
     300:	e8 1a       	sub	r14, r24
     302:	f8 0a       	sbc	r15, r24
     304:	f0 92 6c 02 	sts	0x026C, r15	; 0x80026c <xTickCount+0x1>
     308:	e0 92 6b 02 	sts	0x026B, r14	; 0x80026b <xTickCount>
     30c:	e1 14       	cp	r14, r1
     30e:	f1 04       	cpc	r15, r1
     310:	b1 f4       	brne	.+44     	; 0x33e <xTaskIncrementTick+0x60>
     312:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <pxDelayedTaskList>
     316:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <pxDelayedTaskList+0x1>
     31a:	20 91 6d 02 	lds	r18, 0x026D	; 0x80026d <pxOverflowDelayedTaskList>
     31e:	30 91 6e 02 	lds	r19, 0x026E	; 0x80026e <pxOverflowDelayedTaskList+0x1>
     322:	30 93 70 02 	sts	0x0270, r19	; 0x800270 <pxDelayedTaskList+0x1>
     326:	20 93 6f 02 	sts	0x026F, r18	; 0x80026f <pxDelayedTaskList>
     32a:	90 93 6e 02 	sts	0x026E, r25	; 0x80026e <pxOverflowDelayedTaskList+0x1>
     32e:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <pxOverflowDelayedTaskList>
     332:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <xNumOfOverflows>
     336:	8f 5f       	subi	r24, 0xFF	; 255
     338:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <xNumOfOverflows>
     33c:	b1 df       	rcall	.-158    	; 0x2a0 <prvResetNextTaskUnblockTime>
     33e:	80 91 65 02 	lds	r24, 0x0265	; 0x800265 <xNextTaskUnblockTime>
     342:	90 91 66 02 	lds	r25, 0x0266	; 0x800266 <xNextTaskUnblockTime+0x1>
     346:	e8 16       	cp	r14, r24
     348:	f9 06       	cpc	r15, r25
     34a:	10 f4       	brcc	.+4      	; 0x350 <xTaskIncrementTick+0x72>
     34c:	d1 2c       	mov	r13, r1
     34e:	50 c0       	rjmp	.+160    	; 0x3f0 <xTaskIncrementTick+0x112>
     350:	d1 2c       	mov	r13, r1
     352:	cc 24       	eor	r12, r12
     354:	c3 94       	inc	r12
     356:	e0 91 6f 02 	lds	r30, 0x026F	; 0x80026f <pxDelayedTaskList>
     35a:	f0 91 70 02 	lds	r31, 0x0270	; 0x800270 <pxDelayedTaskList+0x1>
     35e:	80 81       	ld	r24, Z
     360:	81 11       	cpse	r24, r1
     362:	07 c0       	rjmp	.+14     	; 0x372 <xTaskIncrementTick+0x94>
     364:	8f ef       	ldi	r24, 0xFF	; 255
     366:	9f ef       	ldi	r25, 0xFF	; 255
     368:	90 93 66 02 	sts	0x0266, r25	; 0x800266 <xNextTaskUnblockTime+0x1>
     36c:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <xNextTaskUnblockTime>
     370:	3f c0       	rjmp	.+126    	; 0x3f0 <xTaskIncrementTick+0x112>
     372:	e0 91 6f 02 	lds	r30, 0x026F	; 0x80026f <pxDelayedTaskList>
     376:	f0 91 70 02 	lds	r31, 0x0270	; 0x800270 <pxDelayedTaskList+0x1>
     37a:	05 80       	ldd	r0, Z+5	; 0x05
     37c:	f6 81       	ldd	r31, Z+6	; 0x06
     37e:	e0 2d       	mov	r30, r0
     380:	c6 81       	ldd	r28, Z+6	; 0x06
     382:	d7 81       	ldd	r29, Z+7	; 0x07
     384:	8a 81       	ldd	r24, Y+2	; 0x02
     386:	9b 81       	ldd	r25, Y+3	; 0x03
     388:	e8 16       	cp	r14, r24
     38a:	f9 06       	cpc	r15, r25
     38c:	28 f4       	brcc	.+10     	; 0x398 <xTaskIncrementTick+0xba>
     38e:	90 93 66 02 	sts	0x0266, r25	; 0x800266 <xNextTaskUnblockTime+0x1>
     392:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <xNextTaskUnblockTime>
     396:	2c c0       	rjmp	.+88     	; 0x3f0 <xTaskIncrementTick+0x112>
     398:	8e 01       	movw	r16, r28
     39a:	0e 5f       	subi	r16, 0xFE	; 254
     39c:	1f 4f       	sbci	r17, 0xFF	; 255
     39e:	c8 01       	movw	r24, r16
     3a0:	f3 de       	rcall	.-538    	; 0x188 <uxListRemove>
     3a2:	8c 89       	ldd	r24, Y+20	; 0x14
     3a4:	9d 89       	ldd	r25, Y+21	; 0x15
     3a6:	89 2b       	or	r24, r25
     3a8:	19 f0       	breq	.+6      	; 0x3b0 <xTaskIncrementTick+0xd2>
     3aa:	ce 01       	movw	r24, r28
     3ac:	0c 96       	adiw	r24, 0x0c	; 12
     3ae:	ec de       	rcall	.-552    	; 0x188 <uxListRemove>
     3b0:	8e 89       	ldd	r24, Y+22	; 0x16
     3b2:	90 91 6a 02 	lds	r25, 0x026A	; 0x80026a <uxTopReadyPriority>
     3b6:	98 17       	cp	r25, r24
     3b8:	10 f4       	brcc	.+4      	; 0x3be <xTaskIncrementTick+0xe0>
     3ba:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <uxTopReadyPriority>
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	9c 01       	movw	r18, r24
     3c2:	22 0f       	add	r18, r18
     3c4:	33 1f       	adc	r19, r19
     3c6:	22 0f       	add	r18, r18
     3c8:	33 1f       	adc	r19, r19
     3ca:	22 0f       	add	r18, r18
     3cc:	33 1f       	adc	r19, r19
     3ce:	82 0f       	add	r24, r18
     3d0:	93 1f       	adc	r25, r19
     3d2:	b8 01       	movw	r22, r16
     3d4:	8f 58       	subi	r24, 0x8F	; 143
     3d6:	9d 4f       	sbci	r25, 0xFD	; 253
     3d8:	b6 de       	rcall	.-660    	; 0x146 <vListInsertEnd>
     3da:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <pxCurrentTCB>
     3de:	f0 91 96 02 	lds	r31, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     3e2:	9e 89       	ldd	r25, Y+22	; 0x16
     3e4:	86 89       	ldd	r24, Z+22	; 0x16
     3e6:	98 17       	cp	r25, r24
     3e8:	08 f4       	brcc	.+2      	; 0x3ec <xTaskIncrementTick+0x10e>
     3ea:	b5 cf       	rjmp	.-150    	; 0x356 <xTaskIncrementTick+0x78>
     3ec:	dc 2c       	mov	r13, r12
     3ee:	b3 cf       	rjmp	.-154    	; 0x356 <xTaskIncrementTick+0x78>
     3f0:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <pxCurrentTCB>
     3f4:	f0 91 96 02 	lds	r31, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     3f8:	86 89       	ldd	r24, Z+22	; 0x16
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	fc 01       	movw	r30, r24
     3fe:	ee 0f       	add	r30, r30
     400:	ff 1f       	adc	r31, r31
     402:	ee 0f       	add	r30, r30
     404:	ff 1f       	adc	r31, r31
     406:	ee 0f       	add	r30, r30
     408:	ff 1f       	adc	r31, r31
     40a:	8e 0f       	add	r24, r30
     40c:	9f 1f       	adc	r25, r31
     40e:	fc 01       	movw	r30, r24
     410:	ef 58       	subi	r30, 0x8F	; 143
     412:	fd 4f       	sbci	r31, 0xFD	; 253
     414:	80 81       	ld	r24, Z
     416:	82 30       	cpi	r24, 0x02	; 2
     418:	48 f0       	brcs	.+18     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     41a:	dd 24       	eor	r13, r13
     41c:	d3 94       	inc	r13
     41e:	06 c0       	rjmp	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     420:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <uxPendedTicks>
     424:	8f 5f       	subi	r24, 0xFF	; 255
     426:	80 93 69 02 	sts	0x0269, r24	; 0x800269 <uxPendedTicks>
     42a:	d1 2c       	mov	r13, r1
     42c:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <xYieldPending>
     430:	88 23       	and	r24, r24
     432:	11 f0       	breq	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     434:	dd 24       	eor	r13, r13
     436:	d3 94       	inc	r13
     438:	8d 2d       	mov	r24, r13
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	1f 91       	pop	r17
     440:	0f 91       	pop	r16
     442:	ff 90       	pop	r15
     444:	ef 90       	pop	r14
     446:	df 90       	pop	r13
     448:	cf 90       	pop	r12
     44a:	08 95       	ret

0000044c <vTaskSwitchContext>:
#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
     44c:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <__data_end>
     450:	88 23       	and	r24, r24
     452:	21 f0       	breq	.+8      	; 0x45c <vTaskSwitchContext+0x10>
    {
        /* The scheduler is currently suspended - do not allow a context
        switch. */
        xYieldPending = pdTRUE;
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <xYieldPending>
     45a:	08 95       	ret
    }
    else
    {
        xYieldPending = pdFALSE;
     45c:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <xYieldPending>
        traceTASK_SWITCHED_OUT();
     460:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <pxCurrentTCB>
     464:	f0 91 96 02 	lds	r31, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     468:	85 a1       	ldd	r24, Z+37	; 0x25
     46a:	67 de       	rcall	.-818    	; 0x13a <task_switch_out>
                ulTaskSwitchedInTime = ulTotalRunTime;
        }
        #endif /* configGENERATE_RUN_TIME_STATS */

        /* Check for stack overflow, if configured. */
        taskCHECK_FOR_STACK_OVERFLOW();
     46c:	a0 91 95 02 	lds	r26, 0x0295	; 0x800295 <pxCurrentTCB>
     470:	b0 91 96 02 	lds	r27, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     474:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <pxCurrentTCB>
     478:	f0 91 96 02 	lds	r31, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     47c:	2d 91       	ld	r18, X+
     47e:	3c 91       	ld	r19, X
     480:	87 89       	ldd	r24, Z+23	; 0x17
     482:	90 8d       	ldd	r25, Z+24	; 0x18
     484:	82 17       	cp	r24, r18
     486:	93 07       	cpc	r25, r19
     488:	58 f0       	brcs	.+22     	; 0x4a0 <vTaskSwitchContext+0x54>
     48a:	60 91 95 02 	lds	r22, 0x0295	; 0x800295 <pxCurrentTCB>
     48e:	70 91 96 02 	lds	r23, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     492:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <pxCurrentTCB>
     496:	90 91 96 02 	lds	r25, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     49a:	67 5e       	subi	r22, 0xE7	; 231
     49c:	7f 4f       	sbci	r23, 0xFF	; 255
     49e:	62 d0       	rcall	.+196    	; 0x564 <vApplicationStackOverflowHook>
        }
        #endif

        /* Select a new task to run using either the generic C or port
        optimised asm code. */
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     4a0:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <uxTopReadyPriority>
     4a4:	82 2f       	mov	r24, r18
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	fc 01       	movw	r30, r24
     4aa:	ee 0f       	add	r30, r30
     4ac:	ff 1f       	adc	r31, r31
     4ae:	ee 0f       	add	r30, r30
     4b0:	ff 1f       	adc	r31, r31
     4b2:	ee 0f       	add	r30, r30
     4b4:	ff 1f       	adc	r31, r31
     4b6:	e8 0f       	add	r30, r24
     4b8:	f9 1f       	adc	r31, r25
     4ba:	ef 58       	subi	r30, 0x8F	; 143
     4bc:	fd 4f       	sbci	r31, 0xFD	; 253
     4be:	30 81       	ld	r19, Z
     4c0:	31 11       	cpse	r19, r1
     4c2:	11 c0       	rjmp	.+34     	; 0x4e6 <vTaskSwitchContext+0x9a>
     4c4:	21 50       	subi	r18, 0x01	; 1
     4c6:	82 2f       	mov	r24, r18
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	fc 01       	movw	r30, r24
     4cc:	ee 0f       	add	r30, r30
     4ce:	ff 1f       	adc	r31, r31
     4d0:	ee 0f       	add	r30, r30
     4d2:	ff 1f       	adc	r31, r31
     4d4:	ee 0f       	add	r30, r30
     4d6:	ff 1f       	adc	r31, r31
     4d8:	e8 0f       	add	r30, r24
     4da:	f9 1f       	adc	r31, r25
     4dc:	ef 58       	subi	r30, 0x8F	; 143
     4de:	fd 4f       	sbci	r31, 0xFD	; 253
     4e0:	30 81       	ld	r19, Z
     4e2:	33 23       	and	r19, r19
     4e4:	79 f3       	breq	.-34     	; 0x4c4 <vTaskSwitchContext+0x78>
     4e6:	ac 01       	movw	r20, r24
     4e8:	44 0f       	add	r20, r20
     4ea:	55 1f       	adc	r21, r21
     4ec:	44 0f       	add	r20, r20
     4ee:	55 1f       	adc	r21, r21
     4f0:	44 0f       	add	r20, r20
     4f2:	55 1f       	adc	r21, r21
     4f4:	48 0f       	add	r20, r24
     4f6:	59 1f       	adc	r21, r25
     4f8:	da 01       	movw	r26, r20
     4fa:	af 58       	subi	r26, 0x8F	; 143
     4fc:	bd 4f       	sbci	r27, 0xFD	; 253
     4fe:	11 96       	adiw	r26, 0x01	; 1
     500:	ed 91       	ld	r30, X+
     502:	fc 91       	ld	r31, X
     504:	12 97       	sbiw	r26, 0x02	; 2
     506:	02 80       	ldd	r0, Z+2	; 0x02
     508:	f3 81       	ldd	r31, Z+3	; 0x03
     50a:	e0 2d       	mov	r30, r0
     50c:	12 96       	adiw	r26, 0x02	; 2
     50e:	fc 93       	st	X, r31
     510:	ee 93       	st	-X, r30
     512:	11 97       	sbiw	r26, 0x01	; 1
     514:	4c 58       	subi	r20, 0x8C	; 140
     516:	5d 4f       	sbci	r21, 0xFD	; 253
     518:	e4 17       	cp	r30, r20
     51a:	f5 07       	cpc	r31, r21
     51c:	29 f4       	brne	.+10     	; 0x528 <vTaskSwitchContext+0xdc>
     51e:	42 81       	ldd	r20, Z+2	; 0x02
     520:	53 81       	ldd	r21, Z+3	; 0x03
     522:	fd 01       	movw	r30, r26
     524:	52 83       	std	Z+2, r21	; 0x02
     526:	41 83       	std	Z+1, r20	; 0x01
     528:	fc 01       	movw	r30, r24
     52a:	ee 0f       	add	r30, r30
     52c:	ff 1f       	adc	r31, r31
     52e:	ee 0f       	add	r30, r30
     530:	ff 1f       	adc	r31, r31
     532:	ee 0f       	add	r30, r30
     534:	ff 1f       	adc	r31, r31
     536:	8e 0f       	add	r24, r30
     538:	9f 1f       	adc	r25, r31
     53a:	fc 01       	movw	r30, r24
     53c:	ef 58       	subi	r30, 0x8F	; 143
     53e:	fd 4f       	sbci	r31, 0xFD	; 253
     540:	01 80       	ldd	r0, Z+1	; 0x01
     542:	f2 81       	ldd	r31, Z+2	; 0x02
     544:	e0 2d       	mov	r30, r0
     546:	86 81       	ldd	r24, Z+6	; 0x06
     548:	97 81       	ldd	r25, Z+7	; 0x07
     54a:	90 93 96 02 	sts	0x0296, r25	; 0x800296 <pxCurrentTCB+0x1>
     54e:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <pxCurrentTCB>
     552:	20 93 6a 02 	sts	0x026A, r18	; 0x80026a <uxTopReadyPriority>
        traceTASK_SWITCHED_IN();
     556:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <pxCurrentTCB>
     55a:	f0 91 96 02 	lds	r31, 0x0296	; 0x800296 <pxCurrentTCB+0x1>
     55e:	85 a1       	ldd	r24, Z+37	; 0x25
     560:	e2 cd       	rjmp	.-1084   	; 0x126 <task_switch_in>
     562:	08 95       	ret

00000564 <vApplicationStackOverflowHook>:
void vApplicationStackOverflowHook( TaskHandle_t xTask, portCHAR *pcTaskName ) __attribute__((weak));

void vApplicationStackOverflowHook( TaskHandle_t xTask __attribute__((unused)), portCHAR *pcTaskName __attribute__((unused))  )
{
#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
    DDRB  |= _BV(DDB7);
     564:	27 9a       	sbi	0x04, 7	; 4
    PORTB |= _BV(PORTB7);       // Main (red PB7) LED on. Main LED on.
     566:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     568:	2f ef       	ldi	r18, 0xFF	; 255
     56a:	87 ea       	ldi	r24, 0xA7	; 167
     56c:	91 e6       	ldi	r25, 0x61	; 97
     56e:	21 50       	subi	r18, 0x01	; 1
     570:	80 40       	sbci	r24, 0x00	; 0
     572:	90 40       	sbci	r25, 0x00	; 0
     574:	e1 f7       	brne	.-8      	; 0x56e <vApplicationStackOverflowHook+0xa>
     576:	00 c0       	rjmp	.+0      	; 0x578 <vApplicationStackOverflowHook+0x14>
     578:	00 00       	nop
    for(;;)
    {
        _delay_ms(2000);

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
        PINB  |= _BV(PINB7);       // Main (red PB7) LED toggle. Main LED slow blink.
     57a:	1f 9a       	sbi	0x03, 7	; 3
     57c:	f5 cf       	rjmp	.-22     	; 0x568 <vApplicationStackOverflowHook+0x4>

0000057e <main>:

hcSr501_p hcSr501Inst = NULL;

int main(void)
{
	stdioCreate(0);
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	48 d0       	rcall	.+144    	; 0x612 <stdioCreate>
	sei();
     582:	78 94       	sei
	hcSr501Inst = hcSr501Create(&PORTE, PE5);
     584:	65 e0       	ldi	r22, 0x05	; 5
     586:	8e e2       	ldi	r24, 0x2E	; 46
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	b7 d3       	rcall	.+1902   	; 0xcfa <hcSr501Create>
     58c:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <hcSr501Inst+0x1>
     590:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <hcSr501Inst>
	
	if ( NULL != hcSr501Inst )
     594:	89 2b       	or	r24, r25
     596:	21 f0       	breq	.+8      	; 0x5a0 <main+0x22>
	{
		printf("Driver created.\n");
     598:	8c e1       	ldi	r24, 0x1C	; 28
     59a:	92 e0       	ldi	r25, 0x02	; 2
     59c:	1d d7       	rcall	.+3642   	; 0x13d8 <puts>
     59e:	03 c0       	rjmp	.+6      	; 0x5a6 <main+0x28>
	}else
	{
		printf("Driver not created.\n");
     5a0:	8c e2       	ldi	r24, 0x2C	; 44
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	19 d7       	rcall	.+3634   	; 0x13d8 <puts>
     5a6:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <hcSr501Inst>
	}
	
	while (1)
	{
		if ( hcSr501IsDetecting(hcSr501Inst) )
     5aa:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <hcSr501Inst+0x1>
     5ae:	c1 d3       	rcall	.+1922   	; 0xd32 <hcSr501IsDetecting>
     5b0:	88 23       	and	r24, r24
     5b2:	21 f0       	breq	.+8      	; 0x5bc <main+0x3e>
		{
			printf("something detected\n");
     5b4:	80 e4       	ldi	r24, 0x40	; 64
     5b6:	92 e0       	ldi	r25, 0x02	; 2
     5b8:	0f d7       	rcall	.+3614   	; 0x13d8 <puts>
     5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <main+0x44>
		}
		else
		{
			printf("nothing detected\n");
     5bc:	83 e5       	ldi	r24, 0x53	; 83
     5be:	92 e0       	ldi	r25, 0x02	; 2
     5c0:	0b d7       	rcall	.+3606   	; 0x13d8 <puts>
     5c2:	2f ef       	ldi	r18, 0xFF	; 255
     5c4:	81 ee       	ldi	r24, 0xE1	; 225
     5c6:	94 e0       	ldi	r25, 0x04	; 4
     5c8:	21 50       	subi	r18, 0x01	; 1
     5ca:	80 40       	sbci	r24, 0x00	; 0
     5cc:	90 40       	sbci	r25, 0x00	; 0
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <main+0x4a>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <main+0x54>
     5d2:	00 00       	nop
     5d4:	e8 cf       	rjmp	.-48     	; 0x5a6 <main+0x28>

000005d6 <usart_getchar>:
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	1f 92       	push	r1
     5dc:	cd b7       	in	r28, 0x3d	; 61
     5de:	de b7       	in	r29, 0x3e	; 62
     5e0:	be 01       	movw	r22, r28
     5e2:	6f 5f       	subi	r22, 0xFF	; 255
     5e4:	7f 4f       	sbci	r23, 0xFF	; 255
     5e6:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <_com_serial_instance>
     5ea:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <_com_serial_instance+0x1>
     5ee:	f5 d0       	rcall	.+490    	; 0x7da <serial_get_byte>
     5f0:	81 11       	cpse	r24, r1
     5f2:	f6 cf       	rjmp	.-20     	; 0x5e0 <usart_getchar+0xa>
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	08 95       	ret

00000600 <usart_putchar>:
     600:	68 2f       	mov	r22, r24
     602:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <_com_serial_instance>
     606:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <_com_serial_instance+0x1>
     60a:	c2 d0       	rcall	.+388    	; 0x790 <serial_send_byte>
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	08 95       	ret

00000612 <stdioCreate>:
     612:	8f 92       	push	r8
     614:	9f 92       	push	r9
     616:	af 92       	push	r10
     618:	cf 92       	push	r12
     61a:	ef 92       	push	r14
     61c:	0f 93       	push	r16
     61e:	81 2c       	mov	r8, r1
     620:	91 2c       	mov	r9, r1
     622:	68 94       	set
     624:	aa 24       	eor	r10, r10
     626:	a7 f8       	bld	r10, 7
     628:	68 94       	set
     62a:	cc 24       	eor	r12, r12
     62c:	c7 f8       	bld	r12, 7
     62e:	e1 2c       	mov	r14, r1
     630:	00 e0       	ldi	r16, 0x00	; 0
     632:	23 e0       	ldi	r18, 0x03	; 3
     634:	40 e0       	ldi	r20, 0x00	; 0
     636:	51 ee       	ldi	r21, 0xE1	; 225
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	13 d0       	rcall	.+38     	; 0x664 <serial_new_instance>
     63e:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <_com_serial_instance+0x1>
     642:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <_com_serial_instance>
     646:	e7 ea       	ldi	r30, 0xA7	; 167
     648:	f2 e0       	ldi	r31, 0x02	; 2
     64a:	86 e0       	ldi	r24, 0x06	; 6
     64c:	92 e0       	ldi	r25, 0x02	; 2
     64e:	91 83       	std	Z+1, r25	; 0x01
     650:	80 83       	st	Z, r24
     652:	93 83       	std	Z+3, r25	; 0x03
     654:	82 83       	std	Z+2, r24	; 0x02
     656:	0f 91       	pop	r16
     658:	ef 90       	pop	r14
     65a:	cf 90       	pop	r12
     65c:	af 90       	pop	r10
     65e:	9f 90       	pop	r9
     660:	8f 90       	pop	r8
     662:	08 95       	ret

00000664 <serial_new_instance>:
     664:	2f 92       	push	r2
     666:	3f 92       	push	r3
     668:	4f 92       	push	r4
     66a:	5f 92       	push	r5
     66c:	6f 92       	push	r6
     66e:	7f 92       	push	r7
     670:	8f 92       	push	r8
     672:	9f 92       	push	r9
     674:	af 92       	push	r10
     676:	cf 92       	push	r12
     678:	ef 92       	push	r14
     67a:	ff 92       	push	r15
     67c:	0f 93       	push	r16
     67e:	1f 93       	push	r17
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	cd b7       	in	r28, 0x3d	; 61
     686:	de b7       	in	r29, 0x3e	; 62
     688:	f8 2e       	mov	r15, r24
     68a:	2a 01       	movw	r4, r20
     68c:	3b 01       	movw	r6, r22
     68e:	88 e0       	ldi	r24, 0x08	; 8
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	76 d5       	rcall	.+2796   	; 0x1180 <malloc>
     694:	8c 01       	movw	r16, r24
     696:	8f 2d       	mov	r24, r15
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	88 0f       	add	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	fc 01       	movw	r30, r24
     6a0:	e5 56       	subi	r30, 0x65	; 101
     6a2:	fd 4f       	sbci	r31, 0xFD	; 253
     6a4:	11 83       	std	Z+1, r17	; 0x01
     6a6:	00 83       	st	Z, r16
     6a8:	fc 01       	movw	r30, r24
     6aa:	ec 5e       	subi	r30, 0xEC	; 236
     6ac:	fd 4f       	sbci	r31, 0xFD	; 253
     6ae:	80 81       	ld	r24, Z
     6b0:	91 81       	ldd	r25, Z+1	; 0x01
     6b2:	d8 01       	movw	r26, r16
     6b4:	8d 93       	st	X+, r24
     6b6:	9c 93       	st	X, r25
     6b8:	6c 2d       	mov	r22, r12
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	84 e0       	ldi	r24, 0x04	; 4
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	45 d5       	rcall	.+2698   	; 0x114c <calloc>
     6c2:	1c 01       	movw	r2, r24
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	86 e0       	ldi	r24, 0x06	; 6
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	3f d5       	rcall	.+2686   	; 0x114c <calloc>
     6ce:	7c 01       	movw	r14, r24
     6d0:	4c 2d       	mov	r20, r12
     6d2:	b1 01       	movw	r22, r2
     6d4:	f6 d2       	rcall	.+1516   	; 0xcc2 <fifo_init>
     6d6:	f8 01       	movw	r30, r16
     6d8:	f5 82       	std	Z+5, r15	; 0x05
     6da:	e4 82       	std	Z+4, r14	; 0x04
     6dc:	6a 2d       	mov	r22, r10
     6de:	70 e0       	ldi	r23, 0x00	; 0
     6e0:	84 e0       	ldi	r24, 0x04	; 4
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	33 d5       	rcall	.+2662   	; 0x114c <calloc>
     6e6:	1c 01       	movw	r2, r24
     6e8:	61 e0       	ldi	r22, 0x01	; 1
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	86 e0       	ldi	r24, 0x06	; 6
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	2d d5       	rcall	.+2650   	; 0x114c <calloc>
     6f2:	7c 01       	movw	r14, r24
     6f4:	4a 2d       	mov	r20, r10
     6f6:	b1 01       	movw	r22, r2
     6f8:	e4 d2       	rcall	.+1480   	; 0xcc2 <fifo_init>
     6fa:	d8 01       	movw	r26, r16
     6fc:	13 96       	adiw	r26, 0x03	; 3
     6fe:	fc 92       	st	X, r15
     700:	ee 92       	st	-X, r14
     702:	12 97       	sbiw	r26, 0x02	; 2
     704:	17 96       	adiw	r26, 0x07	; 7
     706:	9c 92       	st	X, r9
     708:	8e 92       	st	-X, r8
     70a:	16 97       	sbiw	r26, 0x06	; 6
     70c:	ff b6       	in	r15, 0x3f	; 63
     70e:	f8 94       	cli
     710:	ed 91       	ld	r30, X+
     712:	fc 91       	ld	r31, X
     714:	11 97       	sbiw	r26, 0x01	; 1
     716:	36 97       	sbiw	r30, 0x06	; 6
     718:	80 81       	ld	r24, Z
     71a:	82 60       	ori	r24, 0x02	; 2
     71c:	80 83       	st	Z, r24
     71e:	8d 90       	ld	r8, X+
     720:	9c 90       	ld	r9, X
     722:	c3 01       	movw	r24, r6
     724:	b2 01       	movw	r22, r4
     726:	21 d4       	rcall	.+2114   	; 0xf6a <__floatunsisf>
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	51 e4       	ldi	r21, 0x41	; 65
     730:	aa d4       	rcall	.+2388   	; 0x1086 <__mulsf3>
     732:	9b 01       	movw	r18, r22
     734:	ac 01       	movw	r20, r24
     736:	60 e0       	ldi	r22, 0x00	; 0
     738:	74 e2       	ldi	r23, 0x24	; 36
     73a:	84 e7       	ldi	r24, 0x74	; 116
     73c:	9b e4       	ldi	r25, 0x4B	; 75
     73e:	81 d3       	rcall	.+1794   	; 0xe42 <__divsf3>
     740:	20 e0       	ldi	r18, 0x00	; 0
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	40 e8       	ldi	r20, 0x80	; 128
     746:	5f e3       	ldi	r21, 0x3F	; 63
     748:	17 d3       	rcall	.+1582   	; 0xd78 <__subsf3>
     74a:	e3 d3       	rcall	.+1990   	; 0xf12 <__fixunssfsi>
     74c:	f4 01       	movw	r30, r8
     74e:	32 97       	sbiw	r30, 0x02	; 2
     750:	60 83       	st	Z, r22
     752:	d8 01       	movw	r26, r16
     754:	ed 91       	ld	r30, X+
     756:	fc 91       	ld	r31, X
     758:	11 97       	sbiw	r26, 0x01	; 1
     75a:	35 97       	sbiw	r30, 0x05	; 5
     75c:	88 e9       	ldi	r24, 0x98	; 152
     75e:	80 83       	st	Z, r24
     760:	ed 91       	ld	r30, X+
     762:	fc 91       	ld	r31, X
     764:	34 97       	sbiw	r30, 0x04	; 4
     766:	86 e0       	ldi	r24, 0x06	; 6
     768:	80 83       	st	Z, r24
     76a:	ff be       	out	0x3f, r15	; 63
     76c:	c8 01       	movw	r24, r16
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	ff 90       	pop	r15
     778:	ef 90       	pop	r14
     77a:	cf 90       	pop	r12
     77c:	af 90       	pop	r10
     77e:	9f 90       	pop	r9
     780:	8f 90       	pop	r8
     782:	7f 90       	pop	r7
     784:	6f 90       	pop	r6
     786:	5f 90       	pop	r5
     788:	4f 90       	pop	r4
     78a:	3f 90       	pop	r3
     78c:	2f 90       	pop	r2
     78e:	08 95       	ret

00000790 <serial_send_byte>:
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	ec 01       	movw	r28, r24
     796:	ea 81       	ldd	r30, Y+2	; 0x02
     798:	fb 81       	ldd	r31, Y+3	; 0x03
     79a:	93 81       	ldd	r25, Z+3	; 0x03
     79c:	82 81       	ldd	r24, Z+2	; 0x02
     79e:	25 81       	ldd	r18, Z+5	; 0x05
     7a0:	98 1b       	sub	r25, r24
     7a2:	92 23       	and	r25, r18
     7a4:	84 81       	ldd	r24, Z+4	; 0x04
     7a6:	98 17       	cp	r25, r24
     7a8:	a1 f0       	breq	.+40     	; 0x7d2 <serial_send_byte+0x42>
     7aa:	93 81       	ldd	r25, Z+3	; 0x03
     7ac:	26 95       	lsr	r18
     7ae:	29 23       	and	r18, r25
     7b0:	a0 81       	ld	r26, Z
     7b2:	b1 81       	ldd	r27, Z+1	; 0x01
     7b4:	a2 0f       	add	r26, r18
     7b6:	b1 1d       	adc	r27, r1
     7b8:	6c 93       	st	X, r22
     7ba:	9f 5f       	subi	r25, 0xFF	; 255
     7bc:	25 81       	ldd	r18, Z+5	; 0x05
     7be:	92 23       	and	r25, r18
     7c0:	93 83       	std	Z+3, r25	; 0x03
     7c2:	e8 81       	ld	r30, Y
     7c4:	f9 81       	ldd	r31, Y+1	; 0x01
     7c6:	35 97       	sbiw	r30, 0x05	; 5
     7c8:	80 81       	ld	r24, Z
     7ca:	80 62       	ori	r24, 0x20	; 32
     7cc:	80 83       	st	Z, r24
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <serial_send_byte+0x44>
     7d2:	82 e0       	ldi	r24, 0x02	; 2
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	08 95       	ret

000007da <serial_get_byte>:
     7da:	dc 01       	movw	r26, r24
     7dc:	14 96       	adiw	r26, 0x04	; 4
     7de:	ed 91       	ld	r30, X+
     7e0:	fc 91       	ld	r31, X
     7e2:	15 97       	sbiw	r26, 0x05	; 5
     7e4:	93 81       	ldd	r25, Z+3	; 0x03
     7e6:	82 81       	ldd	r24, Z+2	; 0x02
     7e8:	98 17       	cp	r25, r24
     7ea:	89 f0       	breq	.+34     	; 0x80e <serial_get_byte+0x34>
     7ec:	92 81       	ldd	r25, Z+2	; 0x02
     7ee:	85 81       	ldd	r24, Z+5	; 0x05
     7f0:	86 95       	lsr	r24
     7f2:	89 23       	and	r24, r25
     7f4:	a0 81       	ld	r26, Z
     7f6:	b1 81       	ldd	r27, Z+1	; 0x01
     7f8:	a8 0f       	add	r26, r24
     7fa:	b1 1d       	adc	r27, r1
     7fc:	8c 91       	ld	r24, X
     7fe:	db 01       	movw	r26, r22
     800:	8c 93       	st	X, r24
     802:	9f 5f       	subi	r25, 0xFF	; 255
     804:	85 81       	ldd	r24, Z+5	; 0x05
     806:	98 23       	and	r25, r24
     808:	92 83       	std	Z+2, r25	; 0x02
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	08 95       	ret
     80e:	83 e0       	ldi	r24, 0x03	; 3
     810:	08 95       	ret

00000812 <__vector_25>:
     812:	1f 92       	push	r1
     814:	0f 92       	push	r0
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	0f 92       	push	r0
     81a:	11 24       	eor	r1, r1
     81c:	0b b6       	in	r0, 0x3b	; 59
     81e:	0f 92       	push	r0
     820:	2f 93       	push	r18
     822:	3f 93       	push	r19
     824:	4f 93       	push	r20
     826:	5f 93       	push	r21
     828:	6f 93       	push	r22
     82a:	7f 93       	push	r23
     82c:	8f 93       	push	r24
     82e:	9f 93       	push	r25
     830:	af 93       	push	r26
     832:	bf 93       	push	r27
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	ef 93       	push	r30
     83a:	ff 93       	push	r31
     83c:	a0 91 9b 02 	lds	r26, 0x029B	; 0x80029b <_ser_handle>
     840:	b0 91 9c 02 	lds	r27, 0x029C	; 0x80029c <_ser_handle+0x1>
     844:	10 97       	sbiw	r26, 0x00	; 0
     846:	11 f1       	breq	.+68     	; 0x88c <__vector_25+0x7a>
     848:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     84c:	14 96       	adiw	r26, 0x04	; 4
     84e:	ed 91       	ld	r30, X+
     850:	fc 91       	ld	r31, X
     852:	15 97       	sbiw	r26, 0x05	; 5
     854:	93 81       	ldd	r25, Z+3	; 0x03
     856:	82 81       	ldd	r24, Z+2	; 0x02
     858:	25 81       	ldd	r18, Z+5	; 0x05
     85a:	98 1b       	sub	r25, r24
     85c:	92 23       	and	r25, r18
     85e:	84 81       	ldd	r24, Z+4	; 0x04
     860:	98 17       	cp	r25, r24
     862:	61 f0       	breq	.+24     	; 0x87c <__vector_25+0x6a>
     864:	83 81       	ldd	r24, Z+3	; 0x03
     866:	26 95       	lsr	r18
     868:	28 23       	and	r18, r24
     86a:	c0 81       	ld	r28, Z
     86c:	d1 81       	ldd	r29, Z+1	; 0x01
     86e:	c2 0f       	add	r28, r18
     870:	d1 1d       	adc	r29, r1
     872:	68 83       	st	Y, r22
     874:	8f 5f       	subi	r24, 0xFF	; 255
     876:	95 81       	ldd	r25, Z+5	; 0x05
     878:	89 23       	and	r24, r25
     87a:	83 83       	std	Z+3, r24	; 0x03
     87c:	16 96       	adiw	r26, 0x06	; 6
     87e:	ed 91       	ld	r30, X+
     880:	fc 91       	ld	r31, X
     882:	17 97       	sbiw	r26, 0x07	; 7
     884:	30 97       	sbiw	r30, 0x00	; 0
     886:	11 f0       	breq	.+4      	; 0x88c <__vector_25+0x7a>
     888:	cd 01       	movw	r24, r26
     88a:	19 95       	eicall
     88c:	ff 91       	pop	r31
     88e:	ef 91       	pop	r30
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	bf 91       	pop	r27
     896:	af 91       	pop	r26
     898:	9f 91       	pop	r25
     89a:	8f 91       	pop	r24
     89c:	7f 91       	pop	r23
     89e:	6f 91       	pop	r22
     8a0:	5f 91       	pop	r21
     8a2:	4f 91       	pop	r20
     8a4:	3f 91       	pop	r19
     8a6:	2f 91       	pop	r18
     8a8:	0f 90       	pop	r0
     8aa:	0b be       	out	0x3b, r0	; 59
     8ac:	0f 90       	pop	r0
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	0f 90       	pop	r0
     8b2:	1f 90       	pop	r1
     8b4:	18 95       	reti

000008b6 <__vector_26>:
     8b6:	1f 92       	push	r1
     8b8:	0f 92       	push	r0
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	0f 92       	push	r0
     8be:	11 24       	eor	r1, r1
     8c0:	0b b6       	in	r0, 0x3b	; 59
     8c2:	0f 92       	push	r0
     8c4:	2f 93       	push	r18
     8c6:	8f 93       	push	r24
     8c8:	9f 93       	push	r25
     8ca:	af 93       	push	r26
     8cc:	bf 93       	push	r27
     8ce:	ef 93       	push	r30
     8d0:	ff 93       	push	r31
     8d2:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <_ser_handle>
     8d6:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <_ser_handle+0x1>
     8da:	30 97       	sbiw	r30, 0x00	; 0
     8dc:	b9 f0       	breq	.+46     	; 0x90c <__vector_26+0x56>
     8de:	02 80       	ldd	r0, Z+2	; 0x02
     8e0:	f3 81       	ldd	r31, Z+3	; 0x03
     8e2:	e0 2d       	mov	r30, r0
     8e4:	93 81       	ldd	r25, Z+3	; 0x03
     8e6:	82 81       	ldd	r24, Z+2	; 0x02
     8e8:	98 17       	cp	r25, r24
     8ea:	b1 f0       	breq	.+44     	; 0x918 <__vector_26+0x62>
     8ec:	92 81       	ldd	r25, Z+2	; 0x02
     8ee:	85 81       	ldd	r24, Z+5	; 0x05
     8f0:	28 2f       	mov	r18, r24
     8f2:	26 95       	lsr	r18
     8f4:	29 23       	and	r18, r25
     8f6:	a0 81       	ld	r26, Z
     8f8:	b1 81       	ldd	r27, Z+1	; 0x01
     8fa:	a2 0f       	add	r26, r18
     8fc:	b1 1d       	adc	r27, r1
     8fe:	2c 91       	ld	r18, X
     900:	9f 5f       	subi	r25, 0xFF	; 255
     902:	89 23       	and	r24, r25
     904:	82 83       	std	Z+2, r24	; 0x02
     906:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     90a:	0b c0       	rjmp	.+22     	; 0x922 <__vector_26+0x6c>
     90c:	e1 ec       	ldi	r30, 0xC1	; 193
     90e:	f0 e0       	ldi	r31, 0x00	; 0
     910:	80 81       	ld	r24, Z
     912:	8f 7d       	andi	r24, 0xDF	; 223
     914:	80 83       	st	Z, r24
     916:	05 c0       	rjmp	.+10     	; 0x922 <__vector_26+0x6c>
     918:	e1 ec       	ldi	r30, 0xC1	; 193
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	80 81       	ld	r24, Z
     91e:	8f 7d       	andi	r24, 0xDF	; 223
     920:	80 83       	st	Z, r24
     922:	ff 91       	pop	r31
     924:	ef 91       	pop	r30
     926:	bf 91       	pop	r27
     928:	af 91       	pop	r26
     92a:	9f 91       	pop	r25
     92c:	8f 91       	pop	r24
     92e:	2f 91       	pop	r18
     930:	0f 90       	pop	r0
     932:	0b be       	out	0x3b, r0	; 59
     934:	0f 90       	pop	r0
     936:	0f be       	out	0x3f, r0	; 63
     938:	0f 90       	pop	r0
     93a:	1f 90       	pop	r1
     93c:	18 95       	reti

0000093e <__vector_36>:
     93e:	1f 92       	push	r1
     940:	0f 92       	push	r0
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	0f 92       	push	r0
     946:	11 24       	eor	r1, r1
     948:	0b b6       	in	r0, 0x3b	; 59
     94a:	0f 92       	push	r0
     94c:	2f 93       	push	r18
     94e:	3f 93       	push	r19
     950:	4f 93       	push	r20
     952:	5f 93       	push	r21
     954:	6f 93       	push	r22
     956:	7f 93       	push	r23
     958:	8f 93       	push	r24
     95a:	9f 93       	push	r25
     95c:	af 93       	push	r26
     95e:	bf 93       	push	r27
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
     968:	a0 91 9d 02 	lds	r26, 0x029D	; 0x80029d <_ser_handle+0x2>
     96c:	b0 91 9e 02 	lds	r27, 0x029E	; 0x80029e <_ser_handle+0x3>
     970:	10 97       	sbiw	r26, 0x00	; 0
     972:	11 f1       	breq	.+68     	; 0x9b8 <__vector_36+0x7a>
     974:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     978:	14 96       	adiw	r26, 0x04	; 4
     97a:	ed 91       	ld	r30, X+
     97c:	fc 91       	ld	r31, X
     97e:	15 97       	sbiw	r26, 0x05	; 5
     980:	93 81       	ldd	r25, Z+3	; 0x03
     982:	82 81       	ldd	r24, Z+2	; 0x02
     984:	25 81       	ldd	r18, Z+5	; 0x05
     986:	98 1b       	sub	r25, r24
     988:	92 23       	and	r25, r18
     98a:	84 81       	ldd	r24, Z+4	; 0x04
     98c:	98 17       	cp	r25, r24
     98e:	61 f0       	breq	.+24     	; 0x9a8 <__vector_36+0x6a>
     990:	83 81       	ldd	r24, Z+3	; 0x03
     992:	26 95       	lsr	r18
     994:	28 23       	and	r18, r24
     996:	c0 81       	ld	r28, Z
     998:	d1 81       	ldd	r29, Z+1	; 0x01
     99a:	c2 0f       	add	r28, r18
     99c:	d1 1d       	adc	r29, r1
     99e:	68 83       	st	Y, r22
     9a0:	8f 5f       	subi	r24, 0xFF	; 255
     9a2:	95 81       	ldd	r25, Z+5	; 0x05
     9a4:	89 23       	and	r24, r25
     9a6:	83 83       	std	Z+3, r24	; 0x03
     9a8:	16 96       	adiw	r26, 0x06	; 6
     9aa:	ed 91       	ld	r30, X+
     9ac:	fc 91       	ld	r31, X
     9ae:	17 97       	sbiw	r26, 0x07	; 7
     9b0:	30 97       	sbiw	r30, 0x00	; 0
     9b2:	11 f0       	breq	.+4      	; 0x9b8 <__vector_36+0x7a>
     9b4:	cd 01       	movw	r24, r26
     9b6:	19 95       	eicall
     9b8:	ff 91       	pop	r31
     9ba:	ef 91       	pop	r30
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	bf 91       	pop	r27
     9c2:	af 91       	pop	r26
     9c4:	9f 91       	pop	r25
     9c6:	8f 91       	pop	r24
     9c8:	7f 91       	pop	r23
     9ca:	6f 91       	pop	r22
     9cc:	5f 91       	pop	r21
     9ce:	4f 91       	pop	r20
     9d0:	3f 91       	pop	r19
     9d2:	2f 91       	pop	r18
     9d4:	0f 90       	pop	r0
     9d6:	0b be       	out	0x3b, r0	; 59
     9d8:	0f 90       	pop	r0
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	0f 90       	pop	r0
     9de:	1f 90       	pop	r1
     9e0:	18 95       	reti

000009e2 <__vector_37>:
     9e2:	1f 92       	push	r1
     9e4:	0f 92       	push	r0
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	0f 92       	push	r0
     9ea:	11 24       	eor	r1, r1
     9ec:	0b b6       	in	r0, 0x3b	; 59
     9ee:	0f 92       	push	r0
     9f0:	2f 93       	push	r18
     9f2:	8f 93       	push	r24
     9f4:	9f 93       	push	r25
     9f6:	af 93       	push	r26
     9f8:	bf 93       	push	r27
     9fa:	ef 93       	push	r30
     9fc:	ff 93       	push	r31
     9fe:	e0 91 9d 02 	lds	r30, 0x029D	; 0x80029d <_ser_handle+0x2>
     a02:	f0 91 9e 02 	lds	r31, 0x029E	; 0x80029e <_ser_handle+0x3>
     a06:	30 97       	sbiw	r30, 0x00	; 0
     a08:	b9 f0       	breq	.+46     	; 0xa38 <__vector_37+0x56>
     a0a:	02 80       	ldd	r0, Z+2	; 0x02
     a0c:	f3 81       	ldd	r31, Z+3	; 0x03
     a0e:	e0 2d       	mov	r30, r0
     a10:	93 81       	ldd	r25, Z+3	; 0x03
     a12:	82 81       	ldd	r24, Z+2	; 0x02
     a14:	98 17       	cp	r25, r24
     a16:	b1 f0       	breq	.+44     	; 0xa44 <__vector_37+0x62>
     a18:	92 81       	ldd	r25, Z+2	; 0x02
     a1a:	85 81       	ldd	r24, Z+5	; 0x05
     a1c:	28 2f       	mov	r18, r24
     a1e:	26 95       	lsr	r18
     a20:	29 23       	and	r18, r25
     a22:	a0 81       	ld	r26, Z
     a24:	b1 81       	ldd	r27, Z+1	; 0x01
     a26:	a2 0f       	add	r26, r18
     a28:	b1 1d       	adc	r27, r1
     a2a:	2c 91       	ld	r18, X
     a2c:	9f 5f       	subi	r25, 0xFF	; 255
     a2e:	89 23       	and	r24, r25
     a30:	82 83       	std	Z+2, r24	; 0x02
     a32:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     a36:	0b c0       	rjmp	.+22     	; 0xa4e <__vector_37+0x6c>
     a38:	e9 ec       	ldi	r30, 0xC9	; 201
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	80 81       	ld	r24, Z
     a3e:	8f 7d       	andi	r24, 0xDF	; 223
     a40:	80 83       	st	Z, r24
     a42:	05 c0       	rjmp	.+10     	; 0xa4e <__vector_37+0x6c>
     a44:	e9 ec       	ldi	r30, 0xC9	; 201
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	80 81       	ld	r24, Z
     a4a:	8f 7d       	andi	r24, 0xDF	; 223
     a4c:	80 83       	st	Z, r24
     a4e:	ff 91       	pop	r31
     a50:	ef 91       	pop	r30
     a52:	bf 91       	pop	r27
     a54:	af 91       	pop	r26
     a56:	9f 91       	pop	r25
     a58:	8f 91       	pop	r24
     a5a:	2f 91       	pop	r18
     a5c:	0f 90       	pop	r0
     a5e:	0b be       	out	0x3b, r0	; 59
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <__vector_51>:
     a6a:	1f 92       	push	r1
     a6c:	0f 92       	push	r0
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	0f 92       	push	r0
     a72:	11 24       	eor	r1, r1
     a74:	0b b6       	in	r0, 0x3b	; 59
     a76:	0f 92       	push	r0
     a78:	2f 93       	push	r18
     a7a:	3f 93       	push	r19
     a7c:	4f 93       	push	r20
     a7e:	5f 93       	push	r21
     a80:	6f 93       	push	r22
     a82:	7f 93       	push	r23
     a84:	8f 93       	push	r24
     a86:	9f 93       	push	r25
     a88:	af 93       	push	r26
     a8a:	bf 93       	push	r27
     a8c:	cf 93       	push	r28
     a8e:	df 93       	push	r29
     a90:	ef 93       	push	r30
     a92:	ff 93       	push	r31
     a94:	a0 91 9f 02 	lds	r26, 0x029F	; 0x80029f <_ser_handle+0x4>
     a98:	b0 91 a0 02 	lds	r27, 0x02A0	; 0x8002a0 <_ser_handle+0x5>
     a9c:	10 97       	sbiw	r26, 0x00	; 0
     a9e:	11 f1       	breq	.+68     	; 0xae4 <__vector_51+0x7a>
     aa0:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     aa4:	14 96       	adiw	r26, 0x04	; 4
     aa6:	ed 91       	ld	r30, X+
     aa8:	fc 91       	ld	r31, X
     aaa:	15 97       	sbiw	r26, 0x05	; 5
     aac:	93 81       	ldd	r25, Z+3	; 0x03
     aae:	82 81       	ldd	r24, Z+2	; 0x02
     ab0:	25 81       	ldd	r18, Z+5	; 0x05
     ab2:	98 1b       	sub	r25, r24
     ab4:	92 23       	and	r25, r18
     ab6:	84 81       	ldd	r24, Z+4	; 0x04
     ab8:	98 17       	cp	r25, r24
     aba:	61 f0       	breq	.+24     	; 0xad4 <__vector_51+0x6a>
     abc:	83 81       	ldd	r24, Z+3	; 0x03
     abe:	26 95       	lsr	r18
     ac0:	28 23       	and	r18, r24
     ac2:	c0 81       	ld	r28, Z
     ac4:	d1 81       	ldd	r29, Z+1	; 0x01
     ac6:	c2 0f       	add	r28, r18
     ac8:	d1 1d       	adc	r29, r1
     aca:	68 83       	st	Y, r22
     acc:	8f 5f       	subi	r24, 0xFF	; 255
     ace:	95 81       	ldd	r25, Z+5	; 0x05
     ad0:	89 23       	and	r24, r25
     ad2:	83 83       	std	Z+3, r24	; 0x03
     ad4:	16 96       	adiw	r26, 0x06	; 6
     ad6:	ed 91       	ld	r30, X+
     ad8:	fc 91       	ld	r31, X
     ada:	17 97       	sbiw	r26, 0x07	; 7
     adc:	30 97       	sbiw	r30, 0x00	; 0
     ade:	11 f0       	breq	.+4      	; 0xae4 <__vector_51+0x7a>
     ae0:	cd 01       	movw	r24, r26
     ae2:	19 95       	eicall
     ae4:	ff 91       	pop	r31
     ae6:	ef 91       	pop	r30
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	bf 91       	pop	r27
     aee:	af 91       	pop	r26
     af0:	9f 91       	pop	r25
     af2:	8f 91       	pop	r24
     af4:	7f 91       	pop	r23
     af6:	6f 91       	pop	r22
     af8:	5f 91       	pop	r21
     afa:	4f 91       	pop	r20
     afc:	3f 91       	pop	r19
     afe:	2f 91       	pop	r18
     b00:	0f 90       	pop	r0
     b02:	0b be       	out	0x3b, r0	; 59
     b04:	0f 90       	pop	r0
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	0f 90       	pop	r0
     b0a:	1f 90       	pop	r1
     b0c:	18 95       	reti

00000b0e <__vector_52>:
     b0e:	1f 92       	push	r1
     b10:	0f 92       	push	r0
     b12:	0f b6       	in	r0, 0x3f	; 63
     b14:	0f 92       	push	r0
     b16:	11 24       	eor	r1, r1
     b18:	0b b6       	in	r0, 0x3b	; 59
     b1a:	0f 92       	push	r0
     b1c:	2f 93       	push	r18
     b1e:	8f 93       	push	r24
     b20:	9f 93       	push	r25
     b22:	af 93       	push	r26
     b24:	bf 93       	push	r27
     b26:	ef 93       	push	r30
     b28:	ff 93       	push	r31
     b2a:	e0 91 9f 02 	lds	r30, 0x029F	; 0x80029f <_ser_handle+0x4>
     b2e:	f0 91 a0 02 	lds	r31, 0x02A0	; 0x8002a0 <_ser_handle+0x5>
     b32:	30 97       	sbiw	r30, 0x00	; 0
     b34:	b9 f0       	breq	.+46     	; 0xb64 <__vector_52+0x56>
     b36:	02 80       	ldd	r0, Z+2	; 0x02
     b38:	f3 81       	ldd	r31, Z+3	; 0x03
     b3a:	e0 2d       	mov	r30, r0
     b3c:	93 81       	ldd	r25, Z+3	; 0x03
     b3e:	82 81       	ldd	r24, Z+2	; 0x02
     b40:	98 17       	cp	r25, r24
     b42:	b1 f0       	breq	.+44     	; 0xb70 <__vector_52+0x62>
     b44:	92 81       	ldd	r25, Z+2	; 0x02
     b46:	85 81       	ldd	r24, Z+5	; 0x05
     b48:	28 2f       	mov	r18, r24
     b4a:	26 95       	lsr	r18
     b4c:	29 23       	and	r18, r25
     b4e:	a0 81       	ld	r26, Z
     b50:	b1 81       	ldd	r27, Z+1	; 0x01
     b52:	a2 0f       	add	r26, r18
     b54:	b1 1d       	adc	r27, r1
     b56:	2c 91       	ld	r18, X
     b58:	9f 5f       	subi	r25, 0xFF	; 255
     b5a:	89 23       	and	r24, r25
     b5c:	82 83       	std	Z+2, r24	; 0x02
     b5e:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     b62:	0b c0       	rjmp	.+22     	; 0xb7a <__vector_52+0x6c>
     b64:	e1 ed       	ldi	r30, 0xD1	; 209
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	8f 7d       	andi	r24, 0xDF	; 223
     b6c:	80 83       	st	Z, r24
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <__vector_52+0x6c>
     b70:	e1 ed       	ldi	r30, 0xD1	; 209
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	80 81       	ld	r24, Z
     b76:	8f 7d       	andi	r24, 0xDF	; 223
     b78:	80 83       	st	Z, r24
     b7a:	ff 91       	pop	r31
     b7c:	ef 91       	pop	r30
     b7e:	bf 91       	pop	r27
     b80:	af 91       	pop	r26
     b82:	9f 91       	pop	r25
     b84:	8f 91       	pop	r24
     b86:	2f 91       	pop	r18
     b88:	0f 90       	pop	r0
     b8a:	0b be       	out	0x3b, r0	; 59
     b8c:	0f 90       	pop	r0
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	0f 90       	pop	r0
     b92:	1f 90       	pop	r1
     b94:	18 95       	reti

00000b96 <__vector_54>:
     b96:	1f 92       	push	r1
     b98:	0f 92       	push	r0
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	0f 92       	push	r0
     b9e:	11 24       	eor	r1, r1
     ba0:	0b b6       	in	r0, 0x3b	; 59
     ba2:	0f 92       	push	r0
     ba4:	2f 93       	push	r18
     ba6:	3f 93       	push	r19
     ba8:	4f 93       	push	r20
     baa:	5f 93       	push	r21
     bac:	6f 93       	push	r22
     bae:	7f 93       	push	r23
     bb0:	8f 93       	push	r24
     bb2:	9f 93       	push	r25
     bb4:	af 93       	push	r26
     bb6:	bf 93       	push	r27
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	ef 93       	push	r30
     bbe:	ff 93       	push	r31
     bc0:	a0 91 a1 02 	lds	r26, 0x02A1	; 0x8002a1 <_ser_handle+0x6>
     bc4:	b0 91 a2 02 	lds	r27, 0x02A2	; 0x8002a2 <_ser_handle+0x7>
     bc8:	10 97       	sbiw	r26, 0x00	; 0
     bca:	11 f1       	breq	.+68     	; 0xc10 <__vector_54+0x7a>
     bcc:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     bd0:	14 96       	adiw	r26, 0x04	; 4
     bd2:	ed 91       	ld	r30, X+
     bd4:	fc 91       	ld	r31, X
     bd6:	15 97       	sbiw	r26, 0x05	; 5
     bd8:	93 81       	ldd	r25, Z+3	; 0x03
     bda:	82 81       	ldd	r24, Z+2	; 0x02
     bdc:	25 81       	ldd	r18, Z+5	; 0x05
     bde:	98 1b       	sub	r25, r24
     be0:	92 23       	and	r25, r18
     be2:	84 81       	ldd	r24, Z+4	; 0x04
     be4:	98 17       	cp	r25, r24
     be6:	61 f0       	breq	.+24     	; 0xc00 <__vector_54+0x6a>
     be8:	83 81       	ldd	r24, Z+3	; 0x03
     bea:	26 95       	lsr	r18
     bec:	28 23       	and	r18, r24
     bee:	c0 81       	ld	r28, Z
     bf0:	d1 81       	ldd	r29, Z+1	; 0x01
     bf2:	c2 0f       	add	r28, r18
     bf4:	d1 1d       	adc	r29, r1
     bf6:	68 83       	st	Y, r22
     bf8:	8f 5f       	subi	r24, 0xFF	; 255
     bfa:	95 81       	ldd	r25, Z+5	; 0x05
     bfc:	89 23       	and	r24, r25
     bfe:	83 83       	std	Z+3, r24	; 0x03
     c00:	16 96       	adiw	r26, 0x06	; 6
     c02:	ed 91       	ld	r30, X+
     c04:	fc 91       	ld	r31, X
     c06:	17 97       	sbiw	r26, 0x07	; 7
     c08:	30 97       	sbiw	r30, 0x00	; 0
     c0a:	11 f0       	breq	.+4      	; 0xc10 <__vector_54+0x7a>
     c0c:	cd 01       	movw	r24, r26
     c0e:	19 95       	eicall
     c10:	ff 91       	pop	r31
     c12:	ef 91       	pop	r30
     c14:	df 91       	pop	r29
     c16:	cf 91       	pop	r28
     c18:	bf 91       	pop	r27
     c1a:	af 91       	pop	r26
     c1c:	9f 91       	pop	r25
     c1e:	8f 91       	pop	r24
     c20:	7f 91       	pop	r23
     c22:	6f 91       	pop	r22
     c24:	5f 91       	pop	r21
     c26:	4f 91       	pop	r20
     c28:	3f 91       	pop	r19
     c2a:	2f 91       	pop	r18
     c2c:	0f 90       	pop	r0
     c2e:	0b be       	out	0x3b, r0	; 59
     c30:	0f 90       	pop	r0
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	0f 90       	pop	r0
     c36:	1f 90       	pop	r1
     c38:	18 95       	reti

00000c3a <__vector_55>:
     c3a:	1f 92       	push	r1
     c3c:	0f 92       	push	r0
     c3e:	0f b6       	in	r0, 0x3f	; 63
     c40:	0f 92       	push	r0
     c42:	11 24       	eor	r1, r1
     c44:	0b b6       	in	r0, 0x3b	; 59
     c46:	0f 92       	push	r0
     c48:	2f 93       	push	r18
     c4a:	8f 93       	push	r24
     c4c:	9f 93       	push	r25
     c4e:	af 93       	push	r26
     c50:	bf 93       	push	r27
     c52:	ef 93       	push	r30
     c54:	ff 93       	push	r31
     c56:	e0 91 a1 02 	lds	r30, 0x02A1	; 0x8002a1 <_ser_handle+0x6>
     c5a:	f0 91 a2 02 	lds	r31, 0x02A2	; 0x8002a2 <_ser_handle+0x7>
     c5e:	30 97       	sbiw	r30, 0x00	; 0
     c60:	b9 f0       	breq	.+46     	; 0xc90 <__vector_55+0x56>
     c62:	02 80       	ldd	r0, Z+2	; 0x02
     c64:	f3 81       	ldd	r31, Z+3	; 0x03
     c66:	e0 2d       	mov	r30, r0
     c68:	93 81       	ldd	r25, Z+3	; 0x03
     c6a:	82 81       	ldd	r24, Z+2	; 0x02
     c6c:	98 17       	cp	r25, r24
     c6e:	b1 f0       	breq	.+44     	; 0xc9c <__vector_55+0x62>
     c70:	92 81       	ldd	r25, Z+2	; 0x02
     c72:	85 81       	ldd	r24, Z+5	; 0x05
     c74:	28 2f       	mov	r18, r24
     c76:	26 95       	lsr	r18
     c78:	29 23       	and	r18, r25
     c7a:	a0 81       	ld	r26, Z
     c7c:	b1 81       	ldd	r27, Z+1	; 0x01
     c7e:	a2 0f       	add	r26, r18
     c80:	b1 1d       	adc	r27, r1
     c82:	2c 91       	ld	r18, X
     c84:	9f 5f       	subi	r25, 0xFF	; 255
     c86:	89 23       	and	r24, r25
     c88:	82 83       	std	Z+2, r24	; 0x02
     c8a:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     c8e:	0b c0       	rjmp	.+22     	; 0xca6 <__vector_55+0x6c>
     c90:	e1 e3       	ldi	r30, 0x31	; 49
     c92:	f1 e0       	ldi	r31, 0x01	; 1
     c94:	80 81       	ld	r24, Z
     c96:	8f 7d       	andi	r24, 0xDF	; 223
     c98:	80 83       	st	Z, r24
     c9a:	05 c0       	rjmp	.+10     	; 0xca6 <__vector_55+0x6c>
     c9c:	e1 e3       	ldi	r30, 0x31	; 49
     c9e:	f1 e0       	ldi	r31, 0x01	; 1
     ca0:	80 81       	ld	r24, Z
     ca2:	8f 7d       	andi	r24, 0xDF	; 223
     ca4:	80 83       	st	Z, r24
     ca6:	ff 91       	pop	r31
     ca8:	ef 91       	pop	r30
     caa:	bf 91       	pop	r27
     cac:	af 91       	pop	r26
     cae:	9f 91       	pop	r25
     cb0:	8f 91       	pop	r24
     cb2:	2f 91       	pop	r18
     cb4:	0f 90       	pop	r0
     cb6:	0b be       	out	0x3b, r0	; 59
     cb8:	0f 90       	pop	r0
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	0f 90       	pop	r0
     cbe:	1f 90       	pop	r1
     cc0:	18 95       	reti

00000cc2 <fifo_init>:
     cc2:	fc 01       	movw	r30, r24
     cc4:	41 11       	cpse	r20, r1
     cc6:	01 c0       	rjmp	.+2      	; 0xcca <fifo_init+0x8>
     cc8:	7c d3       	rcall	.+1784   	; 0x13c2 <abort>
     cca:	84 2f       	mov	r24, r20
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	9c 01       	movw	r18, r24
     cd0:	21 50       	subi	r18, 0x01	; 1
     cd2:	31 09       	sbc	r19, r1
     cd4:	82 23       	and	r24, r18
     cd6:	93 23       	and	r25, r19
     cd8:	89 2b       	or	r24, r25
     cda:	09 f0       	breq	.+2      	; 0xcde <fifo_init+0x1c>
     cdc:	72 d3       	rcall	.+1764   	; 0x13c2 <abort>
     cde:	41 38       	cpi	r20, 0x81	; 129
     ce0:	08 f0       	brcs	.+2      	; 0xce4 <fifo_init+0x22>
     ce2:	6f d3       	rcall	.+1758   	; 0x13c2 <abort>
     ce4:	12 82       	std	Z+2, r1	; 0x02
     ce6:	13 82       	std	Z+3, r1	; 0x03
     ce8:	44 83       	std	Z+4, r20	; 0x04
     cea:	44 0f       	add	r20, r20
     cec:	41 50       	subi	r20, 0x01	; 1
     cee:	45 83       	std	Z+5, r20	; 0x05
     cf0:	71 83       	std	Z+1, r23	; 0x01
     cf2:	60 83       	st	Z, r22
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	08 95       	ret

00000cfa <hcSr501Create>:
     cfa:	ff 92       	push	r15
     cfc:	0f 93       	push	r16
     cfe:	1f 93       	push	r17
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	8c 01       	movw	r16, r24
     d06:	f6 2e       	mov	r15, r22
     d08:	83 e0       	ldi	r24, 0x03	; 3
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	39 d2       	rcall	.+1138   	; 0x1180 <malloc>
     d0e:	ec 01       	movw	r28, r24
     d10:	89 2b       	or	r24, r25
     d12:	41 f0       	breq	.+16     	; 0xd24 <hcSr501Create+0x2a>
     d14:	c8 01       	movw	r24, r16
     d16:	02 97       	sbiw	r24, 0x02	; 2
     d18:	99 83       	std	Y+1, r25	; 0x01
     d1a:	88 83       	st	Y, r24
     d1c:	fa 82       	std	Y+2, r15	; 0x02
     d1e:	6f 2d       	mov	r22, r15
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	1d d0       	rcall	.+58     	; 0xd5e <reg_clear_bit>
     d24:	ce 01       	movw	r24, r28
     d26:	df 91       	pop	r29
     d28:	cf 91       	pop	r28
     d2a:	1f 91       	pop	r17
     d2c:	0f 91       	pop	r16
     d2e:	ff 90       	pop	r15
     d30:	08 95       	ret

00000d32 <hcSr501IsDetecting>:
     d32:	fc 01       	movw	r30, r24
     d34:	62 81       	ldd	r22, Z+2	; 0x02
     d36:	80 81       	ld	r24, Z
     d38:	91 81       	ldd	r25, Z+1	; 0x01
     d3a:	06 d0       	rcall	.+12     	; 0xd48 <reg_read_bit>
     d3c:	91 e0       	ldi	r25, 0x01	; 1
     d3e:	81 11       	cpse	r24, r1
     d40:	01 c0       	rjmp	.+2      	; 0xd44 <hcSr501IsDetecting+0x12>
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	89 2f       	mov	r24, r25
     d46:	08 95       	ret

00000d48 <reg_read_bit>:
     d48:	fc 01       	movw	r30, r24
     d4a:	20 81       	ld	r18, Z
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <reg_read_bit+0xe>
     d52:	88 0f       	add	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	6a 95       	dec	r22
     d58:	e2 f7       	brpl	.-8      	; 0xd52 <reg_read_bit+0xa>
     d5a:	82 23       	and	r24, r18
     d5c:	08 95       	ret

00000d5e <reg_clear_bit>:
     d5e:	fc 01       	movw	r30, r24
     d60:	90 81       	ld	r25, Z
     d62:	21 e0       	ldi	r18, 0x01	; 1
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <reg_clear_bit+0xe>
     d68:	22 0f       	add	r18, r18
     d6a:	33 1f       	adc	r19, r19
     d6c:	6a 95       	dec	r22
     d6e:	e2 f7       	brpl	.-8      	; 0xd68 <reg_clear_bit+0xa>
     d70:	20 95       	com	r18
     d72:	29 23       	and	r18, r25
     d74:	20 83       	st	Z, r18
     d76:	08 95       	ret

00000d78 <__subsf3>:
     d78:	50 58       	subi	r21, 0x80	; 128

00000d7a <__addsf3>:
     d7a:	bb 27       	eor	r27, r27
     d7c:	aa 27       	eor	r26, r26
     d7e:	0e d0       	rcall	.+28     	; 0xd9c <__addsf3x>
     d80:	48 c1       	rjmp	.+656    	; 0x1012 <__fp_round>
     d82:	39 d1       	rcall	.+626    	; 0xff6 <__fp_pscA>
     d84:	30 f0       	brcs	.+12     	; 0xd92 <__addsf3+0x18>
     d86:	3e d1       	rcall	.+636    	; 0x1004 <__fp_pscB>
     d88:	20 f0       	brcs	.+8      	; 0xd92 <__addsf3+0x18>
     d8a:	31 f4       	brne	.+12     	; 0xd98 <__addsf3+0x1e>
     d8c:	9f 3f       	cpi	r25, 0xFF	; 255
     d8e:	11 f4       	brne	.+4      	; 0xd94 <__addsf3+0x1a>
     d90:	1e f4       	brtc	.+6      	; 0xd98 <__addsf3+0x1e>
     d92:	2e c1       	rjmp	.+604    	; 0xff0 <__fp_nan>
     d94:	0e f4       	brtc	.+2      	; 0xd98 <__addsf3+0x1e>
     d96:	e0 95       	com	r30
     d98:	e7 fb       	bst	r30, 7
     d9a:	24 c1       	rjmp	.+584    	; 0xfe4 <__fp_inf>

00000d9c <__addsf3x>:
     d9c:	e9 2f       	mov	r30, r25
     d9e:	4a d1       	rcall	.+660    	; 0x1034 <__fp_split3>
     da0:	80 f3       	brcs	.-32     	; 0xd82 <__addsf3+0x8>
     da2:	ba 17       	cp	r27, r26
     da4:	62 07       	cpc	r22, r18
     da6:	73 07       	cpc	r23, r19
     da8:	84 07       	cpc	r24, r20
     daa:	95 07       	cpc	r25, r21
     dac:	18 f0       	brcs	.+6      	; 0xdb4 <__addsf3x+0x18>
     dae:	71 f4       	brne	.+28     	; 0xdcc <__addsf3x+0x30>
     db0:	9e f5       	brtc	.+102    	; 0xe18 <__addsf3x+0x7c>
     db2:	62 c1       	rjmp	.+708    	; 0x1078 <__fp_zero>
     db4:	0e f4       	brtc	.+2      	; 0xdb8 <__addsf3x+0x1c>
     db6:	e0 95       	com	r30
     db8:	0b 2e       	mov	r0, r27
     dba:	ba 2f       	mov	r27, r26
     dbc:	a0 2d       	mov	r26, r0
     dbe:	0b 01       	movw	r0, r22
     dc0:	b9 01       	movw	r22, r18
     dc2:	90 01       	movw	r18, r0
     dc4:	0c 01       	movw	r0, r24
     dc6:	ca 01       	movw	r24, r20
     dc8:	a0 01       	movw	r20, r0
     dca:	11 24       	eor	r1, r1
     dcc:	ff 27       	eor	r31, r31
     dce:	59 1b       	sub	r21, r25
     dd0:	99 f0       	breq	.+38     	; 0xdf8 <__addsf3x+0x5c>
     dd2:	59 3f       	cpi	r21, 0xF9	; 249
     dd4:	50 f4       	brcc	.+20     	; 0xdea <__addsf3x+0x4e>
     dd6:	50 3e       	cpi	r21, 0xE0	; 224
     dd8:	68 f1       	brcs	.+90     	; 0xe34 <__addsf3x+0x98>
     dda:	1a 16       	cp	r1, r26
     ddc:	f0 40       	sbci	r31, 0x00	; 0
     dde:	a2 2f       	mov	r26, r18
     de0:	23 2f       	mov	r18, r19
     de2:	34 2f       	mov	r19, r20
     de4:	44 27       	eor	r20, r20
     de6:	58 5f       	subi	r21, 0xF8	; 248
     de8:	f3 cf       	rjmp	.-26     	; 0xdd0 <__addsf3x+0x34>
     dea:	46 95       	lsr	r20
     dec:	37 95       	ror	r19
     dee:	27 95       	ror	r18
     df0:	a7 95       	ror	r26
     df2:	f0 40       	sbci	r31, 0x00	; 0
     df4:	53 95       	inc	r21
     df6:	c9 f7       	brne	.-14     	; 0xdea <__addsf3x+0x4e>
     df8:	7e f4       	brtc	.+30     	; 0xe18 <__addsf3x+0x7c>
     dfa:	1f 16       	cp	r1, r31
     dfc:	ba 0b       	sbc	r27, r26
     dfe:	62 0b       	sbc	r22, r18
     e00:	73 0b       	sbc	r23, r19
     e02:	84 0b       	sbc	r24, r20
     e04:	ba f0       	brmi	.+46     	; 0xe34 <__addsf3x+0x98>
     e06:	91 50       	subi	r25, 0x01	; 1
     e08:	a1 f0       	breq	.+40     	; 0xe32 <__addsf3x+0x96>
     e0a:	ff 0f       	add	r31, r31
     e0c:	bb 1f       	adc	r27, r27
     e0e:	66 1f       	adc	r22, r22
     e10:	77 1f       	adc	r23, r23
     e12:	88 1f       	adc	r24, r24
     e14:	c2 f7       	brpl	.-16     	; 0xe06 <__addsf3x+0x6a>
     e16:	0e c0       	rjmp	.+28     	; 0xe34 <__addsf3x+0x98>
     e18:	ba 0f       	add	r27, r26
     e1a:	62 1f       	adc	r22, r18
     e1c:	73 1f       	adc	r23, r19
     e1e:	84 1f       	adc	r24, r20
     e20:	48 f4       	brcc	.+18     	; 0xe34 <__addsf3x+0x98>
     e22:	87 95       	ror	r24
     e24:	77 95       	ror	r23
     e26:	67 95       	ror	r22
     e28:	b7 95       	ror	r27
     e2a:	f7 95       	ror	r31
     e2c:	9e 3f       	cpi	r25, 0xFE	; 254
     e2e:	08 f0       	brcs	.+2      	; 0xe32 <__addsf3x+0x96>
     e30:	b3 cf       	rjmp	.-154    	; 0xd98 <__addsf3+0x1e>
     e32:	93 95       	inc	r25
     e34:	88 0f       	add	r24, r24
     e36:	08 f0       	brcs	.+2      	; 0xe3a <__addsf3x+0x9e>
     e38:	99 27       	eor	r25, r25
     e3a:	ee 0f       	add	r30, r30
     e3c:	97 95       	ror	r25
     e3e:	87 95       	ror	r24
     e40:	08 95       	ret

00000e42 <__divsf3>:
     e42:	0c d0       	rcall	.+24     	; 0xe5c <__divsf3x>
     e44:	e6 c0       	rjmp	.+460    	; 0x1012 <__fp_round>
     e46:	de d0       	rcall	.+444    	; 0x1004 <__fp_pscB>
     e48:	40 f0       	brcs	.+16     	; 0xe5a <__divsf3+0x18>
     e4a:	d5 d0       	rcall	.+426    	; 0xff6 <__fp_pscA>
     e4c:	30 f0       	brcs	.+12     	; 0xe5a <__divsf3+0x18>
     e4e:	21 f4       	brne	.+8      	; 0xe58 <__divsf3+0x16>
     e50:	5f 3f       	cpi	r21, 0xFF	; 255
     e52:	19 f0       	breq	.+6      	; 0xe5a <__divsf3+0x18>
     e54:	c7 c0       	rjmp	.+398    	; 0xfe4 <__fp_inf>
     e56:	51 11       	cpse	r21, r1
     e58:	10 c1       	rjmp	.+544    	; 0x107a <__fp_szero>
     e5a:	ca c0       	rjmp	.+404    	; 0xff0 <__fp_nan>

00000e5c <__divsf3x>:
     e5c:	eb d0       	rcall	.+470    	; 0x1034 <__fp_split3>
     e5e:	98 f3       	brcs	.-26     	; 0xe46 <__divsf3+0x4>

00000e60 <__divsf3_pse>:
     e60:	99 23       	and	r25, r25
     e62:	c9 f3       	breq	.-14     	; 0xe56 <__divsf3+0x14>
     e64:	55 23       	and	r21, r21
     e66:	b1 f3       	breq	.-20     	; 0xe54 <__divsf3+0x12>
     e68:	95 1b       	sub	r25, r21
     e6a:	55 0b       	sbc	r21, r21
     e6c:	bb 27       	eor	r27, r27
     e6e:	aa 27       	eor	r26, r26
     e70:	62 17       	cp	r22, r18
     e72:	73 07       	cpc	r23, r19
     e74:	84 07       	cpc	r24, r20
     e76:	38 f0       	brcs	.+14     	; 0xe86 <__divsf3_pse+0x26>
     e78:	9f 5f       	subi	r25, 0xFF	; 255
     e7a:	5f 4f       	sbci	r21, 0xFF	; 255
     e7c:	22 0f       	add	r18, r18
     e7e:	33 1f       	adc	r19, r19
     e80:	44 1f       	adc	r20, r20
     e82:	aa 1f       	adc	r26, r26
     e84:	a9 f3       	breq	.-22     	; 0xe70 <__divsf3_pse+0x10>
     e86:	33 d0       	rcall	.+102    	; 0xeee <__divsf3_pse+0x8e>
     e88:	0e 2e       	mov	r0, r30
     e8a:	3a f0       	brmi	.+14     	; 0xe9a <__divsf3_pse+0x3a>
     e8c:	e0 e8       	ldi	r30, 0x80	; 128
     e8e:	30 d0       	rcall	.+96     	; 0xef0 <__divsf3_pse+0x90>
     e90:	91 50       	subi	r25, 0x01	; 1
     e92:	50 40       	sbci	r21, 0x00	; 0
     e94:	e6 95       	lsr	r30
     e96:	00 1c       	adc	r0, r0
     e98:	ca f7       	brpl	.-14     	; 0xe8c <__divsf3_pse+0x2c>
     e9a:	29 d0       	rcall	.+82     	; 0xeee <__divsf3_pse+0x8e>
     e9c:	fe 2f       	mov	r31, r30
     e9e:	27 d0       	rcall	.+78     	; 0xeee <__divsf3_pse+0x8e>
     ea0:	66 0f       	add	r22, r22
     ea2:	77 1f       	adc	r23, r23
     ea4:	88 1f       	adc	r24, r24
     ea6:	bb 1f       	adc	r27, r27
     ea8:	26 17       	cp	r18, r22
     eaa:	37 07       	cpc	r19, r23
     eac:	48 07       	cpc	r20, r24
     eae:	ab 07       	cpc	r26, r27
     eb0:	b0 e8       	ldi	r27, 0x80	; 128
     eb2:	09 f0       	breq	.+2      	; 0xeb6 <__divsf3_pse+0x56>
     eb4:	bb 0b       	sbc	r27, r27
     eb6:	80 2d       	mov	r24, r0
     eb8:	bf 01       	movw	r22, r30
     eba:	ff 27       	eor	r31, r31
     ebc:	93 58       	subi	r25, 0x83	; 131
     ebe:	5f 4f       	sbci	r21, 0xFF	; 255
     ec0:	2a f0       	brmi	.+10     	; 0xecc <__divsf3_pse+0x6c>
     ec2:	9e 3f       	cpi	r25, 0xFE	; 254
     ec4:	51 05       	cpc	r21, r1
     ec6:	68 f0       	brcs	.+26     	; 0xee2 <__divsf3_pse+0x82>
     ec8:	8d c0       	rjmp	.+282    	; 0xfe4 <__fp_inf>
     eca:	d7 c0       	rjmp	.+430    	; 0x107a <__fp_szero>
     ecc:	5f 3f       	cpi	r21, 0xFF	; 255
     ece:	ec f3       	brlt	.-6      	; 0xeca <__divsf3_pse+0x6a>
     ed0:	98 3e       	cpi	r25, 0xE8	; 232
     ed2:	dc f3       	brlt	.-10     	; 0xeca <__divsf3_pse+0x6a>
     ed4:	86 95       	lsr	r24
     ed6:	77 95       	ror	r23
     ed8:	67 95       	ror	r22
     eda:	b7 95       	ror	r27
     edc:	f7 95       	ror	r31
     ede:	9f 5f       	subi	r25, 0xFF	; 255
     ee0:	c9 f7       	brne	.-14     	; 0xed4 <__divsf3_pse+0x74>
     ee2:	88 0f       	add	r24, r24
     ee4:	91 1d       	adc	r25, r1
     ee6:	96 95       	lsr	r25
     ee8:	87 95       	ror	r24
     eea:	97 f9       	bld	r25, 7
     eec:	08 95       	ret
     eee:	e1 e0       	ldi	r30, 0x01	; 1
     ef0:	66 0f       	add	r22, r22
     ef2:	77 1f       	adc	r23, r23
     ef4:	88 1f       	adc	r24, r24
     ef6:	bb 1f       	adc	r27, r27
     ef8:	62 17       	cp	r22, r18
     efa:	73 07       	cpc	r23, r19
     efc:	84 07       	cpc	r24, r20
     efe:	ba 07       	cpc	r27, r26
     f00:	20 f0       	brcs	.+8      	; 0xf0a <__divsf3_pse+0xaa>
     f02:	62 1b       	sub	r22, r18
     f04:	73 0b       	sbc	r23, r19
     f06:	84 0b       	sbc	r24, r20
     f08:	ba 0b       	sbc	r27, r26
     f0a:	ee 1f       	adc	r30, r30
     f0c:	88 f7       	brcc	.-30     	; 0xef0 <__divsf3_pse+0x90>
     f0e:	e0 95       	com	r30
     f10:	08 95       	ret

00000f12 <__fixunssfsi>:
     f12:	98 d0       	rcall	.+304    	; 0x1044 <__fp_splitA>
     f14:	88 f0       	brcs	.+34     	; 0xf38 <__fixunssfsi+0x26>
     f16:	9f 57       	subi	r25, 0x7F	; 127
     f18:	90 f0       	brcs	.+36     	; 0xf3e <__fixunssfsi+0x2c>
     f1a:	b9 2f       	mov	r27, r25
     f1c:	99 27       	eor	r25, r25
     f1e:	b7 51       	subi	r27, 0x17	; 23
     f20:	a0 f0       	brcs	.+40     	; 0xf4a <__fixunssfsi+0x38>
     f22:	d1 f0       	breq	.+52     	; 0xf58 <__fixunssfsi+0x46>
     f24:	66 0f       	add	r22, r22
     f26:	77 1f       	adc	r23, r23
     f28:	88 1f       	adc	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	1a f0       	brmi	.+6      	; 0xf34 <__fixunssfsi+0x22>
     f2e:	ba 95       	dec	r27
     f30:	c9 f7       	brne	.-14     	; 0xf24 <__fixunssfsi+0x12>
     f32:	12 c0       	rjmp	.+36     	; 0xf58 <__fixunssfsi+0x46>
     f34:	b1 30       	cpi	r27, 0x01	; 1
     f36:	81 f0       	breq	.+32     	; 0xf58 <__fixunssfsi+0x46>
     f38:	9f d0       	rcall	.+318    	; 0x1078 <__fp_zero>
     f3a:	b1 e0       	ldi	r27, 0x01	; 1
     f3c:	08 95       	ret
     f3e:	9c c0       	rjmp	.+312    	; 0x1078 <__fp_zero>
     f40:	67 2f       	mov	r22, r23
     f42:	78 2f       	mov	r23, r24
     f44:	88 27       	eor	r24, r24
     f46:	b8 5f       	subi	r27, 0xF8	; 248
     f48:	39 f0       	breq	.+14     	; 0xf58 <__fixunssfsi+0x46>
     f4a:	b9 3f       	cpi	r27, 0xF9	; 249
     f4c:	cc f3       	brlt	.-14     	; 0xf40 <__fixunssfsi+0x2e>
     f4e:	86 95       	lsr	r24
     f50:	77 95       	ror	r23
     f52:	67 95       	ror	r22
     f54:	b3 95       	inc	r27
     f56:	d9 f7       	brne	.-10     	; 0xf4e <__fixunssfsi+0x3c>
     f58:	3e f4       	brtc	.+14     	; 0xf68 <__fixunssfsi+0x56>
     f5a:	90 95       	com	r25
     f5c:	80 95       	com	r24
     f5e:	70 95       	com	r23
     f60:	61 95       	neg	r22
     f62:	7f 4f       	sbci	r23, 0xFF	; 255
     f64:	8f 4f       	sbci	r24, 0xFF	; 255
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	08 95       	ret

00000f6a <__floatunsisf>:
     f6a:	e8 94       	clt
     f6c:	09 c0       	rjmp	.+18     	; 0xf80 <__floatsisf+0x12>

00000f6e <__floatsisf>:
     f6e:	97 fb       	bst	r25, 7
     f70:	3e f4       	brtc	.+14     	; 0xf80 <__floatsisf+0x12>
     f72:	90 95       	com	r25
     f74:	80 95       	com	r24
     f76:	70 95       	com	r23
     f78:	61 95       	neg	r22
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	8f 4f       	sbci	r24, 0xFF	; 255
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	99 23       	and	r25, r25
     f82:	a9 f0       	breq	.+42     	; 0xfae <__floatsisf+0x40>
     f84:	f9 2f       	mov	r31, r25
     f86:	96 e9       	ldi	r25, 0x96	; 150
     f88:	bb 27       	eor	r27, r27
     f8a:	93 95       	inc	r25
     f8c:	f6 95       	lsr	r31
     f8e:	87 95       	ror	r24
     f90:	77 95       	ror	r23
     f92:	67 95       	ror	r22
     f94:	b7 95       	ror	r27
     f96:	f1 11       	cpse	r31, r1
     f98:	f8 cf       	rjmp	.-16     	; 0xf8a <__floatsisf+0x1c>
     f9a:	fa f4       	brpl	.+62     	; 0xfda <__floatsisf+0x6c>
     f9c:	bb 0f       	add	r27, r27
     f9e:	11 f4       	brne	.+4      	; 0xfa4 <__floatsisf+0x36>
     fa0:	60 ff       	sbrs	r22, 0
     fa2:	1b c0       	rjmp	.+54     	; 0xfda <__floatsisf+0x6c>
     fa4:	6f 5f       	subi	r22, 0xFF	; 255
     fa6:	7f 4f       	sbci	r23, 0xFF	; 255
     fa8:	8f 4f       	sbci	r24, 0xFF	; 255
     faa:	9f 4f       	sbci	r25, 0xFF	; 255
     fac:	16 c0       	rjmp	.+44     	; 0xfda <__floatsisf+0x6c>
     fae:	88 23       	and	r24, r24
     fb0:	11 f0       	breq	.+4      	; 0xfb6 <__floatsisf+0x48>
     fb2:	96 e9       	ldi	r25, 0x96	; 150
     fb4:	11 c0       	rjmp	.+34     	; 0xfd8 <__floatsisf+0x6a>
     fb6:	77 23       	and	r23, r23
     fb8:	21 f0       	breq	.+8      	; 0xfc2 <__floatsisf+0x54>
     fba:	9e e8       	ldi	r25, 0x8E	; 142
     fbc:	87 2f       	mov	r24, r23
     fbe:	76 2f       	mov	r23, r22
     fc0:	05 c0       	rjmp	.+10     	; 0xfcc <__floatsisf+0x5e>
     fc2:	66 23       	and	r22, r22
     fc4:	71 f0       	breq	.+28     	; 0xfe2 <__floatsisf+0x74>
     fc6:	96 e8       	ldi	r25, 0x86	; 134
     fc8:	86 2f       	mov	r24, r22
     fca:	70 e0       	ldi	r23, 0x00	; 0
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	2a f0       	brmi	.+10     	; 0xfda <__floatsisf+0x6c>
     fd0:	9a 95       	dec	r25
     fd2:	66 0f       	add	r22, r22
     fd4:	77 1f       	adc	r23, r23
     fd6:	88 1f       	adc	r24, r24
     fd8:	da f7       	brpl	.-10     	; 0xfd0 <__floatsisf+0x62>
     fda:	88 0f       	add	r24, r24
     fdc:	96 95       	lsr	r25
     fde:	87 95       	ror	r24
     fe0:	97 f9       	bld	r25, 7
     fe2:	08 95       	ret

00000fe4 <__fp_inf>:
     fe4:	97 f9       	bld	r25, 7
     fe6:	9f 67       	ori	r25, 0x7F	; 127
     fe8:	80 e8       	ldi	r24, 0x80	; 128
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	60 e0       	ldi	r22, 0x00	; 0
     fee:	08 95       	ret

00000ff0 <__fp_nan>:
     ff0:	9f ef       	ldi	r25, 0xFF	; 255
     ff2:	80 ec       	ldi	r24, 0xC0	; 192
     ff4:	08 95       	ret

00000ff6 <__fp_pscA>:
     ff6:	00 24       	eor	r0, r0
     ff8:	0a 94       	dec	r0
     ffa:	16 16       	cp	r1, r22
     ffc:	17 06       	cpc	r1, r23
     ffe:	18 06       	cpc	r1, r24
    1000:	09 06       	cpc	r0, r25
    1002:	08 95       	ret

00001004 <__fp_pscB>:
    1004:	00 24       	eor	r0, r0
    1006:	0a 94       	dec	r0
    1008:	12 16       	cp	r1, r18
    100a:	13 06       	cpc	r1, r19
    100c:	14 06       	cpc	r1, r20
    100e:	05 06       	cpc	r0, r21
    1010:	08 95       	ret

00001012 <__fp_round>:
    1012:	09 2e       	mov	r0, r25
    1014:	03 94       	inc	r0
    1016:	00 0c       	add	r0, r0
    1018:	11 f4       	brne	.+4      	; 0x101e <__fp_round+0xc>
    101a:	88 23       	and	r24, r24
    101c:	52 f0       	brmi	.+20     	; 0x1032 <__fp_round+0x20>
    101e:	bb 0f       	add	r27, r27
    1020:	40 f4       	brcc	.+16     	; 0x1032 <__fp_round+0x20>
    1022:	bf 2b       	or	r27, r31
    1024:	11 f4       	brne	.+4      	; 0x102a <__fp_round+0x18>
    1026:	60 ff       	sbrs	r22, 0
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <__fp_round+0x20>
    102a:	6f 5f       	subi	r22, 0xFF	; 255
    102c:	7f 4f       	sbci	r23, 0xFF	; 255
    102e:	8f 4f       	sbci	r24, 0xFF	; 255
    1030:	9f 4f       	sbci	r25, 0xFF	; 255
    1032:	08 95       	ret

00001034 <__fp_split3>:
    1034:	57 fd       	sbrc	r21, 7
    1036:	90 58       	subi	r25, 0x80	; 128
    1038:	44 0f       	add	r20, r20
    103a:	55 1f       	adc	r21, r21
    103c:	59 f0       	breq	.+22     	; 0x1054 <__fp_splitA+0x10>
    103e:	5f 3f       	cpi	r21, 0xFF	; 255
    1040:	71 f0       	breq	.+28     	; 0x105e <__fp_splitA+0x1a>
    1042:	47 95       	ror	r20

00001044 <__fp_splitA>:
    1044:	88 0f       	add	r24, r24
    1046:	97 fb       	bst	r25, 7
    1048:	99 1f       	adc	r25, r25
    104a:	61 f0       	breq	.+24     	; 0x1064 <__fp_splitA+0x20>
    104c:	9f 3f       	cpi	r25, 0xFF	; 255
    104e:	79 f0       	breq	.+30     	; 0x106e <__fp_splitA+0x2a>
    1050:	87 95       	ror	r24
    1052:	08 95       	ret
    1054:	12 16       	cp	r1, r18
    1056:	13 06       	cpc	r1, r19
    1058:	14 06       	cpc	r1, r20
    105a:	55 1f       	adc	r21, r21
    105c:	f2 cf       	rjmp	.-28     	; 0x1042 <__fp_split3+0xe>
    105e:	46 95       	lsr	r20
    1060:	f1 df       	rcall	.-30     	; 0x1044 <__fp_splitA>
    1062:	08 c0       	rjmp	.+16     	; 0x1074 <__fp_splitA+0x30>
    1064:	16 16       	cp	r1, r22
    1066:	17 06       	cpc	r1, r23
    1068:	18 06       	cpc	r1, r24
    106a:	99 1f       	adc	r25, r25
    106c:	f1 cf       	rjmp	.-30     	; 0x1050 <__fp_splitA+0xc>
    106e:	86 95       	lsr	r24
    1070:	71 05       	cpc	r23, r1
    1072:	61 05       	cpc	r22, r1
    1074:	08 94       	sec
    1076:	08 95       	ret

00001078 <__fp_zero>:
    1078:	e8 94       	clt

0000107a <__fp_szero>:
    107a:	bb 27       	eor	r27, r27
    107c:	66 27       	eor	r22, r22
    107e:	77 27       	eor	r23, r23
    1080:	cb 01       	movw	r24, r22
    1082:	97 f9       	bld	r25, 7
    1084:	08 95       	ret

00001086 <__mulsf3>:
    1086:	0b d0       	rcall	.+22     	; 0x109e <__mulsf3x>
    1088:	c4 cf       	rjmp	.-120    	; 0x1012 <__fp_round>
    108a:	b5 df       	rcall	.-150    	; 0xff6 <__fp_pscA>
    108c:	28 f0       	brcs	.+10     	; 0x1098 <__mulsf3+0x12>
    108e:	ba df       	rcall	.-140    	; 0x1004 <__fp_pscB>
    1090:	18 f0       	brcs	.+6      	; 0x1098 <__mulsf3+0x12>
    1092:	95 23       	and	r25, r21
    1094:	09 f0       	breq	.+2      	; 0x1098 <__mulsf3+0x12>
    1096:	a6 cf       	rjmp	.-180    	; 0xfe4 <__fp_inf>
    1098:	ab cf       	rjmp	.-170    	; 0xff0 <__fp_nan>
    109a:	11 24       	eor	r1, r1
    109c:	ee cf       	rjmp	.-36     	; 0x107a <__fp_szero>

0000109e <__mulsf3x>:
    109e:	ca df       	rcall	.-108    	; 0x1034 <__fp_split3>
    10a0:	a0 f3       	brcs	.-24     	; 0x108a <__mulsf3+0x4>

000010a2 <__mulsf3_pse>:
    10a2:	95 9f       	mul	r25, r21
    10a4:	d1 f3       	breq	.-12     	; 0x109a <__mulsf3+0x14>
    10a6:	95 0f       	add	r25, r21
    10a8:	50 e0       	ldi	r21, 0x00	; 0
    10aa:	55 1f       	adc	r21, r21
    10ac:	62 9f       	mul	r22, r18
    10ae:	f0 01       	movw	r30, r0
    10b0:	72 9f       	mul	r23, r18
    10b2:	bb 27       	eor	r27, r27
    10b4:	f0 0d       	add	r31, r0
    10b6:	b1 1d       	adc	r27, r1
    10b8:	63 9f       	mul	r22, r19
    10ba:	aa 27       	eor	r26, r26
    10bc:	f0 0d       	add	r31, r0
    10be:	b1 1d       	adc	r27, r1
    10c0:	aa 1f       	adc	r26, r26
    10c2:	64 9f       	mul	r22, r20
    10c4:	66 27       	eor	r22, r22
    10c6:	b0 0d       	add	r27, r0
    10c8:	a1 1d       	adc	r26, r1
    10ca:	66 1f       	adc	r22, r22
    10cc:	82 9f       	mul	r24, r18
    10ce:	22 27       	eor	r18, r18
    10d0:	b0 0d       	add	r27, r0
    10d2:	a1 1d       	adc	r26, r1
    10d4:	62 1f       	adc	r22, r18
    10d6:	73 9f       	mul	r23, r19
    10d8:	b0 0d       	add	r27, r0
    10da:	a1 1d       	adc	r26, r1
    10dc:	62 1f       	adc	r22, r18
    10de:	83 9f       	mul	r24, r19
    10e0:	a0 0d       	add	r26, r0
    10e2:	61 1d       	adc	r22, r1
    10e4:	22 1f       	adc	r18, r18
    10e6:	74 9f       	mul	r23, r20
    10e8:	33 27       	eor	r19, r19
    10ea:	a0 0d       	add	r26, r0
    10ec:	61 1d       	adc	r22, r1
    10ee:	23 1f       	adc	r18, r19
    10f0:	84 9f       	mul	r24, r20
    10f2:	60 0d       	add	r22, r0
    10f4:	21 1d       	adc	r18, r1
    10f6:	82 2f       	mov	r24, r18
    10f8:	76 2f       	mov	r23, r22
    10fa:	6a 2f       	mov	r22, r26
    10fc:	11 24       	eor	r1, r1
    10fe:	9f 57       	subi	r25, 0x7F	; 127
    1100:	50 40       	sbci	r21, 0x00	; 0
    1102:	8a f0       	brmi	.+34     	; 0x1126 <__mulsf3_pse+0x84>
    1104:	e1 f0       	breq	.+56     	; 0x113e <__mulsf3_pse+0x9c>
    1106:	88 23       	and	r24, r24
    1108:	4a f0       	brmi	.+18     	; 0x111c <__mulsf3_pse+0x7a>
    110a:	ee 0f       	add	r30, r30
    110c:	ff 1f       	adc	r31, r31
    110e:	bb 1f       	adc	r27, r27
    1110:	66 1f       	adc	r22, r22
    1112:	77 1f       	adc	r23, r23
    1114:	88 1f       	adc	r24, r24
    1116:	91 50       	subi	r25, 0x01	; 1
    1118:	50 40       	sbci	r21, 0x00	; 0
    111a:	a9 f7       	brne	.-22     	; 0x1106 <__mulsf3_pse+0x64>
    111c:	9e 3f       	cpi	r25, 0xFE	; 254
    111e:	51 05       	cpc	r21, r1
    1120:	70 f0       	brcs	.+28     	; 0x113e <__mulsf3_pse+0x9c>
    1122:	60 cf       	rjmp	.-320    	; 0xfe4 <__fp_inf>
    1124:	aa cf       	rjmp	.-172    	; 0x107a <__fp_szero>
    1126:	5f 3f       	cpi	r21, 0xFF	; 255
    1128:	ec f3       	brlt	.-6      	; 0x1124 <__mulsf3_pse+0x82>
    112a:	98 3e       	cpi	r25, 0xE8	; 232
    112c:	dc f3       	brlt	.-10     	; 0x1124 <__mulsf3_pse+0x82>
    112e:	86 95       	lsr	r24
    1130:	77 95       	ror	r23
    1132:	67 95       	ror	r22
    1134:	b7 95       	ror	r27
    1136:	f7 95       	ror	r31
    1138:	e7 95       	ror	r30
    113a:	9f 5f       	subi	r25, 0xFF	; 255
    113c:	c1 f7       	brne	.-16     	; 0x112e <__mulsf3_pse+0x8c>
    113e:	fe 2b       	or	r31, r30
    1140:	88 0f       	add	r24, r24
    1142:	91 1d       	adc	r25, r1
    1144:	96 95       	lsr	r25
    1146:	87 95       	ror	r24
    1148:	97 f9       	bld	r25, 7
    114a:	08 95       	ret

0000114c <calloc>:
    114c:	0f 93       	push	r16
    114e:	1f 93       	push	r17
    1150:	cf 93       	push	r28
    1152:	df 93       	push	r29
    1154:	86 9f       	mul	r24, r22
    1156:	80 01       	movw	r16, r0
    1158:	87 9f       	mul	r24, r23
    115a:	10 0d       	add	r17, r0
    115c:	96 9f       	mul	r25, r22
    115e:	10 0d       	add	r17, r0
    1160:	11 24       	eor	r1, r1
    1162:	c8 01       	movw	r24, r16
    1164:	0d d0       	rcall	.+26     	; 0x1180 <malloc>
    1166:	ec 01       	movw	r28, r24
    1168:	00 97       	sbiw	r24, 0x00	; 0
    116a:	21 f0       	breq	.+8      	; 0x1174 <calloc+0x28>
    116c:	a8 01       	movw	r20, r16
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	2b d1       	rcall	.+598    	; 0x13ca <memset>
    1174:	ce 01       	movw	r24, r28
    1176:	df 91       	pop	r29
    1178:	cf 91       	pop	r28
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	08 95       	ret

00001180 <malloc>:
    1180:	0f 93       	push	r16
    1182:	1f 93       	push	r17
    1184:	cf 93       	push	r28
    1186:	df 93       	push	r29
    1188:	82 30       	cpi	r24, 0x02	; 2
    118a:	91 05       	cpc	r25, r1
    118c:	10 f4       	brcc	.+4      	; 0x1192 <malloc+0x12>
    118e:	82 e0       	ldi	r24, 0x02	; 2
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	e0 91 a5 02 	lds	r30, 0x02A5	; 0x8002a5 <__flp>
    1196:	f0 91 a6 02 	lds	r31, 0x02A6	; 0x8002a6 <__flp+0x1>
    119a:	20 e0       	ldi	r18, 0x00	; 0
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	a0 e0       	ldi	r26, 0x00	; 0
    11a0:	b0 e0       	ldi	r27, 0x00	; 0
    11a2:	30 97       	sbiw	r30, 0x00	; 0
    11a4:	19 f1       	breq	.+70     	; 0x11ec <malloc+0x6c>
    11a6:	40 81       	ld	r20, Z
    11a8:	51 81       	ldd	r21, Z+1	; 0x01
    11aa:	02 81       	ldd	r16, Z+2	; 0x02
    11ac:	13 81       	ldd	r17, Z+3	; 0x03
    11ae:	48 17       	cp	r20, r24
    11b0:	59 07       	cpc	r21, r25
    11b2:	c8 f0       	brcs	.+50     	; 0x11e6 <malloc+0x66>
    11b4:	84 17       	cp	r24, r20
    11b6:	95 07       	cpc	r25, r21
    11b8:	69 f4       	brne	.+26     	; 0x11d4 <malloc+0x54>
    11ba:	10 97       	sbiw	r26, 0x00	; 0
    11bc:	31 f0       	breq	.+12     	; 0x11ca <malloc+0x4a>
    11be:	12 96       	adiw	r26, 0x02	; 2
    11c0:	0c 93       	st	X, r16
    11c2:	12 97       	sbiw	r26, 0x02	; 2
    11c4:	13 96       	adiw	r26, 0x03	; 3
    11c6:	1c 93       	st	X, r17
    11c8:	27 c0       	rjmp	.+78     	; 0x1218 <malloc+0x98>
    11ca:	00 93 a5 02 	sts	0x02A5, r16	; 0x8002a5 <__flp>
    11ce:	10 93 a6 02 	sts	0x02A6, r17	; 0x8002a6 <__flp+0x1>
    11d2:	22 c0       	rjmp	.+68     	; 0x1218 <malloc+0x98>
    11d4:	21 15       	cp	r18, r1
    11d6:	31 05       	cpc	r19, r1
    11d8:	19 f0       	breq	.+6      	; 0x11e0 <malloc+0x60>
    11da:	42 17       	cp	r20, r18
    11dc:	53 07       	cpc	r21, r19
    11de:	18 f4       	brcc	.+6      	; 0x11e6 <malloc+0x66>
    11e0:	9a 01       	movw	r18, r20
    11e2:	bd 01       	movw	r22, r26
    11e4:	ef 01       	movw	r28, r30
    11e6:	df 01       	movw	r26, r30
    11e8:	f8 01       	movw	r30, r16
    11ea:	db cf       	rjmp	.-74     	; 0x11a2 <malloc+0x22>
    11ec:	21 15       	cp	r18, r1
    11ee:	31 05       	cpc	r19, r1
    11f0:	f9 f0       	breq	.+62     	; 0x1230 <malloc+0xb0>
    11f2:	28 1b       	sub	r18, r24
    11f4:	39 0b       	sbc	r19, r25
    11f6:	24 30       	cpi	r18, 0x04	; 4
    11f8:	31 05       	cpc	r19, r1
    11fa:	80 f4       	brcc	.+32     	; 0x121c <malloc+0x9c>
    11fc:	8a 81       	ldd	r24, Y+2	; 0x02
    11fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1200:	61 15       	cp	r22, r1
    1202:	71 05       	cpc	r23, r1
    1204:	21 f0       	breq	.+8      	; 0x120e <malloc+0x8e>
    1206:	fb 01       	movw	r30, r22
    1208:	93 83       	std	Z+3, r25	; 0x03
    120a:	82 83       	std	Z+2, r24	; 0x02
    120c:	04 c0       	rjmp	.+8      	; 0x1216 <malloc+0x96>
    120e:	90 93 a6 02 	sts	0x02A6, r25	; 0x8002a6 <__flp+0x1>
    1212:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <__flp>
    1216:	fe 01       	movw	r30, r28
    1218:	32 96       	adiw	r30, 0x02	; 2
    121a:	44 c0       	rjmp	.+136    	; 0x12a4 <malloc+0x124>
    121c:	fe 01       	movw	r30, r28
    121e:	e2 0f       	add	r30, r18
    1220:	f3 1f       	adc	r31, r19
    1222:	81 93       	st	Z+, r24
    1224:	91 93       	st	Z+, r25
    1226:	22 50       	subi	r18, 0x02	; 2
    1228:	31 09       	sbc	r19, r1
    122a:	39 83       	std	Y+1, r19	; 0x01
    122c:	28 83       	st	Y, r18
    122e:	3a c0       	rjmp	.+116    	; 0x12a4 <malloc+0x124>
    1230:	20 91 a3 02 	lds	r18, 0x02A3	; 0x8002a3 <__brkval>
    1234:	30 91 a4 02 	lds	r19, 0x02A4	; 0x8002a4 <__brkval+0x1>
    1238:	23 2b       	or	r18, r19
    123a:	41 f4       	brne	.+16     	; 0x124c <malloc+0xcc>
    123c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1240:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1244:	30 93 a4 02 	sts	0x02A4, r19	; 0x8002a4 <__brkval+0x1>
    1248:	20 93 a3 02 	sts	0x02A3, r18	; 0x8002a3 <__brkval>
    124c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1250:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1254:	21 15       	cp	r18, r1
    1256:	31 05       	cpc	r19, r1
    1258:	41 f4       	brne	.+16     	; 0x126a <malloc+0xea>
    125a:	2d b7       	in	r18, 0x3d	; 61
    125c:	3e b7       	in	r19, 0x3e	; 62
    125e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1262:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1266:	24 1b       	sub	r18, r20
    1268:	35 0b       	sbc	r19, r21
    126a:	e0 91 a3 02 	lds	r30, 0x02A3	; 0x8002a3 <__brkval>
    126e:	f0 91 a4 02 	lds	r31, 0x02A4	; 0x8002a4 <__brkval+0x1>
    1272:	e2 17       	cp	r30, r18
    1274:	f3 07       	cpc	r31, r19
    1276:	a0 f4       	brcc	.+40     	; 0x12a0 <malloc+0x120>
    1278:	2e 1b       	sub	r18, r30
    127a:	3f 0b       	sbc	r19, r31
    127c:	28 17       	cp	r18, r24
    127e:	39 07       	cpc	r19, r25
    1280:	78 f0       	brcs	.+30     	; 0x12a0 <malloc+0x120>
    1282:	ac 01       	movw	r20, r24
    1284:	4e 5f       	subi	r20, 0xFE	; 254
    1286:	5f 4f       	sbci	r21, 0xFF	; 255
    1288:	24 17       	cp	r18, r20
    128a:	35 07       	cpc	r19, r21
    128c:	48 f0       	brcs	.+18     	; 0x12a0 <malloc+0x120>
    128e:	4e 0f       	add	r20, r30
    1290:	5f 1f       	adc	r21, r31
    1292:	50 93 a4 02 	sts	0x02A4, r21	; 0x8002a4 <__brkval+0x1>
    1296:	40 93 a3 02 	sts	0x02A3, r20	; 0x8002a3 <__brkval>
    129a:	81 93       	st	Z+, r24
    129c:	91 93       	st	Z+, r25
    129e:	02 c0       	rjmp	.+4      	; 0x12a4 <malloc+0x124>
    12a0:	e0 e0       	ldi	r30, 0x00	; 0
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	cf 01       	movw	r24, r30
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	1f 91       	pop	r17
    12ac:	0f 91       	pop	r16
    12ae:	08 95       	ret

000012b0 <free>:
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	00 97       	sbiw	r24, 0x00	; 0
    12b6:	09 f4       	brne	.+2      	; 0x12ba <free+0xa>
    12b8:	81 c0       	rjmp	.+258    	; 0x13bc <free+0x10c>
    12ba:	fc 01       	movw	r30, r24
    12bc:	32 97       	sbiw	r30, 0x02	; 2
    12be:	13 82       	std	Z+3, r1	; 0x03
    12c0:	12 82       	std	Z+2, r1	; 0x02
    12c2:	a0 91 a5 02 	lds	r26, 0x02A5	; 0x8002a5 <__flp>
    12c6:	b0 91 a6 02 	lds	r27, 0x02A6	; 0x8002a6 <__flp+0x1>
    12ca:	10 97       	sbiw	r26, 0x00	; 0
    12cc:	81 f4       	brne	.+32     	; 0x12ee <free+0x3e>
    12ce:	20 81       	ld	r18, Z
    12d0:	31 81       	ldd	r19, Z+1	; 0x01
    12d2:	82 0f       	add	r24, r18
    12d4:	93 1f       	adc	r25, r19
    12d6:	20 91 a3 02 	lds	r18, 0x02A3	; 0x8002a3 <__brkval>
    12da:	30 91 a4 02 	lds	r19, 0x02A4	; 0x8002a4 <__brkval+0x1>
    12de:	28 17       	cp	r18, r24
    12e0:	39 07       	cpc	r19, r25
    12e2:	51 f5       	brne	.+84     	; 0x1338 <free+0x88>
    12e4:	f0 93 a4 02 	sts	0x02A4, r31	; 0x8002a4 <__brkval+0x1>
    12e8:	e0 93 a3 02 	sts	0x02A3, r30	; 0x8002a3 <__brkval>
    12ec:	67 c0       	rjmp	.+206    	; 0x13bc <free+0x10c>
    12ee:	ed 01       	movw	r28, r26
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	ce 17       	cp	r28, r30
    12f6:	df 07       	cpc	r29, r31
    12f8:	40 f4       	brcc	.+16     	; 0x130a <free+0x5a>
    12fa:	4a 81       	ldd	r20, Y+2	; 0x02
    12fc:	5b 81       	ldd	r21, Y+3	; 0x03
    12fe:	9e 01       	movw	r18, r28
    1300:	41 15       	cp	r20, r1
    1302:	51 05       	cpc	r21, r1
    1304:	f1 f0       	breq	.+60     	; 0x1342 <free+0x92>
    1306:	ea 01       	movw	r28, r20
    1308:	f5 cf       	rjmp	.-22     	; 0x12f4 <free+0x44>
    130a:	d3 83       	std	Z+3, r29	; 0x03
    130c:	c2 83       	std	Z+2, r28	; 0x02
    130e:	40 81       	ld	r20, Z
    1310:	51 81       	ldd	r21, Z+1	; 0x01
    1312:	84 0f       	add	r24, r20
    1314:	95 1f       	adc	r25, r21
    1316:	c8 17       	cp	r28, r24
    1318:	d9 07       	cpc	r29, r25
    131a:	59 f4       	brne	.+22     	; 0x1332 <free+0x82>
    131c:	88 81       	ld	r24, Y
    131e:	99 81       	ldd	r25, Y+1	; 0x01
    1320:	84 0f       	add	r24, r20
    1322:	95 1f       	adc	r25, r21
    1324:	02 96       	adiw	r24, 0x02	; 2
    1326:	91 83       	std	Z+1, r25	; 0x01
    1328:	80 83       	st	Z, r24
    132a:	8a 81       	ldd	r24, Y+2	; 0x02
    132c:	9b 81       	ldd	r25, Y+3	; 0x03
    132e:	93 83       	std	Z+3, r25	; 0x03
    1330:	82 83       	std	Z+2, r24	; 0x02
    1332:	21 15       	cp	r18, r1
    1334:	31 05       	cpc	r19, r1
    1336:	29 f4       	brne	.+10     	; 0x1342 <free+0x92>
    1338:	f0 93 a6 02 	sts	0x02A6, r31	; 0x8002a6 <__flp+0x1>
    133c:	e0 93 a5 02 	sts	0x02A5, r30	; 0x8002a5 <__flp>
    1340:	3d c0       	rjmp	.+122    	; 0x13bc <free+0x10c>
    1342:	e9 01       	movw	r28, r18
    1344:	fb 83       	std	Y+3, r31	; 0x03
    1346:	ea 83       	std	Y+2, r30	; 0x02
    1348:	49 91       	ld	r20, Y+
    134a:	59 91       	ld	r21, Y+
    134c:	c4 0f       	add	r28, r20
    134e:	d5 1f       	adc	r29, r21
    1350:	ec 17       	cp	r30, r28
    1352:	fd 07       	cpc	r31, r29
    1354:	61 f4       	brne	.+24     	; 0x136e <free+0xbe>
    1356:	80 81       	ld	r24, Z
    1358:	91 81       	ldd	r25, Z+1	; 0x01
    135a:	84 0f       	add	r24, r20
    135c:	95 1f       	adc	r25, r21
    135e:	02 96       	adiw	r24, 0x02	; 2
    1360:	e9 01       	movw	r28, r18
    1362:	99 83       	std	Y+1, r25	; 0x01
    1364:	88 83       	st	Y, r24
    1366:	82 81       	ldd	r24, Z+2	; 0x02
    1368:	93 81       	ldd	r25, Z+3	; 0x03
    136a:	9b 83       	std	Y+3, r25	; 0x03
    136c:	8a 83       	std	Y+2, r24	; 0x02
    136e:	e0 e0       	ldi	r30, 0x00	; 0
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	12 96       	adiw	r26, 0x02	; 2
    1374:	8d 91       	ld	r24, X+
    1376:	9c 91       	ld	r25, X
    1378:	13 97       	sbiw	r26, 0x03	; 3
    137a:	00 97       	sbiw	r24, 0x00	; 0
    137c:	19 f0       	breq	.+6      	; 0x1384 <free+0xd4>
    137e:	fd 01       	movw	r30, r26
    1380:	dc 01       	movw	r26, r24
    1382:	f7 cf       	rjmp	.-18     	; 0x1372 <free+0xc2>
    1384:	8d 91       	ld	r24, X+
    1386:	9c 91       	ld	r25, X
    1388:	11 97       	sbiw	r26, 0x01	; 1
    138a:	9d 01       	movw	r18, r26
    138c:	2e 5f       	subi	r18, 0xFE	; 254
    138e:	3f 4f       	sbci	r19, 0xFF	; 255
    1390:	82 0f       	add	r24, r18
    1392:	93 1f       	adc	r25, r19
    1394:	20 91 a3 02 	lds	r18, 0x02A3	; 0x8002a3 <__brkval>
    1398:	30 91 a4 02 	lds	r19, 0x02A4	; 0x8002a4 <__brkval+0x1>
    139c:	28 17       	cp	r18, r24
    139e:	39 07       	cpc	r19, r25
    13a0:	69 f4       	brne	.+26     	; 0x13bc <free+0x10c>
    13a2:	30 97       	sbiw	r30, 0x00	; 0
    13a4:	29 f4       	brne	.+10     	; 0x13b0 <free+0x100>
    13a6:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <__flp+0x1>
    13aa:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <__flp>
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <free+0x104>
    13b0:	13 82       	std	Z+3, r1	; 0x03
    13b2:	12 82       	std	Z+2, r1	; 0x02
    13b4:	b0 93 a4 02 	sts	0x02A4, r27	; 0x8002a4 <__brkval+0x1>
    13b8:	a0 93 a3 02 	sts	0x02A3, r26	; 0x8002a3 <__brkval>
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	08 95       	ret

000013c2 <abort>:
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	f8 94       	cli
    13c8:	37 c0       	rjmp	.+110    	; 0x1438 <_exit>

000013ca <memset>:
    13ca:	dc 01       	movw	r26, r24
    13cc:	01 c0       	rjmp	.+2      	; 0x13d0 <memset+0x6>
    13ce:	6d 93       	st	X+, r22
    13d0:	41 50       	subi	r20, 0x01	; 1
    13d2:	50 40       	sbci	r21, 0x00	; 0
    13d4:	e0 f7       	brcc	.-8      	; 0x13ce <memset+0x4>
    13d6:	08 95       	ret

000013d8 <puts>:
    13d8:	0f 93       	push	r16
    13da:	1f 93       	push	r17
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	e0 91 a9 02 	lds	r30, 0x02A9	; 0x8002a9 <__iob+0x2>
    13e4:	f0 91 aa 02 	lds	r31, 0x02AA	; 0x8002aa <__iob+0x3>
    13e8:	23 81       	ldd	r18, Z+3	; 0x03
    13ea:	21 ff       	sbrs	r18, 1
    13ec:	1b c0       	rjmp	.+54     	; 0x1424 <puts+0x4c>
    13ee:	8c 01       	movw	r16, r24
    13f0:	d0 e0       	ldi	r29, 0x00	; 0
    13f2:	c0 e0       	ldi	r28, 0x00	; 0
    13f4:	f8 01       	movw	r30, r16
    13f6:	81 91       	ld	r24, Z+
    13f8:	8f 01       	movw	r16, r30
    13fa:	60 91 a9 02 	lds	r22, 0x02A9	; 0x8002a9 <__iob+0x2>
    13fe:	70 91 aa 02 	lds	r23, 0x02AA	; 0x8002aa <__iob+0x3>
    1402:	db 01       	movw	r26, r22
    1404:	18 96       	adiw	r26, 0x08	; 8
    1406:	ed 91       	ld	r30, X+
    1408:	fc 91       	ld	r31, X
    140a:	19 97       	sbiw	r26, 0x09	; 9
    140c:	88 23       	and	r24, r24
    140e:	31 f0       	breq	.+12     	; 0x141c <puts+0x44>
    1410:	19 95       	eicall
    1412:	89 2b       	or	r24, r25
    1414:	79 f3       	breq	.-34     	; 0x13f4 <puts+0x1c>
    1416:	df ef       	ldi	r29, 0xFF	; 255
    1418:	cf ef       	ldi	r28, 0xFF	; 255
    141a:	ec cf       	rjmp	.-40     	; 0x13f4 <puts+0x1c>
    141c:	8a e0       	ldi	r24, 0x0A	; 10
    141e:	19 95       	eicall
    1420:	89 2b       	or	r24, r25
    1422:	19 f0       	breq	.+6      	; 0x142a <puts+0x52>
    1424:	8f ef       	ldi	r24, 0xFF	; 255
    1426:	9f ef       	ldi	r25, 0xFF	; 255
    1428:	02 c0       	rjmp	.+4      	; 0x142e <puts+0x56>
    142a:	8d 2f       	mov	r24, r29
    142c:	9c 2f       	mov	r25, r28
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	08 95       	ret

00001438 <_exit>:
    1438:	f8 94       	cli

0000143a <__stop_program>:
    143a:	ff cf       	rjmp	.-2      	; 0x143a <__stop_program>
