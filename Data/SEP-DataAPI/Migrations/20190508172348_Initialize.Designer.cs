// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SEP_DataAPI.Model;

namespace SEP_DataAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190508172348_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SEP_DataAPI.Model.Account", b =>
                {
                    b.Property<string>("Username")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(50);

                    b.Property<bool>("isAdmin")
                        .HasColumnName("isAdmin");

                    b.HasKey("Username");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.DateDim", b =>
                {
                    b.Property<int>("DimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Dim_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Day")
                        .HasColumnName("Day");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Month")
                        .HasColumnName("Month");

                    b.Property<int>("Quarter")
                        .HasColumnName("Quarter");

                    b.Property<int>("Week");

                    b.Property<int>("Year")
                        .HasColumnName("Year");

                    b.HasKey("DimId");

                    b.ToTable("Date_Dim");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.Fact", b =>
                {
                    b.Property<int>("FactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fact_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Co2")
                        .HasColumnName("CO2")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("DimId")
                        .HasColumnName("Dim_ID");

                    b.Property<int>("RoomId")
                        .HasColumnName("Room_ID");

                    b.Property<int>("SensorId")
                        .HasColumnName("Sensor_ID");

                    b.Property<double?>("TempC")
                        .HasColumnName("Temp_c");

                    b.Property<double?>("TempF")
                        .HasColumnName("Temp_f");

                    b.Property<int>("TimeId")
                        .HasColumnName("Time_ID");

                    b.HasKey("FactId");

                    b.HasIndex("DimId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SensorId");

                    b.HasIndex("TimeId");

                    b.ToTable("Facts");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.RoomDim", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Room_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("RoomId");

                    b.ToTable("Room_Dim");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.SensorDim", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Sensors_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SensorId");

                    b.ToTable("Sensor_Dim");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.TimeDim", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Dim_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Hour")
                        .HasColumnName("Hour");

                    b.Property<int>("Minute")
                        .HasColumnName("Minute");

                    b.Property<int>("Second")
                        .HasColumnName("Second");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("TimeId");

                    b.ToTable("Time_Dim");
                });

            modelBuilder.Entity("SEP_DataAPI.Model.Fact", b =>
                {
                    b.HasOne("SEP_DataAPI.Model.DateDim", "Date")
                        .WithMany("Facts")
                        .HasForeignKey("DimId")
                        .HasConstraintName("FK_Facts_Date_Dim");

                    b.HasOne("SEP_DataAPI.Model.RoomDim", "Room")
                        .WithMany("Facts")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Facts_Room_Dim");

                    b.HasOne("SEP_DataAPI.Model.SensorDim", "Sensor")
                        .WithMany("Facts")
                        .HasForeignKey("SensorId")
                        .HasConstraintName("FK_Facts_Sensor_Dim");

                    b.HasOne("SEP_DataAPI.Model.TimeDim", "Time")
                        .WithMany("Facts")
                        .HasForeignKey("TimeId")
                        .HasConstraintName("FK_Facts_Time_Dim");
                });
#pragma warning restore 612, 618
        }
    }
}
